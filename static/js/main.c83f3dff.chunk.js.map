{"version":3,"sources":["assets/images/logo.png","serviceWorker.js","state/index.js","constants/parameters.js","constants/palette.js","utils/getWeb3.js","assets/components/navigation.js","constants/operatives.js","assets/components/option.js","constants/calls/GraphQL.js","routes/profile.js","assets/components/charts/spline.js","assets/components/charts/bar.js","routes/poll.js","routes/feed.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","Boolean","window","location","hostname","match","initialState","polls","web3","undefined","auth","verified","store","createContext","Provider","CONTRACT_ADDRESS","WEEKDAYS","CHARTS","BAR_CONFIG","_data","_range","type","responsive","data","labels","datasets","borderColor","borderWidth","fill","options","legend","display","scales","xAxes","scaleLabel","labelString","ticks","suggestedMin","max","callback","label","index","toExponential","SPLINE_CONFIG","lineTension","bezierCurve","yAxes","id","min","gridLines","drawOnChartArea","SPLINE_STYLE","_gradient","backgroundColor","borderDash","borderDashOffset","pointBackgroundColor","pointBorderColor","pointHoverBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBorderWidth","pointRadius","CONTRACT_ABI","constant","inputs","name","outputs","payable","stateMutability","anonymous","indexed","providerOptions","walletconnect","package","WalletConnectProvider","infuraId","authereum","Authereum","getWeb3","Promise","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","resolve","reject","web3Connect","provider","wrap","_context","prev","next","Web3Connect","Core","network","cacheProvider","connect","sent","Web3","t0","stop","_x","_x2","apply","this","arguments","withRouter","props","_useState","useState","question","description","_useState2","slicedToArray","_useState3","create","about","_useState4","modal","setModal","_useState5","react_default","createElement","Login","_useState6","dropdownComponent","setDropdown","_useState7","_useState8","dropdownOpen","setDropdownOpen","_useState9","react","_useState10","navComponent","setNav","_useState11","_useState12","useRef","_useContext","useContext","dispatch","state","history","useHistory","initialiseWeb3","_initialiseWeb","_callee3","accounts","instance","_context3","eth","getAccounts","Contract","payload","Logout","account","LoggedIn","alert","selection","option","route","concat","length","push","objectSpread","defineProperty","dismiss","react_router_dom","to","DropdownItem","onClick","_ref2","className","src","makeBlockie","createPoll","_ref3","recentBlock","deadline","getBlock","timestamp","methods","newVoteProposal","current","value","send","from","on","hash","document","getElementsByClassName","useEffect","_ref4","_callee2","_context2","pathname","checkRoute","Row","Col","sm","md","size","offset","logo","Dropdown","isOpen","toggle","prevState","DropdownToggle","caret","DropdownMenu","divider","target","href","Modal","ModalHeader","aria-hidden","ModalBody","ref","placeholder","chartId","str","toConsumableArray","substring","reduceRight","res","_","__","arr","splice","Math","random","join","ETH","wei","parseInt","parseFloat","pow","toFixed","sortVotes","_yesVotes","_noVotes","totalVotes","unshift","getRecords","users","yes","no","voters","entries","map","address","forEach","isNaN","abrupt","createURL","string","replace","toLowerCase","slice","toChecksumAddress","keccak_256","ret","i","toUpperCase","QRCode","require","Option","ENS","title","burn","makeTransaction","amount","utils","toBN","mul","sendTransaction","modalToggle","modalState","ModalFooter","data-dismiss","modalOption","aria-label","QUERY_POLL","poll","QUERY_ISSUES","QUERY_ISSUE","QUERY_USER","user","makeRequest","query","fetch","body","method","headers","Content-Type","Accept","JSON","stringify","then","response","json","catch","console","log","getPolls","_getPolls","result","routeObject","issues","obj","getPollAddress","_getPollAddress","issueName","getPollMetadata","_x3","_getPollMetadata","_callee4","pollName","_context4","getProfileMetadata","_x4","_getProfileMetadata","_callee5","profileAddress","_context5","burned","burns","Profile","totalBurned","setBurned","userPolls","setPolls","setVotes","avgBurned","setAvg","useParams","profileMetadata","records","x","gatherProfile","makeRepeated","repeats","Array","Spline","_props$pollRecords","pollRecords","dataArray","maxValue","minValue","maxRange","ceil","minRange","ctx","getElementById","getContext","range","labelArray","gradientStroke","createLinearGradient","addColorStop","Chart","composeAndRender","Bar","_props$pollCount","pollCount","maximumValue","Poll","setRecords","pollOptions","setOptions","setCount","pollDescription","setDescription","graphState","setGraphState","setUnique","_useState13","_useState14","_useState15","_useState16","pollAuthor","setAuthor","_useState17","_useState18","pollTopic","setTopic","_useState19","_useState20","_useState21","_useState22","setOption","triggerModal","bool","_state$polls$id","issuer","optionAaddr","optionBaddr","pollMetadata","getMetadata","components_option","bar","spline","Feed","keys","reverse","routes_poll","key","RouteError","class","scrollTo","pollStream","retrievePolls","Container","components_navigation","react_router","path","component","exact","ReactDOM","render","children","_useReducer","useReducer","action","_useReducer2","basename","src_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c83f3dff.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.0a58105d.png\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { createContext, useReducer } from 'react';\n\nconst initialState = { polls: [], web3: undefined, auth: false, verified: false }\nconst store = createContext(initialState)\nconst { Provider } = store\n\nconst StateProvider = ( { children } ) => {\n  const [state, dispatch] = useReducer((state, action) => {\n    switch(action.type) {\n      case 'POLL':\n        return { ...state, polls: action.payload }\n      case 'WEB3':\n        return { ...state, ...action.payload }\n      default:\n        return state\n    };\n  }, initialState)\n\n  return <Provider value={{ state, dispatch }}>{children}</Provider>;\n};\n\nexport { store, StateProvider }\n","import { PINK_PRIMARY } from \"./palette.js\"\n\nexport const CONTRACT_ADDRESS = \"0x61a8598eabb7bddca95d3783c228878cd788e0a9\"\n\nexport const WEEKDAYS = ['Monday', 'Tuesday', 'Wendsday', 'Thursday', 'Friday', 'Saturday', 'Sunday' ]\nexport const CHARTS = {\n  BAR_CONFIG: (_data, _range) => ({\n    type: 'horizontalBar',\n    responsive: true,\n    data: {\n      labels: ['Yes','No' ],\n      datasets: [{\n        data: _data,\n        borderColor: PINK_PRIMARY,\n        borderWidth: 2,\n        fill: true\n      }]\n    },\n    options: {\n      legend: { display: false },\n      scales: {\n        xAxes: [{\n          scaleLabel: {\n            display: true,\n            labelString: \"Wei (ETH)\"\n          },\n          ticks: {\n            suggestedMin: 0,\n            max: _range,\n            callback: function(label, index, labels) {\n              if(label > 1e8 || label < (-1 * 1e8)){\n                 return label.toExponential()\n              } else return label;\n            }\n          }\n        }]\n      },\n    }\n  }),\n  SPLINE_CONFIG: (_data, _range) => ({\n    options: {\n      lineTension: 100,\n      bezierCurve: true,\n      legend: { display: false },\n      scales: {\n        yAxes: [{\n          id:'yAxis1',\n          scaleLabel: {\n            labelString: \"Wei (ETH)\",\n            display: true\n          },\n          ticks: {\n            min: (_range * -1),\n            max: _range,\n            callback: function(label, index, labels) {\n              if(label > 1e8 || label < (-1 * 1e8)){\n                return label.toExponential()\n              } else return label;\n            }\n          }\n        },\n        {\n          id:'yAxis2',\n          labels: ['', 'Yes', '', 'No', ''],\n          type:\"category\",\n          gridLines: {\n           drawOnChartArea: false,\n           display: false\n          },\n       }]\n      },\n    },\n    type: 'line',\n    data: _data,\n  }),\n  SPLINE_STYLE: _gradient => ({\n    label: \"Data\",\n    fill: true,\n    backgroundColor: _gradient,\n    borderColor: PINK_PRIMARY,\n    borderWidth: 2,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    pointBackgroundColor: PINK_PRIMARY,\n    pointBorderColor:'rgba(255,255,255,0)',\n    pointHoverBackgroundColor: PINK_PRIMARY,\n    pointBorderWidth: 20,\n    pointHoverRadius: 4,\n    pointHoverBorderWidth: 15,\n    pointRadius: 4,\n  })\n}\n\nexport const CONTRACT_ABI = [\n\t{\n\t\t\"constant\": false,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"name\": \"_name\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"_data\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"_deadline\",\n\t\t\t\t\"type\": \"uint64\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"newVoteProposal\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"name\": \"newProposal\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t}\n\t\t],\n\t\t\"payable\": false,\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"anonymous\": false,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"name\": \"proposal\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"name\": \"issuer\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"name\": \"deadline\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"name\": \"name\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"name\": \"data\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"name\": \"optionA\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"name\": \"optionAaddr\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"name\": \"optionB\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"name\": \"optionBaddr\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"newProposalIssued\",\n\t\t\"type\": \"event\"\n\t}\n]\n","export const PURPLE_PRIMARY = \"#7533ff\";\nexport const BLUE_PRIMARY = \"#338aff\";\nexport const RED_PRIMARY = \"#ff4233\";\nexport const PINK_PRIMARY = \"#d048b6\";\n","import Web3 from \"web3\";\nimport Web3Connect from \"web3connect\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport Authereum from \"authereum\";\n\nconst providerOptions = {\n  walletconnect: {\n    package: WalletConnectProvider,\n    options: {\n      infuraId: \"INFURA_ID\"\n    }\n  },\n  authereum: {\n    package: Authereum,\n    options: {}\n  }\n};\n\nconst getWeb3 = () => (\n  new Promise(async(resolve, reject) => {\n    try {\n      const web3Connect = new Web3Connect.Core({\n        network: \"mainnet\",\n        cacheProvider: true,\n        providerOptions\n      })\n      const provider = await web3Connect.connect()\n      const web3 = new Web3(provider)\n      resolve(web3)\n    } catch(e){\n      resolve(e)\n    }\n  })\n);\n\nexport default getWeb3;\n","import React, { Fragment, useContext, useState, useEffect, useRef } from 'react'\nimport { Dropdown, DropdownToggle, DropdownItem, DropdownMenu, DropdownItemButton,\n   Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport makeBlockie from 'ethereum-blockies-base64'\nimport { Link, useHistory, withRouter } from \"react-router-dom\"\nimport { Col, Row } from \"reactstrap\"\n\nimport { CONTRACT_ADDRESS, CONTRACT_ABI } from \"../../constants/parameters\"\nimport { store } from '../../state'\n\nimport getWeb3 from \"../../utils/getWeb3\"\nimport logo from \"../images/logo.png\"\n\nfunction Navigation(props) {\n  const [ focus, setFocus ] = useState({ question: false, description: false })\n  const [ modal, setModal ] = useState({ create: false, about: false })\n  const [ dropdownComponent, setDropdown ] = useState(<Login />)\n  const [ dropdownOpen, setDropdownOpen ] = useState(false)\n  const [ navComponent, setNav ] = useState(<Fragment />)\n  const [ address, setAddress ] = useState(\"\")\n  const description = useRef(null)\n  const question = useRef(null)\n\n  let { dispatch, state } = useContext(store)\n  let history = useHistory()\n\n  async function initialiseWeb3(){\n    try {\n      const web3 = await getWeb3()\n      const accounts = await web3.eth.getAccounts()\n      const instance = new web3.eth.Contract(\n        CONTRACT_ABI, CONTRACT_ADDRESS)\n      dispatch({\n        payload: {\n          web3, accounts, instance,\n          auth: true, verified: true\n        },\n        type: \"WEB3\"\n      })\n      setDropdown(<Logout account={accounts[0]}/>)\n      setNav(<LoggedIn account={accounts[0]}/>)\n    } catch(e) {\n      alert(\"Web3 login could not be detected\")\n    }\n  }\n\n  function Signout() {\n    dispatch({\n      payload: {\n        web3: false, auth: false, verified: false\n      },\n      type: \"WEB3\"\n    })\n    setDropdown(<Login />)\n    setNav(<Fragment />)\n  }\n\n  function selection(option) {\n  let route = `/${option}`\n  if(history[history.length-1] !== route){\n      history.push(route)\n  } setModal({\n      ...modal, [option]: true\n    })\n  }\n\n  function dismiss(option) {\n    history.push('/')\n    setModal({\n        ...modal, [option]: false\n    })\n  }\n\n  function Login() {\n    return(\n      <Link to=\"/login\">\n        <DropdownItem>Login</DropdownItem>\n      </Link>\n    )\n  }\n\n  function About() {\n    return(\n      <Modal isOpen={modal.about}>\n        <ModalHeader>\n           <h5 className=\"modal-title align-left\">About</h5>\n            <button type=\"button\" className=\"close\" onClick={() => dismiss('about')}>\n              <span aria-hidden=\"true\">&times;</span>\n            </button>\n        </ModalHeader>\n        <ModalBody>\n          <p>Burn Signal is an experiment in distributed preference signaling where verified unique\n          users burn ETH to signal their opinion.</p>\n          <p>Votes are weighted quadratically.</p>\n          <p>We use <a id='pink' target=\"_\" href=\"https://brightid.org\">BrightID</a> as our proof of uniqueness, only votes\n          cast by ethereum addresses that are verified unique by BrightID count towards the outcome of\n          a burn signals.</p><br/>\n          <p>Burn Signal is funded by grants and community contributions. If you would like to contribute\n          funds, check out our <a id='pink' target=\"_\" href=\"https://gitcoin.co/grants/138/burner-vote\">Gitcoin Grants campaign</a>,\n          if you would like to contribute code or other work, check out our <a id=\"pink\" target=\"_\" href=\"https://github.com/burnsignal\">\n          GitHub</a> and our <a id='pink' target=\"_\" href=\"https://colony.io/colony/burn\">Colony</a>.</p><br/>\n          <p>Check out our <a id='pink' target=\"_\" href=\"https://blog.burnsignal.io\"> blog </a> for more information.</p>\n        </ModalBody>\n      </Modal>\n     )\n  }\n\n  function Logout({ account }) {\n    return(\n      <Fragment>\n        <DropdownItem type=\"button\" onClick={() => selection('create')}> Create </DropdownItem>\n        <Link to={`/profile/${account}`}>\n          <DropdownItem> Profile </DropdownItem>\n        </Link>\n        <Link to=\"/logout\">\n          <DropdownItem>Logout</DropdownItem>\n        </Link>\n      </Fragment>\n    )\n  }\n\n  function LoggedIn({ account }) {\n    return(\n      <Link className=\"nav-link\" to={`/profile/${account}`}>\n        <img className=\"nav-profile\" src={makeBlockie(account)} />\n      </Link>\n    )\n  }\n\n  function Create() {\n    return(\n      <Modal isOpen={modal.create}>\n        <ModalHeader>\n          <h5 className=\"modal-title align-left\">Create</h5>\n          <button type=\"button\" className=\"close\" onClick={() => dismiss('create')}>\n            <span aria-hidden=\"true\">&times;</span>\n          </button>\n        </ModalHeader>\n        <ModalBody>\n          <input name=\"question\" ref={question} placeholder=\"What question is on your mind?\" className=\"create-poll-question\" />\n          <textarea name=\"description\" ref={description} placeholder=\"Description\" className=\"create-poll-description\" />\n          <button className=\"btn btn-primary button-poll\" onClick={createPoll}> Create </button>\n        </ModalBody>\n      </Modal>\n     )\n  }\n\n  const clearValues = () => {\n    document.getElementsByClassName(\"create-poll-description\")[0].value = \"\"\n    document.getElementsByClassName(\"create-poll-question\")[0].value = \"\"\n  }\n\n  const createPoll = async() => {\n    let { web3, instance, accounts } = state\n\n    const recentBlock = await web3.eth.getBlock(\"latest\")\n    const deadline = recentBlock.timestamp + 604800\n\n    await instance.methods.newVoteProposal(\n      question.current.value,\n      description.current.value,\n      deadline\n    ).send({\n      from: accounts[0]\n    }).on('transactionHash', (hash) => {\n      dismiss('create')\n      clearValues()\n    })\n  }\n\n  const toggle = () => setDropdownOpen(prevState => !prevState);\n\n    useEffect(() => {\n      const checkRoute = async() => {\n        if(props.location){\n          if(props.location.pathname.match('about')) selection('about')\n          else if(props.location.pathname.match('create')) selection('create')\n          else if(props.location.pathname.match('login')) {\n          initialiseWeb3()\n          history.push('/')\n        } else if(props.location.pathname.match('logout')) {\n            Signout()\n            history.push('/')\n          }\n        }\n      }\n     checkRoute()\n    }, [ props.location.pathname ])\n\n  return(\n    <Row>\n      <Col sm=\"12\" md={{ size: 8, offset: 2 }}>\n        <nav className=\"navbar navbar-expand-lg fixed-top col-sm-12 col-md-7\">\n        <div className=\"navbar-wrapper\">\n          <Link className=\"navbar-brand\" to=\"/\">\n            <img className=\"navbar-logo\" src={logo} />\n            <span className=\"navbar-title\"> Burn Signal </span>\n          </Link>\n        </div>\n        <div className=\"collapse navbar-collapse justify-content-end\">\n          <ul className=\"navbar-nav\">\n            <li className=\"nav-item\">\n              {navComponent}\n              <Dropdown isOpen={dropdownOpen} toggle={toggle}>\n                 <DropdownToggle caret>\n                   <i className=\"nav-login-icon tim-icons icon-minimal-down\"></i>\n                 </DropdownToggle>\n                 <DropdownMenu>\n                   <Link to=\"/\">\n                     <DropdownItem> Home </DropdownItem>\n                   </Link>\n                   {dropdownComponent}\n                   <DropdownItem divider />\n                   <DropdownItem type=\"button\" onClick={() => selection('about')}>About</DropdownItem>\n                   <DropdownItem target=\"_\" href=\"https://blog.burnsignal.io\">Blog</DropdownItem>\n                 </DropdownMenu>\n               </Dropdown>\n            </li>\n          </ul>\n        </div>\n      </nav>\n     </Col>\n    <About />\n    <Create />\n   </Row>\n  )\n}\n\nexport default withRouter(Navigation)\n","import { keccak_256, sha3_256 } from 'js-sha3'\n\nexport const chartId = str => [...str.substring(0, 10)].reduceRight((res,_,__,arr) => [...res,arr.splice(~~(Math.random()*arr.length),1)[0]],[]).join('');\n\nexport const ETH = wei => {\n  if(parseInt(wei) >= 1000000000000000) {\n    return `${parseFloat(wei/Math.pow(10,18)).toFixed(3)} ETH`\n  } else if(parseInt(wei) >= 1000000){\n    return `${(wei/1000000000).toFixed(3)} GWEI`\n  } else if(parseInt(wei) < 1000000) {\n    return `${parseFloat(wei).toFixed(2)} WEI`\n  }\n}\n\nexport const sortVotes = (_yesVotes, _noVotes) => {\n  let totalVotes = _yesVotes.concat(_noVotes);\n\n  totalVotes.unshift(0);\n\n  return totalVotes;\n}\n\nexport const getRecords = async(users) => {\n  var history = { yes: [], no: [], voters: [] }\n await Object.entries(users)\n       .map(([ index, value ]) => {\n        let { address, yes, no } = value\n\n        history.voters.push(address)\n        yes.value.forEach((value, index) => {\n          value = parseFloat(value)\n          if(isNaN(value)) value = 0\n          history.yes.push(value)\n        })\n        no.value.forEach((value, index) => {\n          value = parseFloat(value) * -1\n          if(isNaN(value)) value = 0\n          history.no.push(value)\n        })\n    })\n  return history\n}\n\nexport const createURL = string => {\n  string = string.replace(/([\\u2700-\\u27BF]|[\\uE000-\\uF8FF]|\\uD83C[\\uDC00-\\uDFFF]|\\uD83D[\\uDC00-\\uDFFF]|[\\u2011-\\u26FF]|\\uD83E[\\uDD10-\\uDDFF])/g, '');\n  string = string.replace(/ /g, '-').toLowerCase();\n\n  if(string.substring(string.length-1, string.length) === \"-\"){\n    string = string.slice(0, string.length-1)\n  } return string.replace('?', '');\n}\n\nexport const toChecksumAddress = (address) => {\n  address = address.toLowerCase().replace('0x', '')\n  var hash = keccak_256(address);\n  var ret = '0x'\n\n  for (var i = 0; i < address.length; i++) {\n    if (parseInt(hash[i], 16) >= 8) {\n      ret += address[i].toUpperCase()\n    } else {\n      ret += address[i]\n    }\n  }\n\n  return ret\n}\n\nexport const isAddress = (address) => {\n    if (!/^(0x)?[0-9a-f]{40}$/i.test(address)) {\n        // check if it has the basic requirements of an address\n        return false;\n    } else if (/^(0x)?[0-9a-f]{40}$/.test(address) || /^(0x)?[0-9A-F]{40}$/.test(address)) {\n        // If it's all small caps or all all caps, return true\n        return true;\n    } else {\n        // Otherwise check each case\n        return isChecksumAddress(address);\n    }\n};\n\nexport const isChecksumAddress = (address) => {\n    // Check each case\n    address = address.replace('0x','');\n    //var addressHash = sha3(address.toLowerCase());\n\tvar addressHash = sha3_256(address.toLowerCase());\n    for (var i = 0; i < 40; i++ ) {\n        // the nth letter should be uppercase if the nth digit of casemap is 1\n        if ((parseInt(addressHash[i], 16) > 7 && address[i].toUpperCase() !== address[i]) || (parseInt(addressHash[i], 16) <= 7 && address[i].toLowerCase() !== address[i])) {\n            return false;\n        }\n    }\n    return true;\n};\n\n\n// Code to process vote info. Should be easy to replace.\n// This is where BrightID check will be added.\n\nexport async function getVoteInfo(proposalData){\n  var anonymousDeposits = proposalData.data.anonymousDeposits;\n  var noDeposits = anonymousDeposits.length;\n  var voters = {};\n  var totalValue = 0;\n\n  // Check all the deposits for proposal\n  for(var i = 0;i < noDeposits;i++){\n\n    var yesValue = 0, noValue = 0;\n\n    // Add BrightID check. Don't count vote if not.??\n\n    if(anonymousDeposits[i].Choice === 'yes'){\n      yesValue = parseFloat(anonymousDeposits[i].ContriValue);\n    } else {\n      noValue = parseFloat(anonymousDeposits[i].ContriValue);\n    }\n\n    // Check if address has already been counted & initialise if not\n    if(voters[anonymousDeposits[i].SenderAddr] === undefined){\n      voters[anonymousDeposits[i].SenderAddr] = { yesTotalValue: yesValue, noTotalValue: noValue };\n    }else{\n      var newYesValue = voters[anonymousDeposits[i].SenderAddr].yesTotalValue + yesValue;\n      var newNoValue = voters[anonymousDeposits[i].SenderAddr].noTotalValue + noValue;\n      voters[anonymousDeposits[i].SenderAddr] = { yesTotalValue: newYesValue, noTotalValue: newNoValue };\n    }\n\n    totalValue += parseFloat(anonymousDeposits[i].ContriValue);\n  }\n\n  return { voters: voters, totalValue: totalValue}\n}\n","import React, { Fragment, useState, useContext, useEffect, useRef } from 'react'\nimport { Dropdown, DropdownToggle } from \"reactstrap\"\nimport { Col, Row, Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\n\nimport { createURL } from \"../../constants/operatives\"\nimport { PINK_PRIMARY } from \"../../constants/palette.js\"\nimport { store } from \"../../state\"\n\nconst QRCode = require('qrcode.react')\n\nfunction Option(props) {\n  const ENS = `${createURL(props.title)}.burnsignal.eth`\n  const burn = useRef(null)\n\n  let { state } = useContext(store)\n  let { title } = props\n\n  function Unauthenticated({ option }){\n    return(\n      <Fragment>\n        <ModalHeader>\n          <h5 className=\"modal-title\">{props.title}</h5>\n          <button type=\"button\" className=\"close\" onClick={props.modalToggle}>\n            <span aria-hidden=\"true\">&times;</span>\n          </button>\n        </ModalHeader>\n        <ModalBody className=\"align-center\">\n          Vote <span id=\"pink\">{option}</span> by sending any amount of ETH to <br/>\n          <a target=\"_\" href='https://etherscan.io'><span id=\"pink\">{option}</span>.{ENS}</a>\n          <div className=\"poll-qr\">\n            <QRCode value={props.address[option]} />\n          </div>\n          To ensure that you vote counts, please link your ethereum account\n          to your BrightID account at  <a target=\"_\" href=\"https://ethereum.brightid.org\">ethereum.brightid.org</a>\n        </ModalBody>\n      </Fragment>\n     )\n   }\n\n  function AuthenticatedAndVerified({ option }){\n    return(\n      <Fragment>\n        <ModalHeader>\n          <h5 className=\"modal-title\">{props.title}</h5>\n          <button type=\"button\" className=\"close\" onClick={props.modalToggle}>\n            <span aria-hidden=\"true\">&times;</span>\n          </button>\n        </ModalHeader>\n        <ModalBody>\n          <span className=\"vote-selection\"> How much ETH will you burn to cast your vote? </span>\n          <input type=\"number\" ref={burn} className=\"modal-input\" placeholder=\"0.5 ETH\"/>\n        </ModalBody>\n        <ModalFooter>\n          <button type=\"button\" className=\"btn btn-primary btn-verify\" data-dismiss=\"modal\" onClick={() => makeTransaction(option)}>\n            Vote {option}\n          </button>\n        </ModalFooter>\n      </Fragment>\n    )\n  }\n\n  function AuthenticatedAndUnverified(){\n    return(\n      <Fragment>\n        <ModalHeader>\n          <h5 className=\"modal-title\">Please verify your account</h5>\n          <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" onClick={props.dismiss}>\n            <span aria-hidden=\"true\">&times;</span>\n          </button>\n        </ModalHeader>\n        <ModalBody>\n          Before casting your vote, you should verify your Ethereum account using BrightID.\n        </ModalBody>\n        <ModalFooter>\n          <button type=\"button\" className=\"btn btn-primary btn-verify\" data-dismiss=\"modal\">\n            Verify\n          </button>\n        </ModalFooter>\n      </Fragment>\n     )\n  }\n\n  const makeTransaction = async(option) => {\n    let { web3 } = state\n\n    const amount = burn.current.value % 1 === 0 ?\n      web3.utils.toBN(parseFloat(burn.current.value)).mul(web3.utils.toBN(1e18)) :\n      parseInt(burn.current.value*Math.pow(10,18))\n\n    await web3.eth.sendTransaction({\n        to: props.address[option],\n        from: state.accounts[0],\n        value: amount\n      }).on('transactionHash' , () => {\n        props.modalToggle()\n      })\n  }\n\n\n  return (\n    <Fragment>\n      <Modal isOpen={props.modalState}>\n        { state.web3 && state.verified && (<AuthenticatedAndVerified option={props.modalOption} />) }\n        { !state.web3 && !state.verified && (< Unauthenticated option={props.modalOption} />) }\n        { state.web3 && !state.verified && (<AuthenticatedAndUnverified />) }\n      </Modal>\n    </Fragment>\n  )\n}\n\nexport default Option\n","import { createURL } from '../operatives'\n\nconst QUERY_POLL = poll => `{ polls(where: { id: \"${poll}\" }) { yes no users { address yes { contributions timestamps total value sqrt } no { contributions timestamps total value sqrt } } } }`\nconst QUERY_ISSUES = `{ issues(where: { title_not_contains: \"question\" }) { id poll body title issuer deadline optionBaddr optionAaddr } }`\nconst QUERY_ISSUE = title => `{ issues(where: { title: \"${title}\" }) { poll } }`\nconst BURN_SUBGRAPH_ENDPOINT = \"https://api.thegraph.com/subgraphs/name/burnsignal/proof-of-concept\"\nconst QUERY_USER = user => `{ user(id: \"${user.toLowerCase()}\") { burns polls burned } }`\n\nconst requestHeaders = body => ({\n  method: 'POST',\n  headers: {\n    'Content-Type': 'application/json',\n    'Accept': 'application/json',\n  }, body: JSON.stringify({\n    query: body\n  })\n})\n\nconst makeRequest = async(query) => {\n  return await fetch(BURN_SUBGRAPH_ENDPOINT,\n    { ...requestHeaders(query)})\n    .then(response =>\n      response.json())\n    .then(data => data)\n    .catch(console.log)\n}\n\nexport async function getPolls() {\n  const result = await makeRequest(QUERY_ISSUES)\n  const routeObject = {}\n\n  result.data.issues.forEach(obj => {\n    routeObject[createURL(obj.poll)] = { ...obj }\n  }); return routeObject;\n}\n\nexport async function getPollAddress(issueName){\n  const result = await makeRequest(QUERY_ISSUE(issueName))\n  if(result.data.issues.length == 0){\n    return { id: \"\" }\n  } else return result.data.issues[0].poll\n}\n\nexport async function getPollMetadata(pollName){\n  const result = await makeRequest(QUERY_POLL(pollName))\n  if(result.data.polls.length == 0){\n    return { yes: 0, no: 0, users: [] }\n  } else return result.data.polls[0]\n}\n\nexport async function getProfileMetadata(profileAddress){\n  const result = await makeRequest(QUERY_USER(profileAddress))\n  if(result.data.user === null){\n    return { burned: 0, polls: [], burns: [] }\n  } else return result.data.user\n}\n","import React, { useState, useContext, useEffect } from 'react';\nimport makeBlockie from 'ethereum-blockies-base64'\nimport { useParams, Link } from 'react-router-dom'\nimport { Row, Col } from \"reactstrap\"\n\nimport { ETH, toChecksumAddress, createURL } from '../constants/operatives'\nimport { getProfileMetadata, getPollAddress } from '../constants/calls/GraphQL'\nimport { store } from '../state'\n\nimport '../assets/css/profile.css'\n\nfunction Profile() {\n  const [ totalBurned, setBurned ] = useState(0)\n  const [ userPolls, setPolls ] = useState([])\n  const [ totalVotes, setVotes ] = useState(0)\n  const [ avgBurned, setAvg ] = useState(0)\n\n  let { address } = useParams()\n\n  useEffect(() => {\n    const gatherProfile = async() => {\n      var profileMetadata = await getProfileMetadata(address)\n      var records = []\n\n      let { burned, polls, burns } = profileMetadata\n\n      for(var x = 0; x < polls.length; x++){\n        var route = await getPollAddress(polls[x])\n        if(polls[x] != 'question'){\n          records.push({\n           address: route , title: polls[x]\n         })\n        }\n      }\n\n      setAvg(ETH(parseInt(burned)/burns.length))\n      setVotes(burns.length)\n      setBurned(ETH(burned))\n      setPolls(records)\n    }\n    gatherProfile()\n   }\n  , [])\n\n  return (\n    <div className=\"profile\">\n      <Row>\n        <Col sm=\"12\" md={{ size: 8, offset: 2 }}>\n          <div className=\"card\">\n            <div className=\"card-header\">\n              <Link to={`/profile/${address}`}>\n                <img className=\"profile-blockie\" src={makeBlockie(address)} />\n              </Link>\n              <div className=\"profile-stats\">\n                <div className=\"profile-address\">\n                  <a href={`https://etherscan.io/address/${address}`}>{toChecksumAddress(address)}</a>\n                </div>\n                <span className=\"profile-stat\">Burned: <span id=\"pink\">{totalBurned}</span> </span>\n                <span className=\"profile-stat\">Burns: <span id=\"pink\">{totalVotes}</span> </span>\n                <span className=\"profile-stat\">Average: <span id=\"pink\">{avgBurned}</span> </span>\n                <p className=\"profile-verified\">Verified: <span id=\"pink\">false</span> </p>\n              </div>\n            </div>\n          </div>\n        </Col>\n      </Row>\n      <Row>\n        <Col sm=\"12\" md={{ size: 8, offset: 2 }}>\n          <div className=\"card\">\n            <div className=\"card-header\">\n              <h3 className=\"card-category\">Polls</h3>\n            </div>\n            <div className=\"card-body\" />\n              <ul>\n              {userPolls.map(value => (\n                <Link to={`/poll/${value.address}`}>\n                  <li> {value.title} </li>\n                </Link>\n              ))}\n              </ul>\n          </div>\n        </Col>\n      </Row>\n   </div>\n  )\n}\n\nexport default Profile\n","import React, { Fragment, useEffect, useState } from 'react'\nimport Chart from 'chart.js'\n\nimport { WEEKDAYS, CHARTS } from \"../../../constants/parameters.js\"\nimport { sortVotes } from \"../../../constants/operatives.js\"\n\nconst makeRepeated = (arr, repeats) =>\n  [].concat(...Array.from({ length: repeats }, () => arr));\n\nfunction Spline(props){\n  let { chartId } = props\n\n  useEffect(() => {\n    const composeAndRender = () => {\n      let { yes, no } = props.pollRecords\n\n      const dataArray = sortVotes(yes, no)\n\n      var maxValue = Math.max(...dataArray)\n      var minValue = Math.min(...dataArray)\n      var maxRange = Math.ceil((((maxValue * 0.2) + maxValue) /10 ) * 10)\n      var minRange = Math.ceil((((minValue * 0.2) + minValue) /10 ) * 10) * -1\n\n      const ctx = document.getElementById(chartId).getContext(\"2d\")\n\n      let range = minRange > maxRange ? minRange : maxRange\n\n      const labelArray = dataArray.length > WEEKDAYS.length ?\n      makeRepeated(WEEKDAYS, parseInt(dataArray.length/WEEKDAYS.length)) :\n      WEEKDAYS.slice(0, dataArray.length)\n\n      var gradientStroke = ctx.createLinearGradient(0,337.5,0, 25)\n\n      gradientStroke.addColorStop(1, 'rgba(255,51,138,0.225)')\n      gradientStroke.addColorStop(0.7, 'rgba(255,51,138,0.2)')\n      gradientStroke.addColorStop(0.5, 'rgba(255,51,138,0.125)')\n      gradientStroke.addColorStop(0.2, 'rgba(255,51,138,0.075)')\n      gradientStroke.addColorStop(0, 'rgba(119,52,169,0)')\n\n      var data = {\n        labels: labelArray,\n        datasets: [{\n          ...CHARTS.SPLINE_STYLE(gradientStroke),\n          data: dataArray,\n        }]\n      }\n\n      new Chart(ctx, { ...CHARTS.SPLINE_CONFIG(data, range) })\n    }\n    composeAndRender()\n  }, [ ])\n\n  return(\n    <Fragment>\n      <canvas id={chartId}> </canvas>\n    </Fragment>\n  )\n}\n\nexport default Spline;\n","import React, { Fragment, useEffect, useState } from 'react'\nimport Chart from 'chart.js';\n\nimport { CHARTS } from \"../../../constants/parameters.js\";\n\nfunction Bar(props) {\n  const { chartId } = props;\n\n  useEffect(() => {\n    const composeAndRender = () => {\n      let { yes, no } = props.pollCount;\n\n      const ctx = document.getElementById(chartId).getContext(\"2d\")\n      const maximumValue = yes > no ? yes : no\n      const range = ( maximumValue * 0.20 ) + maximumValue\n      const data = [ yes, no ]\n\n      new Chart(ctx, { ...CHARTS.BAR_CONFIG(data, range) })\n    }\n    composeAndRender()\n  }, [ ])\n\n  return(\n    <Fragment>\n      <canvas id={chartId}> </canvas>\n    </Fragment>\n  );\n}\n\nexport default Bar;\n","import React, { Fragment, useContext, useState, useEffect } from 'react';\nimport { Link, useParams, useHistory } from \"react-router-dom\"\nimport makeBlockie from 'ethereum-blockies-base64'\nimport { Row, Col } from \"reactstrap\"\n\nimport { getVoteInfo, getRecords } from '../constants/operatives'\nimport { getPollMetadata } from \"../constants/calls/GraphQL\"\nimport { chartId, toChecksumAddress } from \"../constants/operatives\"\nimport { store } from '../state'\n\nimport Spline from '../assets/components/charts/spline'\nimport Option from '../assets/components/option'\nimport Bar from '../assets/components/charts/bar'\n\nimport \"../assets/css/poll.css\"\n\n\nfunction Poll(props){\n  const [ pollRecords, setRecords ] = useState({ yes: [], no: [] })\n  const [ pollOptions, setOptions ] = useState({ yes: \"\", no : \"\" })\n  const [ pollCount, setCount ] = useState({ yes: 0, no: 0 })\n  const [ pollDescription , setDescription ] = useState(\"\")\n  const [ graphState, setGraphState ] = useState(false)\n  const [ uniqueAddresses, setUnique ] = useState(0)\n  const [ totalPledged, setPledged ] = useState(0)\n  const [ pollAuthor, setAuthor ] = useState(\"0x\")\n  const [ pollTopic , setTopic ] = useState(\"\")\n  const [ modalState , setModal ] = useState(\"\")\n  const [ modalOption , setOption ] = useState(\"\")\n\n  let { state } = useContext(store)\n  let { address } = useParams()\n  let history = useHistory()\n\n  const id = props.location !== undefined ? address : props.id\n\n  const toggle = () => setModal(!modalState)\n\n  function triggerModal(option, bool) {\n    var route = `${props.location.pathname}/${option}`\n\n    if(bool && history[history.length-1] !== route){\n      history.push(route)\n    }\n    setOption(option)\n    toggle()\n  }\n\n  function dismiss() {\n    let route = props.location.pathname.replace('/yes', '')\n    route = route.replace('/no', '')\n    history.push(route)\n    toggle()\n  }\n\n  useEffect(() => {\n    const getMetadata = async() => {\n      if(state.polls[id] !== undefined){\n        let { title, body, issuer, optionAaddr, optionBaddr } = state.polls[id]\n        var pollMetadata = await getPollMetadata(title)\n\n        let { yes, users, no } = pollMetadata\n        let records = await getRecords(users)\n\n        setCount({ yes: parseInt(yes), no: parseInt(no) })\n        setOptions({ yes: optionAaddr, no: optionBaddr })\n        setAuthor(toChecksumAddress(issuer))\n        setUnique(records.voters.length)\n        setRecords({ ...records })\n        setDescription(body)\n        setGraphState(true)\n        setTopic(title)\n        }\n     }\n    getMetadata()\n  }, [ state.polls ])\n\n  useEffect(() => {\n    if(props.location){\n      if(props.location.pathname.match('yes')) triggerModal('yes', false)\n      else if(props.location.pathname.match('no')) triggerModal('no', false)\n    }\n  }, [])\n\n  return(\n     <div className=\"poll\">\n      <Row>\n      <Option modalOption={modalOption} modalToggle={dismiss} modalState={modalState} title={pollTopic} address={pollOptions} />\n        <Col sm=\"12\" md={{ size: 8, offset: 2 }}>\n          <div className=\"card\">\n            <div className=\"card-header\">\n              <Link className=\"poll-issuer\" to={`/profile/${pollAuthor}`}>\n                <img className=\"poll-profile\" src={makeBlockie(pollAuthor)} />\n              </Link>\n              <div className=\"poll-title\">{pollTopic}</div>\n            </div>\n            <div className=\"card-body\">\n              <div className=\"poll-description\">{pollDescription}</div>\n              <div className=\"vote-options\">\n                <button type=\"button\" className=\"btn btn-simple\" onClick={() => triggerModal(\"yes\", true)}>Yes</button>\n                <button type=\"button\" className=\"btn btn-simple\" onClick={() => triggerModal(\"no\", true)}>No</button>\n              </div>\n            </div>\n          </div>\n        </Col>\n      </Row>\n      <Row>\n        <Col sm=\"12\" md={{ size: 8, offset: 2 }}>\n          <div className=\"card\">\n            <div className=\"card-header\">\n              <h3 className=\"card-category\">Results</h3>\n            </div>\n            <div className=\"card-body\">\n              {graphState && (\n                <Bar chartId={chartId(id)} pollCount={pollCount}/>\n              )}\n            </div>\n          </div>\n        </Col>\n      </Row>\n      <Row>\n        <Col sm=\"12\" md={{ size: 8, offset: 2 }}>\n          <div className=\"card\">\n            <div className=\"card-header\">\n              <h3 className=\"card-category\">History</h3>\n            </div>\n            <div className=\"card-body\">\n              {graphState && (\n                <Spline chartId={chartId(id)} pollRecords={pollRecords} />\n              )}\n            </div>\n          </div>\n        </Col>\n      </Row>\n    </div>\n  )\n}\n\nexport default Poll\n","import React, { Fragment, useContext, useState, useEffect, useRef } from 'react';\nimport makeBlockie from 'ethereum-blockies-base64'\nimport { Link } from 'react-router-dom'\nimport { Row, Col } from \"reactstrap\"\n\nimport { store } from '../state'\nimport Poll from './poll';\n\nfunction Feed() {\n  const description = useRef(null)\n  const question = useRef(null)\n\n  let { state } = useContext(store)\n\n  function CreatePoll() {\n    return(\n      <Fragment>\n        <input ref={question} name=\"question\" placeholder=\"What question is on your mind?\" className=\"create-poll-question\" />\n        <textarea name=\"description\" ref={description} placeholder=\"Description\" className=\"create-poll-description\" />\n        <button className=\"btn btn-primary button-poll\" onClick={createPoll}> Create </button>\n      </Fragment>\n    )\n  }\n\n  const clearValues = () => {\n    document.getElementsByClassName(\"create-poll-description\")[0].value = \"\"\n    document.getElementsByClassName(\"create-poll-question\")[0].value = \"\"\n  }\n\n  const createPoll = async() => {\n    let { web3, instance, accounts } = state\n\n    const recentBlock = await web3.eth.getBlock(\"latest\")\n    const deadline = recentBlock.timestamp + 604800\n\n    await instance.methods.newVoteProposal(\n      question.current.value,\n      description.current.value,\n      deadline\n    ).send({\n      from: accounts[0]\n    }).on('transactionHash', (hash) => {\n      clearValues()\n    })\n  }\n\n  return (\n    <Fragment>\n      {state.web3 && (\n        <div className=\"new-poll\">\n          <Row>\n            <Col sm=\"12\" md={{ size: 8, offset: 2 }}>\n              <div className=\"card\">\n                <div className=\"card-header\" />\n                <div className=\"card-body\">\n                  <Link to={`/profile/${state.accounts[0]}`}>\n                    <img className=\"new-poll-profile\" src={makeBlockie(state.accounts[0])} />\n                  </Link>\n                  <CreatePoll />\n                </div>\n              </div>\n            </Col>\n          </Row>\n        </div>\n      )}\n      {Object.keys(state.polls).reverse().map((id, index) => (\n        <Link to={`/poll/${id}`}>\n          <Poll key={id} id={id}/>\n        </Link>\n      ))}\n    </Fragment>\n  )\n}\n\nexport default Feed\n","import React, { Fragment, useContext, useEffect } from \"react\";\nimport {  Switch, Route, HashRouter, withRouter, Link } from 'react-router-dom'\nimport { Container } from \"reactstrap\"\n\nimport \"./assets/libs/black-dashboard/assets/css/black-dashboard-react.css\"\nimport \"./assets/libs/black-dashboard/assets/css/nucleo-icons.css\"\nimport \"./assets/css/navigation.css\"\n\nimport Navigation from './assets/components/navigation'\nimport Option from './assets/components/option'\n\nimport { getPolls } from \"./constants/calls/GraphQL\"\nimport { store } from './state'\n\nimport Profile from './routes/profile'\nimport Poll from './routes/poll'\nimport Feed from './routes/feed'\n\nfunction RouteError(){\n  return(\n    <center>\n      <div class=\"page404\">\n        <h2> 404 not found </h2>\n        <label> Oops, looks like you've made a wrong turn... \n        <br /><Link to =\"/\"> Take me back! </Link></label>\n     </div>\n    </center>\n  )\n}\n\nfunction App(props) {\n  let { dispatch, state } = useContext(store)\n\n  useEffect(() => window.scrollTo(0, 0), [ props.location.pathname ])\n\n  useEffect(() => {\n    const retrievePolls = async() => {\n      var pollStream = await getPolls()\n      dispatch({\n        payload: pollStream,\n        type: \"POLL\"\n      })\n    }\n    retrievePolls()\n  }, [])\n\n  return (\n    <main>\n      <Container>\n        <Navigation />\n        <Switch>\n          <Route path=\"/poll/:address/:option?\" component={Poll} />\n          <Route path=\"/profile/:address\" component={Profile} />\n          <Route exact path=\"/\" component={Feed} />\n          <Route path=\"/logout\" component={Feed} />\n          <Route path=\"/login\" component={Feed} />\n          <Route path=\"/create\"component={Feed} />\n          <Route path=\"/about\" component={Feed}/>\n          <Route><RouteError /></Route>\n        </Switch>\n      </Container>\n    </main>\n  );\n}\n\nexport default withRouter(App);\n","import React, { Fragment } from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { HashRouter, Route } from 'react-router-dom'\nimport * as serviceWorker from './serviceWorker'\n\nimport { StateProvider } from './state'\nimport App from './App';\n\nReactDOM.render(\n  <StateProvider>\n    <HashRouter basename='/'>\n      <Fragment>\n        <App />\n      </Fragment>\n    </HashRouter>\n  </StateProvider>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister()\n"],"sourceRoot":""}