{"version":3,"sources":["assets/images/logo.png","serviceWorker.js","state/index.js","constants/parameters.js","constants/palette.js","utils/getWeb3.js","assets/components/navigation.js","constants/operatives.js","assets/components/option.js","constants/calls/REST.js","constants/calls/GraphQL.js","routes/profile.js","assets/components/charts/spline.js","assets/components/charts/bar.js","routes/poll.js","routes/feed.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","Boolean","window","location","hostname","match","initialState","polls","web3","undefined","auth","verified","store","createContext","Provider","CONTRACT_ADDRESS","CHARTS","BAR_CONFIG","_data","_range","type","responsive","data","labels","datasets","borderColor","borderWidth","fill","options","legend","display","scales","xAxes","scaleLabel","labelString","ticks","suggestedMin","callback","label","index","toExponential","SPLINE_CONFIG","dateCheck","lineTension","bezierCurve","time","unit","unitStepSize","displayFormats","millisecond","yAxes","id","min","max","gridLines","drawOnChartArea","SPLINE_STYLE","_gradient","backgroundColor","borderDash","borderDashOffset","pointBackgroundColor","pointBorderColor","pointHoverBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBorderWidth","pointRadius","CONTRACT_ABI","constant","inputs","name","outputs","payable","stateMutability","anonymous","indexed","providerOptions","walletconnect","package","WalletConnectProvider","infuraId","authereum","Authereum","getWeb3","Promise","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","resolve","reject","web3Connect","provider","wrap","_context","prev","next","Web3Connect","Core","network","cacheProvider","connect","sent","Web3","t0","stop","_x","_x2","apply","this","arguments","withRouter","props","_useState","useState","question","description","_useState2","slicedToArray","_useState3","create","about","_useState4","modal","setModal","_useState5","react_default","createElement","Login","_useState6","dropdownComponent","setDropdown","_useState7","_useState8","dropdownOpen","setDropdownOpen","_useState9","react","_useState10","navComponent","setNav","_useState11","_useState12","useRef","_useContext","useContext","dispatch","state","history","useHistory","initialiseWeb3","_initialiseWeb","_callee3","accounts","instance","_context3","eth","getAccounts","net","getId","Contract","objectSpread","Logout","account","LoggedIn","payload","alert","selection","option","route","concat","length","push","defineProperty","dismiss","react_router_dom","to","DropdownItem","onClick","_ref2","className","src","makeBlockie","createPoll","_ref3","recentBlock","deadline","getBlock","timestamp","methods","newVoteProposal","current","value","send","from","on","hash","document","getElementsByClassName","useEffect","_ref4","_callee2","_context2","pathname","checkRoute","Row","Col","sm","md","size","offset","logo","Dropdown","isOpen","toggle","prevState","DropdownToggle","caret","DropdownMenu","divider","target","href","Modal","ModalHeader","ModalBody","ModalFooter","aria-hidden","ref","placeholder","chartId","str","toConsumableArray","substring","reduceRight","res","_","__","arr","splice","Math","random","join","ETH","wei","parseInt","parseFloat","pow","toFixed","sortVotes","yes","no","totalVotes","x","sort","b","previous","sum","y","rangeVotes","getRecords","users","voters","entries","map","address","positive","negative","pluckArray","assign","abrupt","array","sign","rtrn","forEach","timestamps","coordinate","isNaN","toChecksumAddress","toLowerCase","replace","keccak_256","ret","i","toUpperCase","createURL","string","slice","QRCode","require","Option","ENS","title","burn","makeTransaction","amount","utils","toBN","mul","sendTransaction","modalToggle","modalState","data-dismiss","modalOption","aria-label","getETHPrice","fetch","method","then","response","json","catch","console","log","QUERY_POLL","poll","QUERY_ISSUES","QUERY_ISSUE","QUERY_USER","user","makeRequest","query","body","JSON","stringify","getPolls","_getPolls","result","routeObject","issues","reverse","obj","getPollAddress","_getPollAddress","issueName","getPollMetadata","_x3","_getPollMetadata","_callee4","pollName","_context4","getProfileMetadata","_x4","_getProfileMetadata","_callee5","profileAddress","_context5","burned","burns","Profile","totalBurned","setBurned","userPolls","setPolls","setVotes","avgBurned","setAvg","useParams","profileMetadata","records","gatherProfile","Spline","_props$pollRecords","pollRecords","_sortVotes","_sortVotes2","dataArray","rangeArray","minValue","maxValue","minRange","ceil","maxRange","ctx","getElementById","getContext","range","gradientStroke","createLinearGradient","addColorStop","startingValue","Date","now","startingDate","setMinutes","setSeconds","unshift","getTime","Chart","composeAndRender","Bar","_props$pollCount","pollCount","maximumValue","Poll","pollOptions","setOptions","setCount","pollDescription","setDescription","graphState","setGraphState","uniqueAddresses","setUnique","totalPledged","setPledged","_useState13","_useState14","pollAuthor","setAuthor","_useState15","_useState16","setRecords","_useState17","_useState18","setOption","_useState19","_useState20","_useState21","_useState22","pollTopic","setTopic","_useState23","_useState24","pledgedUSD","setUSD","triggerModal","bool","_state$polls$id","issuer","optionAaddr","optionBaddr","pollMetadata","ethValue","usdValue","total","price","getMetadata","components_option","bar","class","spline","Feed","keys","routes_poll","key","RouteError","scrollTo","priceMetadata","price_usd","retrievePolls","Container","components_navigation","react_router","path","component","exact","ReactDOM","render","children","_useReducer","useReducer","action","_useReducer2","basename","src_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.462fb932.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.0a58105d.png\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { createContext, useReducer } from 'react';\n\nconst initialState = { polls: [], web3: undefined, auth: false, verified: false }\nconst store = createContext(initialState)\nconst { Provider } = store\n\nconst StateProvider = ( { children } ) => {\n  const [state, dispatch] = useReducer((state, action) => {\n    switch(action.type) {\n      case 'POLL':\n        return { ...state, ...action.payload }\n      case 'WEB3':\n        return { ...state, ...action.payload }\n      default:\n        return state\n    };\n  }, initialState)\n\n  return <Provider value={{ state, dispatch }}>{children}</Provider>;\n};\n\nexport { store, StateProvider }\n","import { PINK_PRIMARY } from \"./palette.js\"\n\nexport const CONTRACT_ADDRESS = \"0x61a8598eabb7bddca95d3783c228878cd788e0a9\"\n\nexport const WEEKDAYS = ['Monday', 'Tuesday', 'Wendsday', 'Thursday', 'Friday', 'Saturday', 'Sunday' ]\nexport const CHARTS = {\n  BAR_CONFIG: (_data, _range) => ({\n    type: 'horizontalBar',\n    responsive: true,\n    data: {\n      labels: ['Yes','No' ],\n      datasets: [{\n        data: _data,\n        borderColor: PINK_PRIMARY,\n        borderWidth: 2,\n        fill: true\n      }]\n    },\n    options: {\n      legend: { display: false },\n      scales: {\n        xAxes: [{\n          scaleLabel: {\n            display: true,\n            labelString: \"Wei (ETH)\"\n          },\n          ticks: {\n            suggestedMin: 0,\n            callback: function(label, index, labels) {\n              if(label > 1e8 || label < (-1 * 1e8)){\n                 return label.toExponential()\n              } else return label;\n            }\n          }\n        }]\n      },\n    }\n  }),\n  SPLINE_CONFIG: (_data, _range) => {\n   var dateCheck = {}\n\n   return({\n    options: {\n      lineTension: 100,\n      bezierCurve: true,\n      legend: { display: false },\n      scales: {\n        xAxes: [{\n          type: 'time',\n          time: {\n            unit: 'millisecond',\n            unitStepSize: 21600000,\n            displayFormats: {\n              millisecond: 'MMM D'\n            },\n          },\n          ticks: {\n            callback: function(label, index, labels) {\n              if(dateCheck[label] === undefined || index == 0){\n                dateCheck[label] = true\n              } else {\n                label = \"\"\n              } return label\n            }\n          }\n        }],\n        yAxes: [{\n          id:'yAxis1',\n          scaleLabel: {\n            labelString: \"Wei (ETH)\",\n            display: true\n          },\n          ticks: {\n            min: (_range * -1),\n            max: _range,\n            callback: function(label, index, labels) {\n              if(label > 1e8 || label < (-1 * 1e8)){\n                return label.toExponential()\n              } else return label;\n            }\n          }\n        },\n        {\n          id:'yAxis2',\n          labels: ['', 'Yes', '', 'No', ''],\n          type:\"category\",\n          gridLines: {\n           drawOnChartArea: false,\n           display: false\n          },\n       }]\n      },\n    },\n    type: 'line',\n    data: _data,\n    })\n  },\n  SPLINE_STYLE: _gradient => ({\n    label: \"Data\",\n    fill: true,\n    backgroundColor: _gradient,\n    borderColor: PINK_PRIMARY,\n    borderWidth: 2,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    pointBackgroundColor: PINK_PRIMARY,\n    pointBorderColor:'rgba(255,255,255,0)',\n    pointHoverBackgroundColor: PINK_PRIMARY,\n    pointBorderWidth: 20,\n    pointHoverRadius: 4,\n    pointHoverBorderWidth: 15,\n    pointRadius: 4,\n  })\n}\n\nexport const CONTRACT_ABI = [\n\t{\n\t\t\"constant\": false,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"name\": \"_name\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"_data\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"_deadline\",\n\t\t\t\t\"type\": \"uint64\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"newVoteProposal\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"name\": \"newProposal\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t}\n\t\t],\n\t\t\"payable\": false,\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"anonymous\": false,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"name\": \"proposal\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"name\": \"issuer\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"name\": \"deadline\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"name\": \"name\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"name\": \"data\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"name\": \"optionA\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"name\": \"optionAaddr\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"name\": \"optionB\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"name\": \"optionBaddr\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"newProposalIssued\",\n\t\t\"type\": \"event\"\n\t}\n]\n","export const PURPLE_PRIMARY = \"#7533ff\";\nexport const BLUE_PRIMARY = \"#338aff\";\nexport const RED_PRIMARY = \"#ff4233\";\nexport const PINK_PRIMARY = \"#d048b6\";\n","import Web3 from \"web3\";\nimport Web3Connect from \"web3connect\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport Authereum from \"authereum\";\n\nconst providerOptions = {\n  walletconnect: {\n    package: WalletConnectProvider,\n    options: {\n      infuraId: \"INFURA_ID\"\n    }\n  },\n  authereum: {\n    package: Authereum,\n    options: {}\n  }\n};\n\nconst getWeb3 = () => (\n  new Promise(async(resolve, reject) => {\n    try {\n      const web3Connect = new Web3Connect.Core({\n        network: \"mainnet\",\n        cacheProvider: true,\n        providerOptions\n      })\n      const provider = await web3Connect.connect()\n      const web3 = new Web3(provider)\n      resolve(web3)\n    } catch(e){\n      resolve(e)\n    }\n  })\n);\n\nexport default getWeb3;\n","import React, { Fragment, useContext, useState, useEffect, useRef } from 'react'\nimport { Dropdown, DropdownToggle, DropdownItem, DropdownMenu, DropdownItemButton,\n   Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport makeBlockie from 'ethereum-blockies-base64'\nimport { Link, useHistory, withRouter } from \"react-router-dom\"\nimport { Col, Row } from \"reactstrap\"\n\nimport { CONTRACT_ADDRESS, CONTRACT_ABI } from \"../../constants/parameters\"\nimport { store } from '../../state'\n\nimport getWeb3 from \"../../utils/getWeb3\"\nimport logo from \"../images/logo.png\"\n\nfunction Navigation(props) {\n  const [ focus, setFocus ] = useState({ question: false, description: false, network: false })\n  const [ modal, setModal ] = useState({ create: false, about: false })\n  const [ dropdownComponent, setDropdown ] = useState(<Login />)\n  const [ dropdownOpen, setDropdownOpen ] = useState(false)\n  const [ navComponent, setNav ] = useState(<Fragment />)\n  const [ address, setAddress ] = useState(\"\")\n  const description = useRef(null)\n  const question = useRef(null)\n\n  let { dispatch, state } = useContext(store)\n  let history = useHistory()\n\n  async function initialiseWeb3(){\n    try {\n      const web3 = await getWeb3()\n      const accounts = await web3.eth.getAccounts()\n      const network = await web3.eth.net.getId()\n      const instance = new web3.eth.Contract(\n        CONTRACT_ABI, CONTRACT_ADDRESS)\n\n      if(network !== 4){\n        setModal({ ...modal, network: true  })\n      }\n\n      setDropdown(<Logout account={accounts[0]}/>)\n      setNav(<LoggedIn account={accounts[0]}/>)\n\n      dispatch({\n        payload: {\n          web3, accounts, instance,\n          auth: true, verified: true\n        },\n        type: \"WEB3\"\n      })\n    } catch(e) {\n      alert(\"Web3 login could not be detected\")\n    }\n  }\n\n  function Signout() {\n    dispatch({\n      payload: {\n        web3: false, auth: false, verified: false\n      },\n      type: \"WEB3\"\n    })\n    setDropdown(<Login />)\n    setNav(<Fragment />)\n  }\n\n  function selection(option) {\n  let route = `/${option}`\n  if(history[history.length-1] !== route){\n      history.push(route)\n  } setModal({\n      ...modal, [option]: true\n    })\n  }\n\n  function dismiss(option) {\n    history.push('/')\n    setModal({\n        ...modal, [option]: false\n    })\n  }\n\n  function Login() {\n    return(\n      <Link to=\"/login\">\n        <DropdownItem>Login</DropdownItem>\n      </Link>\n    )\n  }\n\n  function About() {\n    return(\n      <Modal isOpen={modal.about}>\n        <ModalHeader>\n           <h5 className=\"modal-title align-left\">About</h5>\n            <button type=\"button\" className=\"close\" onClick={() => dismiss('about')}>\n              <span aria-hidden=\"true\">&times;</span>\n            </button>\n        </ModalHeader>\n        <ModalBody>\n          <p>Burn Signal is an experiment in distributed preference signaling where verified unique\n          users burn ETH to signal their opinion.</p>\n          <p>Votes are weighted quadratically.</p>\n          <p>We use <a id='pink' target=\"_\" href=\"https://brightid.org\">BrightID</a> as our proof of uniqueness, only votes\n          cast by ethereum addresses that are verified unique by BrightID count towards the outcome of\n          a burn signals.</p><br/>\n          <p>Burn Signal is funded by grants and community contributions. If you would like to contribute\n          funds, check out our <a id='pink' target=\"_\" href=\"https://gitcoin.co/grants/138/burner-vote\">Gitcoin Grants campaign</a>,\n          if you would like to contribute code or other work, check out our <a id=\"pink\" target=\"_\" href=\"https://github.com/burnsignal\">\n          GitHub</a> and our <a id='pink' target=\"_\" href=\"https://colony.io/colony/burn\">Colony</a>.</p><br/>\n          <p>Check out our <a id='pink' target=\"_\" href=\"https://blog.burnsignal.io\"> blog </a> for more information.</p>\n        </ModalBody>\n        <ModalFooter />\n      </Modal>\n     )\n  }\n\n  function Logout({ account }) {\n    return(\n      <Fragment>\n        <DropdownItem type=\"button\" onClick={() => selection('create')}> Create </DropdownItem>\n        <Link to={`/profile/${account}`}>\n          <DropdownItem> Profile </DropdownItem>\n        </Link>\n        <Link to=\"/logout\">\n          <DropdownItem>Logout</DropdownItem>\n        </Link>\n      </Fragment>\n    )\n  }\n\n  function LoggedIn({ account }) {\n    return(\n      <Link className=\"nav-link\" to={`/profile/${account}`}>\n        <img className=\"nav-profile\" src={makeBlockie(account)} />\n      </Link>\n    )\n  }\n\n  function Create() {\n    return(\n      <Modal isOpen={modal.create}>\n        <ModalHeader>\n          <h5 className=\"modal-title align-left\">Create</h5>\n          <button type=\"button\" className=\"close\" onClick={() => dismiss('create')}>\n            <span aria-hidden=\"true\">&times;</span>\n          </button>\n        </ModalHeader>\n        <ModalBody>\n          <input name=\"question\" ref={question} placeholder=\"What question is on your mind?\" className=\"create-poll-question\" />\n          <textarea name=\"description\" ref={description} placeholder=\"Description\" className=\"create-poll-description\" />\n          <button className=\"btn btn-primary button-poll\" onClick={createPoll}> Create </button>\n        </ModalBody>\n        <ModalFooter />\n      </Modal>\n     )\n  }\n\n  function WrongNetwork() {\n    return(\n      <Modal isOpen={modal.network}>\n        <ModalHeader>\n          <h5 className=\"modal-title align-left\">Incorrect Network</h5>\n        </ModalHeader>\n        <ModalBody>\n          Your web3 provider is on the incorrect network, please change to\n          Rinkeby testnet to proceed.\n        </ModalBody>\n        <ModalFooter />\n      </Modal>\n     )\n  }\n\n  const clearValues = () => {\n    document.getElementsByClassName(\"create-poll-description\")[0].value = \"\"\n    document.getElementsByClassName(\"create-poll-question\")[0].value = \"\"\n  }\n\n  const createPoll = async() => {\n    let { web3, instance, accounts } = state\n\n    const recentBlock = await web3.eth.getBlock(\"latest\")\n    const deadline = recentBlock.timestamp + 604800\n\n    await instance.methods.newVoteProposal(\n      question.current.value,\n      description.current.value,\n      deadline\n    ).send({\n      from: accounts[0]\n    }).on('transactionHash', (hash) => {\n      dismiss('create')\n      clearValues()\n    })\n  }\n\n  const toggle = () => setDropdownOpen(prevState => !prevState);\n\n    useEffect(() => {\n      const checkRoute = async() => {\n        if(props.location){\n          if(props.location.pathname.match('about')) selection('about')\n          else if(props.location.pathname.match('create')) selection('create')\n          else if(props.location.pathname.match('login')) {\n          initialiseWeb3()\n          history.push('/')\n        } else if(props.location.pathname.match('logout')) {\n            Signout()\n            history.push('/')\n          }\n        }\n      }\n     checkRoute()\n    }, [ props.location.pathname ])\n\n  return(\n    <Row>\n      <Col sm=\"12\" md={{ size: 8, offset: 2 }}>\n        <nav className=\"navbar navbar-expand-lg fixed-top col-sm-12 col-md-7\">\n        <div className=\"navbar-wrapper\">\n          <Link className=\"navbar-brand\" to=\"/\">\n            <img className=\"navbar-logo\" src={logo} />\n            <span className=\"navbar-title\"> Burn Signal </span>\n          </Link>\n        </div>\n        <ul className=\"navbar-nav\">\n          <li className=\"nav-item\">\n              {navComponent}\n              <Dropdown isOpen={dropdownOpen} toggle={toggle}>\n                 <DropdownToggle caret>\n                   <i className=\"nav-login-icon tim-icons icon-minimal-down\"></i>\n                 </DropdownToggle>\n                 <DropdownMenu>\n                   <Link to=\"/\">\n                     <DropdownItem> Home </DropdownItem>\n                   </Link>\n                   {dropdownComponent}\n                   <DropdownItem divider />\n                   <DropdownItem type=\"button\" onClick={() => selection('about')}>About</DropdownItem>\n                   <DropdownItem target=\"_\" href=\"https://blog.burnsignal.io\">Blog</DropdownItem>\n                 </DropdownMenu>\n               </Dropdown>\n          </li>\n        </ul>\n      </nav>\n     </Col>\n    <WrongNetwork />\n    <About />\n    <Create />\n   </Row>\n  )\n}\n\nexport default withRouter(Navigation)\n","import { keccak_256, sha3_256 } from 'js-sha3'\n\nexport const chartId = str => [...str.substring(0, 10)].reduceRight((res,_,__,arr) => [...res,arr.splice(~~(Math.random()*arr.length),1)[0]],[]).join('');\n\nexport const ETH = wei => {\n  if(parseInt(wei) >= 1000000000000000) {\n    return `${parseFloat(wei/Math.pow(10,18)).toFixed(3)} ETH`\n  } else if(parseInt(wei) >= 1000000){\n    return `${(wei/1000000000).toFixed(0)} GWEI`\n  } else if(parseInt(wei) < 1000000) {\n    return `${parseFloat(wei).toFixed(0)} WEI`\n  }\n}\n\nexport const sortVotes = (yes, no) => {\n  let totalVotes = yes.concat(no);\n  let timespan = 2400000;\n  var x = 0;\n\n  totalVotes.sort((a,b) => { return a.x - b.x })\n\n  while(x < totalVotes.length){\n    const value = totalVotes[x]\n\n    if(x != 0){\n       const previous = totalVotes[x-1]\n\n       if((value.x - previous.x) <= timespan){\n         const sum = value.y + previous.y\n         const time = value.x\n\n         totalVotes[x-1] = { x: time, y: sum }\n         totalVotes.splice(x, 1)\n         x--\n       } else {\n        x++\n      }\n    } else {\n      x++\n    }\n  }\n\n  let rangeVotes = totalVotes\n  rangeVotes.sort((a,b) => { return a.y - b.y })\n\n  return [ totalVotes, rangeVotes ];\n}\n\nexport const getRecords = async(users) => {\n  var history = { yes: [], no: [], voters: [] }\n\n  await Object.entries(users).map(async([ index, value ]) => {\n    let { address, yes, no } = value\n\n    const positive = await pluckArray(yes, \"yes\", [])\n    const negative = await pluckArray(no, \"no\", [])\n\n    Object.assign(history.yes, history.yes.concat(positive))\n    Object.assign(history.no, history.no.concat(negative))\n    history.voters.push(address)\n  })\n\n  return history\n}\n\nconst pluckArray = (array, sign, rtrn) =>\n   new Promise(resolve =>  {\n    array.value.forEach((value, index) => {\n      const timestamp = array.timestamps[index]\n      var coordinate = parseFloat(value)\n\n      if(sign === \"no\") coordinate = coordinate * -1\n      if(isNaN(coordinate)) coordinate = 0\n\n      rtrn.push({\n        x: timestamp*1000,\n        y: coordinate\n      })\n    })\n   resolve(rtrn)\n })\n\nexport const toChecksumAddress = (address) => {\n  address = address.toLowerCase().replace('0x', '')\n  var hash = keccak_256(address);\n  var ret = '0x'\n\n  for (var i = 0; i < address.length; i++) {\n    if (parseInt(hash[i], 16) >= 8) {\n      ret += address[i].toUpperCase()\n    } else {\n      ret += address[i]\n    }\n  }\n\n  return ret\n}\n\nexport const isAddress = (address) => {\n    if (!/^(0x)?[0-9a-f]{40}$/i.test(address)) {\n        // check if it has the basic requirements of an address\n        return false;\n    } else if (/^(0x)?[0-9a-f]{40}$/.test(address) || /^(0x)?[0-9A-F]{40}$/.test(address)) {\n        // If it's all small caps or all all caps, return true\n        return true;\n    } else {\n        // Otherwise check each case\n        return isChecksumAddress(address);\n    }\n};\n\nexport const isChecksumAddress = (address) => {\n    // Check each case\n    address = address.replace('0x','');\n    //var addressHash = sha3(address.toLowerCase());\n\tvar addressHash = sha3_256(address.toLowerCase());\n    for (var i = 0; i < 40; i++ ) {\n        // the nth letter should be uppercase if the nth digit of casemap is 1\n        if ((parseInt(addressHash[i], 16) > 7 && address[i].toUpperCase() !== address[i]) || (parseInt(addressHash[i], 16) <= 7 && address[i].toLowerCase() !== address[i])) {\n            return false;\n        }\n    }\n    return true;\n};\n\n\n// Code to process vote info. Should be easy to replace.\n// This is where BrightID check will be added.\n\nexport async function getVoteInfo(proposalData){\n  var anonymousDeposits = proposalData.data.anonymousDeposits;\n  var noDeposits = anonymousDeposits.length;\n  var voters = {};\n  var totalValue = 0;\n\n  // Check all the deposits for proposal\n  for(var i = 0;i < noDeposits;i++){\n\n    var yesValue = 0, noValue = 0;\n\n    // Add BrightID check. Don't count vote if not.??\n\n    if(anonymousDeposits[i].Choice === 'yes'){\n      yesValue = parseFloat(anonymousDeposits[i].ContriValue);\n    } else {\n      noValue = parseFloat(anonymousDeposits[i].ContriValue);\n    }\n\n    // Check if address has already been counted & initialise if not\n    if(voters[anonymousDeposits[i].SenderAddr] === undefined){\n      voters[anonymousDeposits[i].SenderAddr] = { yesTotalValue: yesValue, noTotalValue: noValue };\n    }else{\n      var newYesValue = voters[anonymousDeposits[i].SenderAddr].yesTotalValue + yesValue;\n      var newNoValue = voters[anonymousDeposits[i].SenderAddr].noTotalValue + noValue;\n      voters[anonymousDeposits[i].SenderAddr] = { yesTotalValue: newYesValue, noTotalValue: newNoValue };\n    }\n\n    totalValue += parseFloat(anonymousDeposits[i].ContriValue);\n  }\n\n  return { voters: voters, totalValue: totalValue}\n}\n\nexport const createURL = string => {\n  string = string.replace(/([\\u2700-\\u27BF]|[\\uE000-\\uF8FF]|\\uD83C[\\uDC00-\\uDFFF]|\\uD83D[\\uDC00-\\uDFFF]|[\\u2011-\\u26FF]|\\uD83E[\\uDD10-\\uDDFF])/g, '');\n  string = string.replace(/ /g, '-').toLowerCase();\n\n  if(string.substring(string.length-1, string.length) === \"-\"){\n    string = string.slice(0, string.length-1)\n  } return string.replace('?', '');\n}\n","import React, { Fragment, useState, useContext, useEffect, useRef } from 'react'\nimport { Dropdown, DropdownToggle, Col, Row, Button, Modal, ModalHeader,\n  ModalBody, ModalFooter } from 'reactstrap';\n\nimport { createURL } from \"../../constants/operatives\"\nimport { store } from \"../../state\"\n\nconst QRCode = require('qrcode.react')\n\nfunction Option(props) {\n  const ENS = `${createURL(props.title)}.burnsignal.eth`\n  const burn = useRef(null)\n\n  let { state } = useContext(store)\n  let { title } = props\n\n  function Unauthenticated({ option }){\n    return(\n      <Fragment>\n        <ModalHeader>\n          <h5 className=\"modal-title\">{props.title}</h5>\n          <button type=\"button\" className=\"close\" onClick={props.modalToggle}>\n            <span aria-hidden=\"true\">&times;</span>\n          </button>\n        </ModalHeader>\n        <ModalBody className=\"align-center\">\n          Vote <span id=\"pink\">{option}</span> by sending any amount of ETH to <br/>\n          <a target=\"_\" href='https://etherscan.io'><span id=\"pink\">{option}</span>.{ENS}</a>\n          <div className=\"poll-qr\">\n            <QRCode value={props.address[option]} />\n          </div>\n          To ensure that you vote counts, please link your ethereum account\n          to your BrightID account at  <a target=\"_\" href=\"https://ethereum.brightid.org\">ethereum.brightid.org</a>\n        </ModalBody>\n      </Fragment>\n     )\n   }\n\n  function AuthenticatedAndVerified({ option }){\n    return(\n      <Fragment>\n        <ModalHeader>\n          <h5 className=\"modal-title\">{props.title}</h5>\n          <button type=\"button\" className=\"close\" onClick={props.modalToggle}>\n            <span aria-hidden=\"true\">&times;</span>\n          </button>\n        </ModalHeader>\n        <ModalBody>\n          <span className=\"vote-selection\"> How much ETH will you burn to cast your vote? </span>\n          <input type=\"number\" ref={burn} className=\"modal-input\" placeholder=\"0.5 ETH\"/>\n        </ModalBody>\n        <ModalFooter>\n          <button type=\"button\" className=\"btn btn-primary btn-verify\" data-dismiss=\"modal\" onClick={() => makeTransaction(option)}>\n            Vote {option}\n          </button>\n        </ModalFooter>\n      </Fragment>\n    )\n  }\n\n  function AuthenticatedAndUnverified(){\n    return(\n      <Fragment>\n        <ModalHeader>\n          <h5 className=\"modal-title\">Please verify your account</h5>\n          <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" onClick={props.dismiss}>\n            <span aria-hidden=\"true\">&times;</span>\n          </button>\n        </ModalHeader>\n        <ModalBody>\n          Before casting your vote, you should verify your Ethereum account using BrightID.\n        </ModalBody>\n        <ModalFooter>\n          <button type=\"button\" className=\"btn btn-primary btn-verify\" data-dismiss=\"modal\">\n            Verify\n          </button>\n        </ModalFooter>\n      </Fragment>\n     )\n  }\n\n  const makeTransaction = async(option) => {\n    let { web3 } = state\n\n    const amount = burn.current.value % 1 === 0 ?\n      web3.utils.toBN(parseFloat(burn.current.value)).mul(web3.utils.toBN(1e18)) :\n      parseInt(burn.current.value*Math.pow(10,18))\n\n    await web3.eth.sendTransaction({\n        to: props.address[option],\n        from: state.accounts[0],\n        value: amount\n      }).on('transactionHash' , () => {\n        props.modalToggle()\n      })\n  }\n\n\n  return (\n    <Fragment>\n      <Modal isOpen={props.modalState}>\n        { state.web3 && state.verified && (<AuthenticatedAndVerified option={props.modalOption} />) }\n        { !state.web3 && !state.verified && (< Unauthenticated option={props.modalOption} />) }\n        { state.web3 && !state.verified && (<AuthenticatedAndUnverified />) }\n      </Modal>\n    </Fragment>\n  )\n}\n\nexport default Option\n","const ETH_CALL = \"https://api.coinmarketcap.com/v1/ticker/ethereum/\"\n\nexport const getETHPrice = async() => {\n  return await fetch(ETH_CALL, {\n    method: 'GET',\n  }).then(response => response.json())\n  .then(data => data)\n  .catch(console.log)\n}\n","const QUERY_POLL = poll => `{ polls(where: { id: \"${poll}\" }) { yes no users { address yes { contributions timestamps total value sqrt } no { contributions timestamps total value sqrt } } } }`\nconst QUERY_ISSUES = `{ issues(where: { title_not_contains: \"question\" }) { id poll body title issuer deadline optionBaddr optionAaddr } }`\nconst QUERY_ISSUE = title => `{ issues(where: { title: \"${title}\" }) { poll } }`\nconst BURN_SUBGRAPH_ENDPOINT = \"https://api.thegraph.com/subgraphs/name/burnsignal/proof-of-concept\"\nconst QUERY_USER = user => `{ user(id: \"${user.toLowerCase()}\") { burns polls burned } }`\n\nconst requestHeaders = body => ({\n  method: 'POST',\n  body: JSON.stringify({\n    query: body\n  })\n})\n\nconst makeRequest = async(query) => {\n  return await fetch(BURN_SUBGRAPH_ENDPOINT,\n    { ...requestHeaders(query)})\n    .then(response =>\n      response.json())\n    .then(data => data)\n    .catch(console.log)\n}\n\nexport async function getPolls() {\n  let result = await makeRequest(QUERY_ISSUES)\n  const routeObject = {}\n\n  result.data.issues.reverse().forEach(obj => {\n    routeObject[obj.poll] = { ...obj }\n  }); return routeObject;\n}\n\nexport async function getPollAddress(issueName){\n  const result = await makeRequest(QUERY_ISSUE(issueName))\n  if(result.data.issues.length == 0){\n    return { id: \"\" }\n  } else return result.data.issues[0].poll\n}\n\nexport async function getPollMetadata(pollName){\n  const result = await makeRequest(QUERY_POLL(pollName))\n  if(result.data.polls.length == 0){\n    return { yes: 0, no: 0, users: [] }\n  } else return result.data.polls[0]\n}\n\nexport async function getProfileMetadata(profileAddress){\n  const result = await makeRequest(QUERY_USER(profileAddress))\n  if(result.data.user === null){\n    return { burned: 0, polls: [], burns: [] }\n  } else return result.data.user\n}\n","import React, { useState, useContext, useEffect } from 'react';\nimport makeBlockie from 'ethereum-blockies-base64'\nimport { useParams, Link } from 'react-router-dom'\nimport { Row, Col } from \"reactstrap\"\n\nimport { ETH, toChecksumAddress, createURL } from '../constants/operatives'\nimport { getProfileMetadata, getPollAddress } from '../constants/calls/GraphQL'\nimport { store } from '../state'\n\nfunction Profile() {\n  const [ totalBurned, setBurned ] = useState(0)\n  const [ userPolls, setPolls ] = useState([])\n  const [ totalVotes, setVotes ] = useState(0)\n  const [ avgBurned, setAvg ] = useState(0)\n\n  let { address } = useParams()\n\n  useEffect(() => {\n    const gatherProfile = async() => {\n      var profileMetadata = await getProfileMetadata(address)\n      var records = []\n\n      let { burned, polls, burns } = profileMetadata\n\n      for(var x = 0; x < polls.length; x++){\n        var route = await getPollAddress(polls[x])\n        if(polls[x] != 'question'){\n          records.push({\n           address: route , title: polls[x]\n         })\n        }\n      }\n\n      setAvg(ETH(parseInt(burned)/burns.length))\n      setVotes(burns.length)\n      setBurned(ETH(burned))\n      setPolls(records)\n    }\n    gatherProfile()\n   }\n  , [])\n\n  return (\n    <div className=\"profile\">\n      <Row>\n        <Col sm=\"12\" md={{ size: 8, offset: 2 }}>\n          <div className=\"card\">\n            <div className=\"card-header\">\n              <Link to={`/profile/${address}`}>\n                <img className=\"profile-blockie\" src={makeBlockie(address)} />\n                <div className=\"profile-address\">\n                  <a href={`https://etherscan.io/address/${address}`}>{toChecksumAddress(address)}</a>\n                </div>\n              </Link>\n              <div className=\"profile-stats\">\n                <span className=\"profile-stat\">Burned: <span id=\"pink\">{totalBurned}</span> </span>\n                <span className=\"profile-stat\">Burns: <span id=\"pink\">{totalVotes}</span> </span>\n                <span className=\"profile-stat\">Average: <span id=\"pink\">{avgBurned}</span> </span>\n                <p className=\"profile-verified\">Verified: <span id=\"pink\">false</span> </p>\n              </div>\n            </div>\n          </div>\n        </Col>\n      </Row>\n      <Row>\n        <Col sm=\"12\" md={{ size: 8, offset: 2 }}>\n          <div className=\"card\">\n            <div className=\"card-header\">\n              <h3 className=\"card-category\">Polls</h3>\n            </div>\n            <div className=\"card-body\" />\n              <ul>\n              {userPolls.map(value => (\n                <Link to={`/poll/${value.address}`}>\n                  <li> {value.title} </li>\n                </Link>\n              ))}\n              </ul>\n          </div>\n        </Col>\n      </Row>\n   </div>\n  )\n}\n\nexport default Profile\n","import React, { Fragment, useEffect, useState } from 'react'\nimport Chart from 'chart.js'\n\nimport { WEEKDAYS, CHARTS } from \"../../../constants/parameters.js\"\nimport { sortVotes } from \"../../../constants/operatives.js\"\n\nconst makeRepeated = (arr, repeats) =>\n  [].concat(...Array.from({ length: repeats }, () => arr));\n\nfunction Spline(props){\n  let { chartId } = props\n\n  useEffect(() => {\n    const composeAndRender = () => {\n      let { yes, no } = props.pollRecords\n\n      var [ dataArray, rangeArray ] = sortVotes(yes, no)\n\n      var minValue = rangeArray.length != 0 ? rangeArray[0].y : 0\n      var maxValue = rangeArray.length != 0 ? rangeArray[rangeArray.length-1].y : 0\n      var minRange = Math.ceil((((minValue * 0.2) + minValue) /10 ) * 10) * -1\n      var maxRange = Math.ceil((((maxValue * 0.2) + maxValue) /10 ) * 10)\n\n      const ctx = document.getElementById(chartId).getContext(\"2d\")\n\n      let range = minRange > maxRange ? minRange : maxRange\n\n      var gradientStroke = ctx.createLinearGradient(0,337.5,0, 25)\n\n      gradientStroke.addColorStop(1, 'rgba(255,51,138,0.225)')\n      gradientStroke.addColorStop(0.7, 'rgba(255,51,138,0.2)')\n      gradientStroke.addColorStop(0.5, 'rgba(255,51,138,0.125)')\n      gradientStroke.addColorStop(0.2, 'rgba(255,51,138,0.075)')\n      gradientStroke.addColorStop(0, 'rgba(119,52,169,0)')\n\n      dataArray.sort((a,b) => { return a.x - b.x })\n\n      var startingValue = dataArray.length != 0 ? dataArray[0].x - 4800000 : Date.now()\n      var startingDate = new Date(startingValue)\n      startingDate.setMinutes(0);\n      startingDate.setSeconds(0);\n\n      dataArray.unshift({\n        x: startingDate.getTime(), y: 0\n      })\n\n      dataArray.sort((a,b) => { return a.x - b.x })\n\n\n      console.log(dataArray)\n\n      var data = {\n        datasets: [{\n          ...CHARTS.SPLINE_STYLE(gradientStroke),\n          data: dataArray,\n        }]\n      }\n\n      new Chart(ctx, { ...CHARTS.SPLINE_CONFIG(data, range) })\n    }\n    composeAndRender()\n  }, [ ])\n\n  return(\n    <Fragment>\n      <canvas id={chartId}> </canvas>\n    </Fragment>\n  )\n}\n\nexport default Spline;\n","import React, { Fragment, useEffect, useState } from 'react'\nimport Chart from 'chart.js';\n\nimport { CHARTS } from \"../../../constants/parameters.js\";\n\nfunction Bar(props) {\n  const { chartId } = props;\n\n  useEffect(() => {\n    const composeAndRender = () => {\n      let { yes, no } = props.pollCount;\n\n      const ctx = document.getElementById(chartId).getContext(\"2d\")\n      const maximumValue = yes > no ? yes : no\n      const range = ( maximumValue * 0.20 ) + maximumValue\n      const data = [ yes, no ]\n\n      new Chart(ctx, { ...CHARTS.BAR_CONFIG(data, range) })\n    }\n    composeAndRender()\n  }, [ ])\n\n  return(\n    <Fragment>\n      <canvas id={chartId}> </canvas>\n    </Fragment>\n  );\n}\n\nexport default Bar;\n","import React, { Fragment, useContext, useState, useEffect } from 'react';\nimport { Link, useParams, useHistory } from \"react-router-dom\"\nimport makeBlockie from 'ethereum-blockies-base64'\nimport { Row, Col } from \"reactstrap\"\n\nimport { getVoteInfo, getRecords, ETH, chartId, toChecksumAddress } from '../constants/operatives'\nimport { getPollMetadata } from \"../constants/calls/GraphQL\"\nimport { store } from '../state'\n\nimport Spline from '../assets/components/charts/spline'\nimport Option from '../assets/components/option'\nimport Bar from '../assets/components/charts/bar'\n\nfunction Poll(props){\n  const [ pollOptions, setOptions ] = useState({ yes: \"\", no : \"\" })\n  const [ pollCount, setCount ] = useState({ yes: 0, no: 0 })\n  const [ pollDescription , setDescription ] = useState(\"\")\n  const [ graphState, setGraphState ] = useState(false)\n  const [ uniqueAddresses, setUnique ] = useState(0)\n  const [ totalPledged, setPledged ] = useState(0)\n  const [ pollAuthor, setAuthor ] = useState(\"0x\")\n  const [ pollRecords, setRecords ] = useState({})\n  const [ modalOption, setOption ] = useState(\"\")\n  const [ modalState, setModal ] = useState(\"\")\n  const [ pollTopic, setTopic ] = useState(\"\")\n  const [ pledgedUSD, setUSD ] = useState(0)\n\n  let { state } = useContext(store)\n  let { address } = useParams()\n  let history = useHistory()\n\n  const id = props.location !== undefined ? address : props.id\n\n  const toggle = () => setModal(!modalState)\n\n  function triggerModal(option, bool) {\n    var route = `${props.location.pathname}/${option}`\n\n    if(bool && history[history.length-1] !== route){\n      history.push(route)\n    }\n    setOption(option)\n    toggle()\n  }\n\n  function dismiss() {\n    let route = props.location.pathname.replace('/yes', '')\n    route = route.replace('/no', '')\n    history.push(route)\n    toggle()\n  }\n\n  useEffect(() => {\n    const getMetadata = async() => {\n      if(state.polls[id] !== undefined){\n        let { title, body, issuer, optionAaddr, optionBaddr } = state.polls[id]\n        var pollMetadata = await getPollMetadata(title)\n\n        let { yes, users, no } = pollMetadata\n        let ethValue = parseInt(yes) + parseInt(no)\n        let usdValue = state.price * ethValue/Math.pow(10,18)\n        let records = await getRecords(users)\n        let total = ETH(ethValue)\n\n        setCount({ yes: parseInt(yes), no: parseInt(no) })\n        setOptions({ yes: optionAaddr, no: optionBaddr })\n        setAuthor(toChecksumAddress(issuer))\n        setUnique(records.voters.length)\n        setUSD(usdValue.toFixed(2))\n        setRecords({ ...records })\n        setDescription(body)\n        setGraphState(true)\n        setPledged(total)\n        setTopic(title)\n        }\n     }\n    getMetadata()\n  }, [ state.polls ])\n\n  useEffect(() => {\n    if(props.location){\n      if(props.location.pathname.match('yes')) triggerModal('yes', false)\n      else if(props.location.pathname.match('no')) triggerModal('no', false)\n    }\n  }, [])\n\n  return(\n     <div className=\"poll\">\n      <Row>\n      <Option modalOption={modalOption} modalToggle={dismiss} modalState={modalState} title={pollTopic} address={pollOptions} />\n        <Col sm=\"12\" md={{ size: 8, offset: 2 }}>\n          <div className=\"card\">\n            <div className=\"card-header\">\n              <Link className=\"poll-issuer\" to={`/profile/${pollAuthor}`}>\n                <img className=\"poll-profile\" src={makeBlockie(pollAuthor)} />\n              </Link>\n              <div className=\"poll-title\">{pollTopic}</div>\n            </div>\n            <div className=\"card-body\">\n              <div className=\"poll-description\">{pollDescription}</div>\n              <div className=\"vote-options\">\n                <button type=\"button\" className=\"btn btn-simple\" onClick={() => triggerModal(\"yes\", true)}>Yes</button>\n                <button type=\"button\" className=\"btn btn-simple\" onClick={() => triggerModal(\"no\", true)}>No</button>\n              </div>\n            </div>\n          </div>\n        </Col>\n      </Row>\n      <Row>\n        <Col sm=\"12\" md={{ size: 8, offset: 2 }}>\n          <div className=\"card\">\n            <div className=\"card-header\">\n              <h3 className=\"card-category\">Results</h3>\n            </div>\n            <div className=\"card-body\">\n              {graphState && (\n                <Bar chartId={chartId(id)} pollCount={pollCount}/>\n              )}\n            </div>\n          </div>\n        </Col>\n      </Row>\n      <Row>\n        <Col sm=\"12\" md={{ size: 8, offset: 2 }}>\n          <div className=\"card\">\n            <div className=\"card-header\">\n              <h3 className=\"card-category\">Details</h3>\n            </div>\n            <div className=\"card-body\">\n              <div class=\"poll-details\">\n                <i id=\"pink\" className=\"tim-icons icon-single-02\"/>&nbsp;&nbsp;{uniqueAddresses}\n                <i id=\"pink\" className=\"tim-icons icon-wallet-43\"/>&nbsp;&nbsp;{totalPledged}\n                &nbsp;&nbsp;|&nbsp;&nbsp;${pledgedUSD}\n              </div>\n              {graphState && (\n                <Spline chartId={chartId(id)} pollRecords={pollRecords} />\n              )}\n            </div>\n          </div>\n        </Col>\n      </Row>\n    </div>\n  )\n}\n\nexport default Poll\n","import React, { Fragment, useContext, useState, useEffect, useRef } from 'react';\nimport makeBlockie from 'ethereum-blockies-base64'\nimport { Link } from 'react-router-dom'\nimport { Row, Col } from \"reactstrap\"\n\nimport { store } from '../state'\nimport Poll from './poll';\n\nfunction Feed() {\n  const description = useRef(null)\n  const question = useRef(null)\n\n  let { state } = useContext(store)\n\n  function CreatePoll() {\n    return(\n      <Fragment>\n        <input ref={question} name=\"question\" placeholder=\"What question is on your mind?\" className=\"create-poll-question\" />\n        <textarea name=\"description\" ref={description} placeholder=\"Description\" className=\"create-poll-description\" />\n        <button className=\"btn btn-primary button-poll\" onClick={createPoll}> Create </button>\n      </Fragment>\n    )\n  }\n\n  const clearValues = () => {\n    document.getElementsByClassName(\"create-poll-description\")[0].value = \"\"\n    document.getElementsByClassName(\"create-poll-question\")[0].value = \"\"\n  }\n\n  const createPoll = async() => {\n    let { web3, instance, accounts } = state\n\n    const recentBlock = await web3.eth.getBlock(\"latest\")\n    const deadline = recentBlock.timestamp + 604800\n\n    await instance.methods.newVoteProposal(\n      question.current.value,\n      description.current.value,\n      deadline\n    ).send({\n      from: accounts[0]\n    }).on('transactionHash', (hash) => {\n      clearValues()\n    })\n  }\n\n  return (\n    <Fragment>\n      {state.web3 && (\n        <div className=\"new-poll\">\n          <Row>\n            <Col sm=\"12\" md={{ size: 8, offset: 2 }}>\n              <div className=\"card\">\n                <div className=\"card-header\" />\n                <div className=\"card-body\">\n                  <Link to={`/profile/${state.accounts[0]}`}>\n                    <img className=\"new-poll-profile\" src={makeBlockie(state.accounts[0])} />\n                  </Link>\n                  <CreatePoll />\n                </div>\n              </div>\n            </Col>\n          </Row>\n        </div>\n      )}\n      {Object.keys(state.polls).reverse().map((id, index) => (\n        <Link to={`/poll/${id}`}>\n          <Poll key={id} id={id}/>\n        </Link>\n      ))}\n    </Fragment>\n  )\n}\n\nexport default Feed\n","import React, { Fragment, useContext, useEffect } from \"react\";\nimport {  Switch, Route, HashRouter, withRouter, Link } from 'react-router-dom'\nimport { Container } from \"reactstrap\"\n\nimport \"./assets/libs/black-dashboard/assets/css/black-dashboard-react.css\"\nimport \"./assets/libs/black-dashboard/assets/css/nucleo-icons.css\"\nimport \"./assets/css/navigation.css\"\nimport \"./assets/css/profile.css\"\nimport \"./assets/css/poll.css\"\nimport \"./assets/css/native.css\"\n\nimport Navigation from './assets/components/navigation'\nimport Option from './assets/components/option'\n\nimport { getETHPrice } from \"./constants/calls/REST\"\nimport { getPolls } from \"./constants/calls/GraphQL\"\nimport { store } from './state'\n\nimport Profile from './routes/profile'\nimport Poll from './routes/poll'\nimport Feed from './routes/feed'\n\nfunction RouteError(){\n  return(\n    <center>\n      <div class=\"page404\">\n        <h2> 404 not found </h2>\n        <label> Oops, looks like you've made a wrong turn...\n        <br /><Link to =\"/\"> Take me back! </Link></label>\n     </div>\n    </center>\n  )\n}\n\nfunction App(props) {\n  let { dispatch, state } = useContext(store)\n\n  useEffect(() => window.scrollTo(0, 0), [ props.location.pathname ])\n\n  useEffect(() => {\n    const retrievePolls = async() => {\n      var priceMetadata = await getETHPrice()\n      var price = parseFloat(priceMetadata[0].price_usd)\n      var polls = await getPolls()\n\n      dispatch({\n        payload: {\n          polls, price\n        },\n        type: \"POLL\"\n      })\n    }\n    retrievePolls()\n  }, [])\n\n  return (\n    <main>\n      <Container>\n        <Navigation />\n        <Switch>\n          <Route path=\"/poll/:address/:option?\" component={Poll} />\n          <Route path=\"/profile/:address\" component={Profile} />\n          <Route exact path=\"/\" component={Feed} />\n          <Route path=\"/logout\" component={Feed} />\n          <Route path=\"/login\" component={Feed} />\n          <Route path=\"/create\"component={Feed} />\n          <Route path=\"/about\" component={Feed}/>\n          <Route><RouteError /></Route>\n        </Switch>\n      </Container>\n    </main>\n  );\n}\n\nexport default withRouter(App);\n","import React, { Fragment } from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { HashRouter, Route } from 'react-router-dom'\nimport * as serviceWorker from './serviceWorker'\n\nimport { StateProvider } from './state'\nimport App from './App';\n\nReactDOM.render(\n  <StateProvider>\n    <HashRouter basename='/'>\n      <Fragment>\n        <App />\n      </Fragment>\n    </HashRouter>\n  </StateProvider>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister()\n"],"sourceRoot":""}