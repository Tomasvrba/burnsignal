{"version":3,"sources":["assets/images/logo.png","serviceWorker.js","state/index.js","utils/getWeb3.js","assets/components/navigation.js","constants/operatives.js","constants/palette.js","assets/components/option.js","constants/calls/GraphQL.js","routes/profile.js","constants/parameters.js","assets/components/charts/spline.js","assets/components/charts/bar.js","routes/poll.js","routes/feed.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","Boolean","window","location","hostname","match","initialState","polls","web3","undefined","auth","verified","store","createContext","Provider","providerOptions","walletconnect","package","WalletConnectProvider","options","infuraId","authereum","Authereum","getWeb3","Promise","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","resolve","reject","web3Connect","provider","wrap","_context","prev","next","Web3Connect","Core","network","cacheProvider","connect","sent","Web3","t0","stop","_x","_x2","apply","this","arguments","Navigation","_useState","useState","react_default","createElement","DropdownItem","onClick","_initialiseWeb","initialiseWeb3","_useState2","slicedToArray","dropdownComponent","setDropdown","_useState3","_useState4","dropdownOpen","setDropdownOpen","_useState5","react","_useState6","navComponent","setNav","_useState7","_useState8","_useContext","useContext","dispatch","accounts","eth","getAccounts","LoggedIn","account","Logout","payload","type","alert","react_router_dom","className","to","concat","src","makeBlockie","state","Row","Col","sm","md","size","offset","logo","Dropdown","isOpen","toggle","prevState","DropdownToggle","caret","DropdownMenu","divider","chartId","str","toConsumableArray","substring","reduceRight","res","_","__","arr","splice","Math","random","length","join","ETH","wei","parseInt","parseFloat","pow","toFixed","sortVotes","_yesVotes","_noVotes","totalVotes","sort","b","unshift","getRecords","users","history","yes","no","voters","entries","map","_ref2","_ref3","value","address","push","forEach","index","isNaN","abrupt","createURL","string","replace","toLowerCase","slice","toChecksumAddress","hash","keccak_256","ret","i","toUpperCase","QRCode","require","Option","props","ENS","title","Unauthenticated","option","data-dismiss","aria-label","dismiss","aria-hidden","id","href","AuthenticatedAndVerified","placeholder","class","AuthenticatedAndUnverified","tabIndex","role","QUERY_POLL","poll","QUERY_ISSUES","QUERY_USER","user","makeRequest","query","fetch","objectSpread","body","method","headers","Content-Type","Accept","JSON","stringify","then","response","json","data","catch","console","log","getPolls","_getPolls","_callee2","result","routeObject","_context2","issues","obj","getPollMetadata","_getPollMetadata","_callee3","pollName","_context3","getProfileMetadata","_x3","_getProfileMetadata","_callee4","profileAddress","_context4","burned","burns","Profile","totalBurned","setBurned","userPolls","setPolls","setVotes","avgBurned","setAvg","useParams","useEffect","profileMetadata","gatherProfile","WEEKDAYS","CHARTS","BAR_CONFIG","_data","_range","responsive","labels","datasets","borderColor","borderWidth","fill","legend","display","scales","xAxes","scaleLabel","labelString","ticks","suggestedMin","max","callback","label","toExponential","SPLINE_CONFIG","lineTension","bezierCurve","yAxes","min","gridLines","drawOnChartArea","SPLINE_STYLE","_gradient","backgroundColor","borderDash","borderDashOffset","pointBackgroundColor","pointBorderColor","pointHoverBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBorderWidth","pointRadius","makeRepeated","repeats","Array","from","Spline","_props$pollRecords","pollRecords","dataArray","maxValue","minValue","maxRange","ceil","minRange","ctx","document","getElementById","getContext","range","labelArray","gradientStroke","createLinearGradient","addColorStop","Chart","composeAndRender","Bar","_props$pollCount","pollCount","maximumValue","Poll","setRecords","pollOptions","setOptions","setCount","pollDescription","setDescription","_useState9","_useState10","graphState","setGraphState","_useState11","_useState12","setUnique","_useState13","_useState14","_useState15","_useState16","pollAuthor","setAuthor","_useState17","_useState18","pollTopic","setTopic","useHistory","selection","route","_state$polls$id","issuer","optionAaddr","optionBaddr","pollMetadata","records","getMetadata","data-target","data-toggle","bar","spline","components_option","pathname","Feed","keys","routes_poll","key","withRouter","scrollTo","pollStream","retrievePolls","Container","components_navigation","react_router","path","component","exact","ReactDOM","render","children","_useReducer","useReducer","action","_useReducer2","basename","src_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.edc672cf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.0a58105d.png\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { createContext, useReducer } from 'react';\n\nconst initialState = { polls: [], web3: undefined, auth: false, verified: false }\nconst store = createContext(initialState)\nconst { Provider } = store\n\nconst StateProvider = ( { children } ) => {\n  const [state, dispatch] = useReducer((state, action) => {\n    switch(action.type) {\n      case 'POLL':\n        return { ...state, polls: action.payload }\n      case 'WEB3':\n        return { ...state, web3: action.payload, auth: true }\n      default:\n        return state\n    };\n  }, initialState)\n\n  return <Provider value={{ state, dispatch }}>{children}</Provider>;\n};\n\nexport { store, StateProvider }\n","import Web3 from \"web3\";\nimport Web3Connect from \"web3connect\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport Authereum from \"authereum\";\n\nconst providerOptions = {\n  walletconnect: {\n    package: WalletConnectProvider,\n    options: {\n      infuraId: \"INFURA_ID\"\n    }\n  },\n  authereum: {\n    package: Authereum,\n    options: {}\n  }\n};\n\nconst getWeb3 = () => (\n  new Promise(async(resolve, reject) => {\n    try {\n      const web3Connect = new Web3Connect.Core({\n        network: \"mainnet\",\n        cacheProvider: true,\n        providerOptions\n      })\n      const provider = await web3Connect.connect()\n      const web3 = new Web3(provider)\n      resolve(web3)\n    } catch(e){\n      resolve(e)\n    }\n  })\n);\n\nexport default getWeb3;\n","import React, { Fragment, useContext, useState, useEffect } from 'react'\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\nimport makeBlockie from 'ethereum-blockies-base64'\nimport { Link } from 'react-router-dom'\nimport { Col, Row } from \"reactstrap\"\n\nimport getWeb3 from \"../../utils/getWeb3\"\nimport logo from \"../images/logo.png\"\nimport { store } from '../../state'\n\nfunction Navigation() {\n  const [ dropdownComponent, setDropdown ] = useState(<Login />)\n  const [ dropdownOpen, setDropdownOpen ] = useState(false);\n  const [ navComponent, setNav ] = useState(<Fragment />)\n  const [ address, setAddress ] = useState(\"\")\n\n  const toggle = () => setDropdownOpen(prevState => !prevState);\n\n  let { dispatch, state } = useContext(store)\n\n  async function initialiseWeb3(){\n    try {\n      const web3 = await getWeb3()\n      const accounts = await web3.eth.getAccounts()\n      setNav(<LoggedIn account={accounts[0]}/>)\n      setDropdown(<Logout />)\n      dispatch({\n        payload: web3,\n        type: \"WEB3\"\n      })\n    } catch(e) {\n      alert(\"Web3 login could not be detected\")\n    }\n  }\n\n  function Login() {\n    return(\n      <DropdownItem onClick={() => initialiseWeb3()}>Login</DropdownItem>\n    )\n  }\n\n  function Logout() {\n    return(\n      <Fragment>\n        <DropdownItem>Create</DropdownItem>\n        <DropdownItem>Logout</DropdownItem>\n      </Fragment>\n    )\n  }\n\n  function LoggedIn({ account }) {\n    return(\n      <Link className=\"nav-link\" to={`/profile/${account}`}>\n        <img className=\"nav-profile\" src={makeBlockie(account)} />\n      </Link>\n    )\n  }\n\n  return(\n    <Row>\n      <Col sm=\"12\" md={{ size: 8, offset: 2 }}>\n        <nav className=\"navbar navbar-expand-lg fixed-top col-sm-12 col-md-7\">\n        <div className=\"navbar-wrapper\">\n          <Link className=\"navbar-brand\" to=\"/\">\n            <img className=\"navbar-logo\" src={logo} />\n            <span className=\"navbar-title\"> Burn Signal </span>\n          </Link>\n        </div>\n        <div className=\"collapse navbar-collapse justify-content-end\">\n          <ul className=\"navbar-nav\">\n            <li className=\"nav-item\">\n              {navComponent}\n              <Dropdown isOpen={dropdownOpen} toggle={toggle}>\n                 <DropdownToggle caret>\n                   <i className=\"nav-login-icon tim-icons icon-minimal-down\"></i>\n                 </DropdownToggle>\n                 <DropdownMenu>\n                   <DropdownItem>Home</DropdownItem>\n                   {dropdownComponent}\n                   <DropdownItem divider />\n                   <DropdownItem>About</DropdownItem>\n                   <DropdownItem>Blog</DropdownItem>\n                 </DropdownMenu>\n               </Dropdown>\n            </li>\n          </ul>\n        </div>\n      </nav>\n     </Col>\n   </Row>\n  )\n}\n\nexport default Navigation\n","import { keccak_256, sha3_256 } from 'js-sha3'\n\nexport const chartId = str => [...str.substring(0, 10)].reduceRight((res,_,__,arr) => [...res,arr.splice(~~(Math.random()*arr.length),1)[0]],[]).join('');\n\nexport const ETH = wei => {\n  if(parseInt(wei) >= 1000000000000000) {\n    return `${parseFloat(wei/Math.pow(10,18)).toFixed(3)} ETH`\n  } else if(parseInt(wei) >= 1000000){\n    return `${(wei/1000000000).toFixed(3)} GWEI`\n  } else if(parseInt(wei) < 1000000) {\n    return `${parseFloat(wei).toFixed(2)} WEI`\n  }\n}\n\nexport const sortVotes = (_yesVotes, _noVotes) => {\n  let totalVotes = _yesVotes.concat(_noVotes);\n\n  totalVotes.sort((a,b) => { return a - b });\n  totalVotes.unshift(0);\n\n  return totalVotes;\n}\n\nexport const getRecords = async(users) => {\n  var history = { yes: [], no: [], voters: [] }\n await Object.entries(users)\n       .map(([ index, value ]) => {\n        let { address, yes, no } = value\n\n        history.voters.push(address)\n        yes.value.forEach((value, index) => {\n          value = parseFloat(value)\n          if(isNaN(value)) value = 0\n          history.yes.push(value)\n        })\n        no.value.forEach((value, index) => {\n          value = parseFloat(value) * -1\n          if(isNaN(value)) value = 0\n          history.no.push(value)\n        })\n    })\n  return history\n}\n\nexport const createURL = string => {\n  string = string.replace(/([\\u2700-\\u27BF]|[\\uE000-\\uF8FF]|\\uD83C[\\uDC00-\\uDFFF]|\\uD83D[\\uDC00-\\uDFFF]|[\\u2011-\\u26FF]|\\uD83E[\\uDD10-\\uDDFF])/g, '');\n  string = string.replace(/ /g, '-').toLowerCase();\n\n  if(string.substring(string.length-1, string.length) === \"-\"){\n    string = string.slice(0, string.length-1)\n  } return string.replace('?', '');\n}\n\nexport const toChecksumAddress = (address) => {\n  address = address.toLowerCase().replace('0x', '')\n  var hash = keccak_256(address);\n  var ret = '0x'\n\n  for (var i = 0; i < address.length; i++) {\n    if (parseInt(hash[i], 16) >= 8) {\n      ret += address[i].toUpperCase()\n    } else {\n      ret += address[i]\n    }\n  }\n\n  return ret\n}\n\nexport const isAddress = (address) => {\n    if (!/^(0x)?[0-9a-f]{40}$/i.test(address)) {\n        // check if it has the basic requirements of an address\n        return false;\n    } else if (/^(0x)?[0-9a-f]{40}$/.test(address) || /^(0x)?[0-9A-F]{40}$/.test(address)) {\n        // If it's all small caps or all all caps, return true\n        return true;\n    } else {\n        // Otherwise check each case\n        return isChecksumAddress(address);\n    }\n};\n\nexport const isChecksumAddress = (address) => {\n    // Check each case\n    address = address.replace('0x','');\n    //var addressHash = sha3(address.toLowerCase());\n\tvar addressHash = sha3_256(address.toLowerCase());\n    for (var i = 0; i < 40; i++ ) {\n        // the nth letter should be uppercase if the nth digit of casemap is 1\n        if ((parseInt(addressHash[i], 16) > 7 && address[i].toUpperCase() !== address[i]) || (parseInt(addressHash[i], 16) <= 7 && address[i].toLowerCase() !== address[i])) {\n            return false;\n        }\n    }\n    return true;\n};\n\n\n// Code to process vote info. Should be easy to replace.\n// This is where BrightID check will be added.\n\nexport async function getVoteInfo(proposalData){\n  var anonymousDeposits = proposalData.data.anonymousDeposits;\n  var noDeposits = anonymousDeposits.length;\n  var voters = {};\n  var totalValue = 0;\n\n  // Check all the deposits for proposal\n  for(var i = 0;i < noDeposits;i++){\n\n    var yesValue = 0, noValue = 0;\n\n    // Add BrightID check. Don't count vote if not.??\n\n    if(anonymousDeposits[i].Choice === 'yes'){\n      yesValue = parseFloat(anonymousDeposits[i].ContriValue);\n    } else {\n      noValue = parseFloat(anonymousDeposits[i].ContriValue);\n    }\n\n    // Check if address has already been counted & initialise if not\n    if(voters[anonymousDeposits[i].SenderAddr] === undefined){\n      voters[anonymousDeposits[i].SenderAddr] = { yesTotalValue: yesValue, noTotalValue: noValue };\n    }else{\n      var newYesValue = voters[anonymousDeposits[i].SenderAddr].yesTotalValue + yesValue;\n      var newNoValue = voters[anonymousDeposits[i].SenderAddr].noTotalValue + noValue;\n      voters[anonymousDeposits[i].SenderAddr] = { yesTotalValue: newYesValue, noTotalValue: newNoValue };\n    }\n\n    totalValue += parseFloat(anonymousDeposits[i].ContriValue);\n  }\n\n  return { voters: voters, totalValue: totalValue}\n}\n","export const PURPLE_PRIMARY = \"#7533ff\";\nexport const BLUE_PRIMARY = \"#338aff\";\nexport const RED_PRIMARY = \"#ff4233\";\nexport const PINK_PRIMARY = \"#d048b6\";\n","import React, { Fragment, useState, useContext } from 'react'\nimport { Dropdown, DropdownToggle } from \"reactstrap\"\nimport { Col, Row } from \"reactstrap\"\n\nimport { createURL } from \"../../constants/operatives\"\nimport { PINK_PRIMARY } from \"../../constants/palette.js\"\nimport { store } from \"../../state\"\n\nconst QRCode = require('qrcode.react')\n\nfunction Option(props) {\n  const ENS = `${createURL(props.title)}.burnsignal.eth`\n  let { state } = useContext(store)\n  let { title } = props\n\n  function Unauthenticated({ option }){\n    return(\n      <div className=\"modal-content\">\n        <div className=\"modal-header\">\n          <h5 className=\"modal-title\">{props.title}</h5>\n          <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" onClick={props.dismiss}>\n            <span aria-hidden=\"true\">&times;</span>\n          </button>\n        </div>\n        <div className=\"modal-body\">\n          Vote <span id=\"pink\">{option}</span> by sending any amount of ETH to <br/>\n          <a href='https://etherscan.io'><span id=\"pink\">{option}</span>.{ENS}</a>\n          <div className=\"poll-qr\">\n            <QRCode value={props.address[option]} />\n          </div>\n          To ensure that you vote counts, please link your ethereum account\n          to your BrightID account at  <a href=\"https://ethereum.brightid.org\">ethereum.brightid.org</a>\n        </div>\n      </div>\n     )\n   }\n\n  function AuthenticatedAndVerified({ option }){\n    return(\n      <div className=\"modal-content\">\n        <div className=\"modal-header\">\n          <h5 className=\"modal-title\">{props.title}</h5>\n          <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" onClick={props.dismiss}>\n            <span aria-hidden=\"true\">&times;</span>\n          </button>\n        </div>\n        <div className=\"modal-body\">\n          <span className=\"vote-selection\"> How much ETH will you burn to cast your vote? </span>\n          <input className=\"modal-input\" placeholder=\"0.5 ETH\"/>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"button\" className=\"btn btn-primary btn-verify\" data-dismiss=\"modal\">\n            Vote {option}\n          </button>\n        </div>\n      </div>\n    )\n  }\n\n  function AuthenticatedAndUnverified(){\n    return(\n      <div className=\"modal-content\">\n        <div className=\"modal-header\">\n          <h5 className=\"modal-title\">Please verify your account</h5>\n          <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" onClick={props.dismiss}>\n            <span aria-hidden=\"true\">&times;</span>\n          </button>\n        </div>\n        <div className=\"modal-body\">\n          Before casting your vote, you should verify your Ethereum account using BrightID.\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"button\" className=\"btn btn-primary btn-verify\" data-dismiss=\"modal\">\n            Verify\n          </button>\n        </div>\n      </div>\n     )\n  }\n\n  return (\n    <Fragment>\n      <div className=\"modal fade\" id=\"yes\" tabIndex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\n        <div className=\"modal-dialog\" role=\"document\">\n          { state.auth && state.verified && (<AuthenticatedAndVerified option=\"yes\" />) }\n          { !state.auth && !state.verified && (< Unauthenticated option=\"yes\"/>) }\n          { state.auth && !state.verified && (<AuthenticatedAndUnverified />) }\n        </div>\n      </div>\n      <div className=\"modal fade\" id=\"no\" tabIndex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\n        <div className=\"modal-dialog\" role=\"document\">\n          { state.auth && state.verified && (<AuthenticatedAndVerified option=\"no\" />) }\n          { !state.auth && !state.verified && (< Unauthenticated option=\"no\"/>) }\n          { state.auth && !state.verified && (<AuthenticatedAndUnverified />) }\n        </div>\n      </div>\n    </Fragment>\n  )\n}\n\nexport default Option\n","import { createURL } from '../operatives'\n\nconst QUERY_POLL = poll => `{ polls(where: { id: \"${poll}\" }) { yes no users { address yes { contributions timestamps total value sqrt } no { contributions timestamps total value sqrt } } } }`\nconst QUERY_ISSUES = `{ issues(where: { title_not_contains: \"fae\" }) { id body title issuer deadline optionBaddr optionAaddr } }`\nconst BURN_SUBGRAPH_ENDPOINT = \"https://api.thegraph.com/subgraphs/name/burnsignal/proof-of-concept\"\nconst QUERY_USER = user => `{ user(id: \"${user.toLowerCase()}\") { burns polls burned } }`\n\nconst requestHeaders = body => ({\n  method: 'POST',\n  headers: {\n    'Content-Type': 'application/json',\n    'Accept': 'application/json',\n  }, body: JSON.stringify({\n    query: body\n  })\n})\n\nconst makeRequest = async(query) => {\n  return await fetch(BURN_SUBGRAPH_ENDPOINT,\n    { ...requestHeaders(query)})\n    .then(response =>\n      response.json())\n    .then(data => data)\n    .catch(console.log)\n}\n\nexport async function getPolls() {\n  const result = await makeRequest(QUERY_ISSUES)\n  const routeObject = {}\n\n  result.data.issues.forEach(obj => {\n    routeObject[createURL(obj.title)] = { ...obj }\n  }); return routeObject;\n}\n\nexport async function getPollMetadata(pollName){\n  const result = await makeRequest(QUERY_POLL(pollName))\n  if(result.data.polls.length == 0){\n    return { yes: 0, no: 0, users: [] }\n  } else return result.data.polls[0]\n}\n\nexport async function getProfileMetadata(profileAddress){\n  const result = await makeRequest(QUERY_USER(profileAddress))\n  if(result.data.user === null){\n    return { burned: 0, polls: [], burns: [] }\n  } else return result.data.user\n}\n","import React, { useState, useContext, useEffect } from 'react';\nimport makeBlockie from 'ethereum-blockies-base64'\nimport { useParams, Link } from 'react-router-dom'\nimport { Row, Col } from \"reactstrap\"\n\nimport { ETH, toChecksumAddress, createURL } from '../constants/operatives'\nimport { getProfileMetadata } from '../constants/calls/GraphQL'\nimport { store } from '../state'\n\nimport '../assets/css/profile.css'\n\nfunction Profile() {\n  const [ totalBurned, setBurned ] = useState(0)\n  const [ userPolls, setPolls ] = useState([])\n  const [ totalVotes, setVotes ] = useState(0)\n  const [ avgBurned, setAvg ] = useState(0)\n\n  let { address } = useParams()\n\n  useEffect(() => {\n    const gatherProfile = async() => {\n      var profileMetadata = await getProfileMetadata(address)\n\n      let { burned, polls, burns } = profileMetadata\n\n      setAvg(ETH(parseInt(burned)/burns.length))\n      setVotes(burns.length)\n      setBurned(ETH(burned))\n      setPolls(polls)\n    }\n    gatherProfile()\n   }\n  , [])\n\n  return (\n    <div className=\"profileComponent\">\n      <Row>\n        <Col sm=\"12\" md={{ size: 8, offset: 2 }}>\n          <div className=\"card\">\n            <div className=\"card-header\">\n              <img className=\"profile-blockie\" src={makeBlockie(address)} />\n              <div className=\"profile-stats\">\n                <div className=\"profile-address\">\n                  <a href={`https://etherscan.io/address/${address}`}>{toChecksumAddress(address)}</a>\n                </div>\n                <span className=\"profile-stat\">Burned: <span id=\"pink\">{totalBurned}</span> </span>\n                <span className=\"profile-stat\">Burns: <span id=\"pink\">{totalVotes}</span> </span>\n                <span className=\"profile-stat\">Average: <span id=\"pink\">{avgBurned}</span> </span>\n                <p className=\"profile-verified\">Verified: <span id=\"pink\">false</span> </p>\n              </div>\n            </div>\n          </div>\n        </Col>\n      </Row>\n      <Row>\n        <Col sm=\"12\" md={{ size: 8, offset: 2 }}>\n          <div className=\"card\">\n            <div className=\"card-header\">\n              <h3 className=\"card-category\">Polls</h3>\n            </div>\n            <div className=\"card-body\" />\n              <ul>\n              {userPolls.map(value => (\n                <Link to={`/poll/${createURL(value)}`}>\n                  <li> {value} </li>\n                </Link>\n              ))}\n              </ul>\n          </div>\n        </Col>\n      </Row>\n   </div>\n  )\n}\n\nexport default Profile\n","import { PINK_PRIMARY } from \"./palette.js\"\n\nexport const WEEKDAYS = ['Monday', 'Tuesday', 'Wendsday', 'Thursday', 'Friday', 'Saturday', 'Sunday' ]\nexport const CHARTS = {\n  BAR_CONFIG: (_data, _range) => ({\n    type: 'horizontalBar',\n    responsive: true,\n    data: {\n      labels: ['Yes','No' ],\n      datasets: [{\n        data: _data,\n        borderColor: PINK_PRIMARY,\n        borderWidth: 2,\n        fill: true\n      }]\n    },\n    options: {\n      legend: { display: false },\n      scales: {\n        xAxes: [{\n          scaleLabel: {\n            display: true,\n            labelString: \"Wei (ETH)\"\n          },\n          ticks: {\n            suggestedMin: 0,\n            max: _range,\n            callback: function(label, index, labels) {\n              if(label > 1e8 || label < (-1 * 1e8)){\n                 return label.toExponential()\n              } else return label;\n            }\n          }\n        }]\n      },\n    }\n  }),\n  SPLINE_CONFIG: (_data, _range) => ({\n    options: {\n      lineTension: 100,\n      bezierCurve: true,\n      legend: { display: false },\n      scales: {\n        yAxes: [{\n          id:'yAxis1',\n          scaleLabel: {\n            labelString: \"Wei (ETH)\",\n            display: true\n          },\n          ticks: {\n            min: (_range * -1),\n            max: _range,\n            callback: function(label, index, labels) {\n              if(label > 1e8 || label < (-1 * 1e8)){\n                return label.toExponential()\n              } else return label;\n            }\n          }\n        },\n        {\n          id:'yAxis2',\n          labels: ['', 'Yes', '', 'No', ''],\n          type:\"category\",\n          gridLines: {\n           drawOnChartArea: false,\n           display: false\n          },\n       }]\n      },\n    },\n    type: 'line',\n    data: _data,\n  }),\n  SPLINE_STYLE: _gradient => ({\n    label: \"Data\",\n    fill: true,\n    backgroundColor: _gradient,\n    borderColor: PINK_PRIMARY,\n    borderWidth: 2,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    pointBackgroundColor: PINK_PRIMARY,\n    pointBorderColor:'rgba(255,255,255,0)',\n    pointHoverBackgroundColor: PINK_PRIMARY,\n    pointBorderWidth: 20,\n    pointHoverRadius: 4,\n    pointHoverBorderWidth: 15,\n    pointRadius: 4,\n  })\n}\n","import React, { Fragment, useEffect, useState } from 'react'\nimport Chart from 'chart.js'\n\nimport { WEEKDAYS, CHARTS } from \"../../../constants/parameters.js\"\nimport { sortVotes } from \"../../../constants/operatives.js\"\n\nconst makeRepeated = (arr, repeats) =>\n  [].concat(...Array.from({ length: repeats }, () => arr));\n\nfunction Spline(props){\n  let { chartId } = props\n\n  useEffect(() => {\n    const composeAndRender = () => {\n      let { yes, no } = props.pollRecords\n\n      const dataArray = sortVotes(yes, no)\n\n      var maxValue = Math.max(...dataArray)\n      var minValue = Math.min(...dataArray)\n      var maxRange = Math.ceil((((maxValue * 0.2) + maxValue) /10 ) * 10)\n      var minRange = Math.ceil((((minValue * 0.2) + minValue) /10 ) * 10) * -1\n\n      const ctx = document.getElementById(chartId).getContext(\"2d\")\n\n      let range = minRange > maxRange ? minRange : maxRange\n\n      const labelArray = dataArray.length > WEEKDAYS.length ?\n      makeRepeated(WEEKDAYS, parseInt(dataArray.length/WEEKDAYS.length)) :\n      WEEKDAYS.slice(0, dataArray.length)\n\n      var gradientStroke = ctx.createLinearGradient(0,337.5,0, 25)\n\n      gradientStroke.addColorStop(1, 'rgba(255,51,138,0.225)')\n      gradientStroke.addColorStop(0.7, 'rgba(255,51,138,0.2)')\n      gradientStroke.addColorStop(0.5, 'rgba(255,51,138,0.125)')\n      gradientStroke.addColorStop(0.2, 'rgba(255,51,138,0.075)')\n      gradientStroke.addColorStop(0, 'rgba(119,52,169,0)')\n\n      var data = {\n        labels: labelArray,\n        datasets: [{\n          ...CHARTS.SPLINE_STYLE(gradientStroke),\n          data: dataArray,\n        }]\n      }\n\n      new Chart(ctx, { ...CHARTS.SPLINE_CONFIG(data, range) })\n    }\n    composeAndRender()\n  }, [ ])\n\n  return(\n    <Fragment>\n      <canvas id={chartId}> </canvas>\n    </Fragment>\n  )\n}\n\nexport default Spline;\n","import React, { Fragment, useEffect, useState } from 'react'\nimport Chart from 'chart.js';\n\nimport { CHARTS } from \"../../../constants/parameters.js\";\n\nfunction Bar(props) {\n  const { chartId } = props;\n\n  useEffect(() => {\n    const composeAndRender = () => {\n      let { yes, no } = props.pollCount;\n\n      const ctx = document.getElementById(chartId).getContext(\"2d\")\n      const maximumValue = yes > no ? yes : no\n      const range = ( maximumValue * 0.20 ) + maximumValue\n      const data = [ yes, no ]\n\n      new Chart(ctx, { ...CHARTS.BAR_CONFIG(data, range) })\n    }\n    composeAndRender()\n  }, [ ])\n\n  return(\n    <Fragment>\n      <canvas id={chartId}> </canvas>\n    </Fragment>\n  );\n}\n\nexport default Bar;\n","import React, { Fragment, useContext, useState, useEffect } from 'react';\nimport { Link, useParams, useHistory } from \"react-router-dom\"\nimport makeBlockie from 'ethereum-blockies-base64'\nimport { Row, Col } from \"reactstrap\"\n\nimport { getVoteInfo, getRecords } from '../constants/operatives'\nimport { getPollMetadata } from \"../constants/calls/GraphQL\"\nimport { chartId, toChecksumAddress } from \"../constants/operatives\"\nimport { store } from '../state'\n\nimport Spline from '../assets/components/charts/spline'\nimport Option from '../assets/components/option'\nimport Bar from '../assets/components/charts/bar'\n\nimport \"../assets/css/poll.css\"\n\nfunction Poll(props){\n  const [ pollRecords, setRecords ] = useState({ yes: [], no: [] })\n  const [ pollOptions, setOptions ] = useState({ yes: \"\", no : \"\" })\n  const [ pollCount, setCount ] = useState({ yes: 0, no: 0 })\n  const [ pollDescription , setDescription ] = useState(\"\")\n  const [ graphState, setGraphState ] = useState(false)\n  const [ uniqueAddresses, setUnique ] = useState(0)\n  const [ totalPledged, setPledged ] = useState(0)\n  const [ pollAuthor, setAuthor ] = useState(\"0x\")\n  const [ pollTopic , setTopic ] = useState(\"\")\n\n  let { state } = useContext(store)\n  let { address } = useParams()\n  let history = useHistory()\n\n  const id = props.location !== undefined ? address : props.id\n\n  function selection(option) {\n    const route = `/poll/${id}/${option}`\n    if(history[history.length-1] !== route){\n      history.push(route)\n    }\n  }\n\n  function dismiss() {\n    let route = props.location.pathname.replace('/yes', '')\n    route = route.replace('/no', '')\n    history.push(route)\n  }\n\n  useEffect(() => {\n    const getMetadata = async() => {\n      if(state.polls[id] !== undefined){\n        let { title, body, issuer, optionAaddr, optionBaddr } = state.polls[id]\n        var pollMetadata = await getPollMetadata(title)\n\n        let { yes, users, no } = pollMetadata\n        let records = await getRecords(users)\n\n        setCount({ yes: parseInt(yes), no: parseInt(no) })\n        setOptions({ yes: optionAaddr, no: optionBaddr })\n        setAuthor(toChecksumAddress(issuer))\n        setUnique(records.voters.length)\n        setRecords({ ...records })\n        setDescription(body)\n        setGraphState(true)\n        setTopic(title)\n        }\n     }\n    getMetadata()\n  }, [ state.polls ])\n\n  return(\n     <div className=\"proposalComponent\">\n      <Row>\n        <Col sm=\"12\" md={{ size: 8, offset: 2 }}>\n          <div className=\"card\">\n            <div className=\"card-header\">\n              <Link className=\"poll-issuer\" to={`/profile/${pollAuthor}`}>\n                <img className=\"poll-profile\" src={makeBlockie(pollAuthor)} />\n              </Link>\n              <div className=\"poll-title\">{pollTopic}</div>\n            </div>\n            <div className=\"card-body\">\n              <div className=\"poll-description\">{pollDescription}</div>\n              <div className=\"vote-options\">\n                <button type=\"button\" data-target=\"#yes\" data-toggle=\"modal\" className=\"btn btn-primary btn-simple\" onClick={() => selection(\"yes\")}>Yes</button>\n                <button type=\"button\" data-target=\"#no\" data-toggle=\"modal\" className=\"btn btn-primary btn-simple\" onClick={() => selection(\"no\")}>No</button>\n              </div>\n            </div>\n          </div>\n        </Col>\n      </Row>\n      <Row>\n        <Col sm=\"12\" md={{ size: 8, offset: 2 }}>\n          <div className=\"card\">\n            <div className=\"card-header\">\n              <h3 className=\"card-category\">Results</h3>\n            </div>\n            <div className=\"card-body\">\n              {graphState && (\n                <Bar chartId={chartId(id)} pollCount={pollCount}/>\n              )}\n            </div>\n          </div>\n        </Col>\n      </Row>\n      <Row>\n        <Col sm=\"12\" md={{ size: 8, offset: 2 }}>\n          <div className=\"card\">\n            <div className=\"card-header\">\n              <h3 className=\"card-category\">History</h3>\n            </div>\n            <div className=\"card-body\">\n              {graphState && (\n                <Spline chartId={chartId(id)} pollRecords={pollRecords} />\n              )}\n            </div>\n          </div>\n        </Col>\n        <Option dismiss={dismiss} title={pollTopic} address={pollOptions} />\n      </Row>\n    </div>\n  )\n}\n\nexport default Poll\n","import React, { Fragment, useContext, useEffect } from 'react';\nimport { Route, Link } from 'react-router-dom'\n\nimport { store } from '../state'\nimport Proposal from './poll';\n\nfunction Feed() {\n  let { state } = useContext(store)\n\n  return (\n    <Fragment>\n      {Object.keys(state.polls).map((id, index) => (\n        <Link to={`/poll/${id}`}>\n          <Proposal key={id} id={id}/>\n        </Link>\n      ))}\n    </Fragment>\n  )\n}\n\nexport default Feed\n","import React, { Fragment, useContext, useEffect } from \"react\";\nimport {  Route, HashRouter, withRouter } from 'react-router-dom'\nimport { Container } from \"reactstrap\"\n\nimport \"./assets/libs/black-dashboard/assets/css/black-dashboard-react.css\"\nimport \"./assets/libs/black-dashboard/assets/css/nucleo-icons.css\"\nimport \"./assets/css/navigation.css\"\n\nimport Navigation from './assets/components/navigation'\nimport Option from './assets/components/option'\n\nimport { getPolls } from \"./constants/calls/GraphQL\"\nimport { store } from './state'\n\nimport Profile from './routes/profile'\nimport Poll from './routes/poll'\nimport Feed from './routes/feed'\n\nfunction App(props) {\n  let { dispatch, state } = useContext(store)\n\n  useEffect(() => window.scrollTo(0, 0), [ props.location.pathname ])\n\n  useEffect(() => {\n    const retrievePolls = async() => {\n      var pollStream = await getPolls()\n      dispatch({\n        payload: pollStream,\n        type: \"POLL\"\n      })\n    }\n    retrievePolls()\n  }, [])\n\n  return (\n    <main>\n      <Container>\n        <Navigation />\n        <Route path=\"/profile/:address\" component={Profile} />\n        <Route path=\"/poll/:address\" component={Poll} />\n        <Route exact path=\"/\" component={Feed} />\n      </Container>\n    </main>\n  );\n}\n\nexport default withRouter(App);\n","import React, { Fragment } from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { HashRouter, Route } from 'react-router-dom'\nimport * as serviceWorker from './serviceWorker'\n\nimport { StateProvider } from './state'\nimport App from './App';\n\nReactDOM.render(\n  <StateProvider>\n    <HashRouter basename='/'>\n      <Fragment>\n        <App />\n      </Fragment>\n    </HashRouter>\n  </StateProvider>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister()\n"],"sourceRoot":""}