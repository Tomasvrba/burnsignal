{"version":3,"sources":["assets/images/logo.png","serviceWorker.js","state/index.js","constants/parameters.js","constants/palette.js","utils/getWeb3.js","assets/components/navigation.js","constants/operatives.js","assets/components/option.js","constants/calls/GraphQL.js","routes/profile.js","assets/components/charts/spline.js","assets/components/charts/bar.js","routes/poll.js","routes/feed.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","Boolean","window","location","hostname","match","initialState","polls","web3","undefined","auth","verified","store","createContext","Provider","CONTRACT_ADDRESS","WEEKDAYS","CHARTS","BAR_CONFIG","_data","_range","type","responsive","data","labels","datasets","borderColor","borderWidth","fill","options","legend","display","scales","xAxes","scaleLabel","labelString","ticks","suggestedMin","max","callback","label","index","toExponential","SPLINE_CONFIG","lineTension","bezierCurve","yAxes","id","min","gridLines","drawOnChartArea","SPLINE_STYLE","_gradient","backgroundColor","borderDash","borderDashOffset","pointBackgroundColor","pointBorderColor","pointHoverBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBorderWidth","pointRadius","CONTRACT_ABI","constant","inputs","name","outputs","payable","stateMutability","anonymous","indexed","providerOptions","walletconnect","package","WalletConnectProvider","infuraId","authereum","Authereum","getWeb3","Promise","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","resolve","reject","web3Connect","provider","wrap","_context","prev","next","Web3Connect","Core","network","cacheProvider","connect","sent","Web3","t0","stop","_x","_x2","apply","this","arguments","Navigation","_useState","useState","react_default","createElement","DropdownItem","onClick","_initialiseWeb","initialiseWeb3","_useState2","slicedToArray","dropdownComponent","setDropdown","_useState3","_useState4","dropdownOpen","setDropdownOpen","_useState5","react","_useState6","navComponent","setNav","_useState7","_useState8","_useContext","useContext","dispatch","accounts","instance","eth","getAccounts","Contract","payload","Logout","account","LoggedIn","alert","data-target","data-toggle","react_router_dom","to","concat","_ref2","className","src","makeBlockie","state","Row","Col","sm","md","size","offset","logo","Dropdown","isOpen","toggle","prevState","DropdownToggle","caret","DropdownMenu","divider","target","href","tabIndex","role","aria-hidden","data-dismiss","aria-label","chartId","str","toConsumableArray","substring","reduceRight","res","_","__","arr","splice","Math","random","length","join","ETH","wei","parseInt","parseFloat","pow","toFixed","sortVotes","_yesVotes","_noVotes","totalVotes","unshift","getRecords","users","history","yes","no","voters","entries","map","_ref3","value","address","push","forEach","isNaN","abrupt","createURL","string","replace","toLowerCase","slice","toChecksumAddress","hash","keccak_256","ret","i","toUpperCase","QRCode","require","Option","props","ENS","title","burnAmount","setBurn","Unauthenticated","option","dismiss","AuthenticatedAndVerified","onChange","handleInput","placeholder","class","makeTransaction","AuthenticatedAndUnverified","burn","utils","toBN","mul","sendTransaction","from","event","QUERY_POLL","poll","QUERY_ISSUES","QUERY_USER","user","makeRequest","query","fetch","objectSpread","body","method","headers","Content-Type","Accept","JSON","stringify","then","response","json","catch","console","log","getPolls","_getPolls","_callee2","result","routeObject","_context2","issues","obj","getPollMetadata","_getPollMetadata","_callee3","pollName","_context3","getProfileMetadata","_x3","_getProfileMetadata","_callee4","profileAddress","_context4","burned","burns","Profile","totalBurned","setBurned","userPolls","setPolls","setVotes","avgBurned","setAvg","useParams","useEffect","profileMetadata","gatherProfile","makeRepeated","repeats","Array","Spline","_props$pollRecords","pollRecords","dataArray","maxValue","minValue","maxRange","ceil","minRange","ctx","document","getElementById","getContext","range","labelArray","gradientStroke","createLinearGradient","addColorStop","Chart","composeAndRender","Bar","_props$pollCount","pollCount","maximumValue","Poll","setRecords","pollOptions","setOptions","setCount","pollDescription","setDescription","_useState9","_useState10","graphState","setGraphState","_useState11","_useState12","setUnique","_useState13","_useState14","_useState15","_useState16","pollAuthor","setAuthor","_useState17","_useState18","pollTopic","setTopic","useHistory","selection","route","_state$polls$id","issuer","optionAaddr","optionBaddr","pollMetadata","records","getMetadata","bar","spline","components_option","pathname","Feed","setQuestion","CreatePoll","handleQuestion","handleDescription","clearValues","getElementsByClassName","keys","reverse","routes_poll","key","withRouter","scrollTo","pollStream","retrievePolls","Container","components_navigation","react_router","path","component","exact","ReactDOM","render","children","_useReducer","useReducer","action","_useReducer2","basename","src_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.60b2b5d3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.0a58105d.png\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { createContext, useReducer } from 'react';\n\nconst initialState = { polls: [], web3: undefined, auth: false, verified: false }\nconst store = createContext(initialState)\nconst { Provider } = store\n\nconst StateProvider = ( { children } ) => {\n  const [state, dispatch] = useReducer((state, action) => {\n    switch(action.type) {\n      case 'POLL':\n        return { ...state, polls: action.payload }\n      case 'WEB3':\n        return { ...state, ...action.payload, auth: true, verified: true }\n      default:\n        return state\n    };\n  }, initialState)\n\n  return <Provider value={{ state, dispatch }}>{children}</Provider>;\n};\n\nexport { store, StateProvider }\n","import { PINK_PRIMARY } from \"./palette.js\"\n\nexport const CONTRACT_ADDRESS = \"0x6936b81d7629378aabddcf882b2a7fdfff1cd962\"\n\nexport const WEEKDAYS = ['Monday', 'Tuesday', 'Wendsday', 'Thursday', 'Friday', 'Saturday', 'Sunday' ]\nexport const CHARTS = {\n  BAR_CONFIG: (_data, _range) => ({\n    type: 'horizontalBar',\n    responsive: true,\n    data: {\n      labels: ['Yes','No' ],\n      datasets: [{\n        data: _data,\n        borderColor: PINK_PRIMARY,\n        borderWidth: 2,\n        fill: true\n      }]\n    },\n    options: {\n      legend: { display: false },\n      scales: {\n        xAxes: [{\n          scaleLabel: {\n            display: true,\n            labelString: \"Wei (ETH)\"\n          },\n          ticks: {\n            suggestedMin: 0,\n            max: _range,\n            callback: function(label, index, labels) {\n              if(label > 1e8 || label < (-1 * 1e8)){\n                 return label.toExponential()\n              } else return label;\n            }\n          }\n        }]\n      },\n    }\n  }),\n  SPLINE_CONFIG: (_data, _range) => ({\n    options: {\n      lineTension: 100,\n      bezierCurve: true,\n      legend: { display: false },\n      scales: {\n        yAxes: [{\n          id:'yAxis1',\n          scaleLabel: {\n            labelString: \"Wei (ETH)\",\n            display: true\n          },\n          ticks: {\n            min: (_range * -1),\n            max: _range,\n            callback: function(label, index, labels) {\n              if(label > 1e8 || label < (-1 * 1e8)){\n                return label.toExponential()\n              } else return label;\n            }\n          }\n        },\n        {\n          id:'yAxis2',\n          labels: ['', 'Yes', '', 'No', ''],\n          type:\"category\",\n          gridLines: {\n           drawOnChartArea: false,\n           display: false\n          },\n       }]\n      },\n    },\n    type: 'line',\n    data: _data,\n  }),\n  SPLINE_STYLE: _gradient => ({\n    label: \"Data\",\n    fill: true,\n    backgroundColor: _gradient,\n    borderColor: PINK_PRIMARY,\n    borderWidth: 2,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    pointBackgroundColor: PINK_PRIMARY,\n    pointBorderColor:'rgba(255,255,255,0)',\n    pointHoverBackgroundColor: PINK_PRIMARY,\n    pointBorderWidth: 20,\n    pointHoverRadius: 4,\n    pointHoverBorderWidth: 15,\n    pointRadius: 4,\n  })\n}\n\nexport const CONTRACT_ABI = [\n  {\n   \"constant\": false,\n   \"inputs\": [\n    {\n     \"name\": \"_name\",\n     \"type\": \"string\"\n    },\n    {\n     \"name\": \"_data\",\n     \"type\": \"string\"\n    },\n    {\n     \"name\": \"_deadline\",\n     \"type\": \"uint64\"\n    }\n   ],\n   \"name\": \"newVoteProposal\",\n   \"outputs\": [\n    {\n     \"name\": \"\",\n     \"type\": \"uint256\"\n    }\n   ],\n   \"payable\": false,\n   \"stateMutability\": \"nonpayable\",\n   \"type\": \"function\"\n  },\n  {\n   \"inputs\": [],\n   \"payable\": false,\n   \"stateMutability\": \"nonpayable\",\n   \"type\": \"constructor\"\n  },\n  {\n   \"anonymous\": false,\n   \"inputs\": [\n    {\n     \"indexed\": false,\n     \"name\": \"proposalID\",\n     \"type\": \"uint256\"\n    },\n    {\n     \"indexed\": false,\n     \"name\": \"issuer\",\n     \"type\": \"address\"\n    },\n    {\n     \"indexed\": false,\n     \"name\": \"deadline\",\n     \"type\": \"uint256\"\n    },\n    {\n     \"indexed\": false,\n     \"name\": \"name\",\n     \"type\": \"string\"\n    },\n    {\n     \"indexed\": false,\n     \"name\": \"data\",\n     \"type\": \"string\"\n    }\n   ],\n   \"name\": \"newProposalIssued\",\n   \"type\": \"event\"\n  },\n  {\n   \"constant\": true,\n   \"inputs\": [\n    {\n     \"name\": \"\",\n     \"type\": \"uint256\"\n    }\n   ],\n   \"name\": \"proposals\",\n   \"outputs\": [\n    {\n     \"name\": \"issuer\",\n     \"type\": \"address\"\n    },\n    {\n     \"name\": \"deadline\",\n     \"type\": \"uint256\"\n    },\n    {\n     \"name\": \"name\",\n     \"type\": \"string\"\n    },\n    {\n     \"name\": \"data\",\n     \"type\": \"string\"\n    }\n   ],\n   \"payable\": false,\n   \"stateMutability\": \"view\",\n   \"type\": \"function\"\n  }\n ]\n","export const PURPLE_PRIMARY = \"#7533ff\";\nexport const BLUE_PRIMARY = \"#338aff\";\nexport const RED_PRIMARY = \"#ff4233\";\nexport const PINK_PRIMARY = \"#d048b6\";\n","import Web3 from \"web3\";\nimport Web3Connect from \"web3connect\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport Authereum from \"authereum\";\n\nconst providerOptions = {\n  walletconnect: {\n    package: WalletConnectProvider,\n    options: {\n      infuraId: \"INFURA_ID\"\n    }\n  },\n  authereum: {\n    package: Authereum,\n    options: {}\n  }\n};\n\nconst getWeb3 = () => (\n  new Promise(async(resolve, reject) => {\n    try {\n      const web3Connect = new Web3Connect.Core({\n        network: \"mainnet\",\n        cacheProvider: true,\n        providerOptions\n      })\n      const provider = await web3Connect.connect()\n      const web3 = new Web3(provider)\n      resolve(web3)\n    } catch(e){\n      resolve(e)\n    }\n  })\n);\n\nexport default getWeb3;\n","import React, { Fragment, useContext, useState, useEffect } from 'react'\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\nimport makeBlockie from 'ethereum-blockies-base64'\nimport { Link } from 'react-router-dom'\nimport { Col, Row } from \"reactstrap\"\n\nimport { CONTRACT_ADDRESS, CONTRACT_ABI } from \"../../constants/parameters\"\nimport getWeb3 from \"../../utils/getWeb3\"\nimport logo from \"../images/logo.png\"\nimport { store } from '../../state'\n\nfunction Navigation() {\n  const [ dropdownComponent, setDropdown ] = useState(<Login />)\n  const [ dropdownOpen, setDropdownOpen ] = useState(false);\n  const [ navComponent, setNav ] = useState(<Fragment />)\n  const [ address, setAddress ] = useState(\"\")\n\n  const toggle = () => setDropdownOpen(prevState => !prevState);\n\n  let { dispatch, state } = useContext(store)\n\n  async function initialiseWeb3(){\n    try {\n      const web3 = await getWeb3()\n      const accounts = await web3.eth.getAccounts()\n      const instance = new web3.eth.Contract(\n        CONTRACT_ABI, CONTRACT_ADDRESS)\n      dispatch({\n        payload: {\n          web3, accounts, instance\n        },\n        type: \"WEB3\"\n      })\n      setDropdown(<Logout account={accounts[0]}/>)\n      setNav(<LoggedIn account={accounts[0]}/>)\n    } catch(e) {\n      alert(\"Web3 login could not be detected\")\n    }\n  }\n\n  function Login() {\n    return(\n      <DropdownItem onClick={() => initialiseWeb3()}>Login</DropdownItem>\n    )\n  }\n\n  function About() {\n    return(\n      <div className=\"modal fade\" id=\"about\" tabIndex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\n        <div className=\"modal-dialog\" role=\"document\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <h5 className=\"modal-title align-left\">About</h5>\n              <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                <span aria-hidden=\"true\">&times;</span>\n              </button>\n            </div>\n            <div className=\"modal-body about\">\n              <p>Burn Signal is an experiment in distributed preference signaling where verified unique\n              users burn ETH to signal their opinion.</p>\n              <p>Votes are weighted quadratically.</p>\n              <p>We use <a target=\"_\" href=\"https://brightid.org\">BrightID</a> as our proof of uniqueness, only votes\n              cast by ethereum addresses that are verified unique by BrightID count towards the outcome of\n              a burn signals.</p><br/>\n              <p>Burn Signal is funded by grants and community contributions. If you would like to contribute\n              funds, check out our <a target=\"_\" href=\"https://gitcoin.co/grants/138/burner-vote\">Gitcoin Grants campaign</a>,\n              if you would like to contribute code or other work, check out our <a target=\"_\" href=\"https://github.com/burnsignal\">\n              GitHub</a> and our <a target=\"_\" href=\"https://colony.io/colony/burn\">Colony</a>.</p><br/>\n              <p>Check out our <a target=\"_\" href=\"https://blog.burnsignal.io\"> blog </a> for more information.</p>\n            </div>\n          </div>\n        </div>\n      </div>\n     )\n  }\n\n  function Logout({ account }) {\n    return(\n      <Fragment>\n        <DropdownItem type=\"button\" data-target=\"#create\" data-toggle=\"modal\"> Create </DropdownItem>\n        <Link to={`/profile/${account}`}>\n          <DropdownItem> Profile </DropdownItem>\n        </Link>\n        <DropdownItem>Logout</DropdownItem>\n      </Fragment>\n    )\n  }\n\n  function LoggedIn({ account }) {\n    return(\n      <Link className=\"nav-link\" to={`/profile/${account}`}>\n        <img className=\"nav-profile\" src={makeBlockie(account)} />\n      </Link>\n    )\n  }\n\n  return(\n    <Row>\n      <Col sm=\"12\" md={{ size: 8, offset: 2 }}>\n        <nav className=\"navbar navbar-expand-lg fixed-top col-sm-12 col-md-7\">\n        <div className=\"navbar-wrapper\">\n          <Link className=\"navbar-brand\" to=\"/\">\n            <img className=\"navbar-logo\" src={logo} />\n            <span className=\"navbar-title\"> Burn Signal </span>\n          </Link>\n        </div>\n        <div className=\"collapse navbar-collapse justify-content-end\">\n          <ul className=\"navbar-nav\">\n            <li className=\"nav-item\">\n              {navComponent}\n              <Dropdown isOpen={dropdownOpen} toggle={toggle}>\n                 <DropdownToggle caret>\n                   <i className=\"nav-login-icon tim-icons icon-minimal-down\"></i>\n                 </DropdownToggle>\n                 <DropdownMenu>\n                   <Link to=\"/\">\n                     <DropdownItem> Home </DropdownItem>\n                   </Link>\n                   {dropdownComponent}\n                   <DropdownItem divider />\n                   <DropdownItem type=\"button\" data-target=\"#about\" data-toggle=\"modal\">About</DropdownItem>\n                   <DropdownItem target=\"_\" href=\"https://blog.burnsignal.io\">Blog</DropdownItem>\n                 </DropdownMenu>\n               </Dropdown>\n            </li>\n          </ul>\n        </div>\n      </nav>\n     </Col>\n    <About />\n   </Row>\n  )\n}\n\nexport default Navigation\n","import { keccak_256, sha3_256 } from 'js-sha3'\n\nexport const chartId = str => [...str.substring(0, 10)].reduceRight((res,_,__,arr) => [...res,arr.splice(~~(Math.random()*arr.length),1)[0]],[]).join('');\n\nexport const ETH = wei => {\n  if(parseInt(wei) >= 1000000000000000) {\n    return `${parseFloat(wei/Math.pow(10,18)).toFixed(3)} ETH`\n  } else if(parseInt(wei) >= 1000000){\n    return `${(wei/1000000000).toFixed(3)} GWEI`\n  } else if(parseInt(wei) < 1000000) {\n    return `${parseFloat(wei).toFixed(2)} WEI`\n  }\n}\n\nexport const sortVotes = (_yesVotes, _noVotes) => {\n  let totalVotes = _yesVotes.concat(_noVotes);\n\n  totalVotes.unshift(0);\n\n  return totalVotes;\n}\n\nexport const getRecords = async(users) => {\n  var history = { yes: [], no: [], voters: [] }\n await Object.entries(users)\n       .map(([ index, value ]) => {\n        let { address, yes, no } = value\n\n        history.voters.push(address)\n        yes.value.forEach((value, index) => {\n          value = parseFloat(value)\n          if(isNaN(value)) value = 0\n          history.yes.push(value)\n        })\n        no.value.forEach((value, index) => {\n          value = parseFloat(value) * -1\n          if(isNaN(value)) value = 0\n          history.no.push(value)\n        })\n    })\n  return history\n}\n\nexport const createURL = string => {\n  string = string.replace(/([\\u2700-\\u27BF]|[\\uE000-\\uF8FF]|\\uD83C[\\uDC00-\\uDFFF]|\\uD83D[\\uDC00-\\uDFFF]|[\\u2011-\\u26FF]|\\uD83E[\\uDD10-\\uDDFF])/g, '');\n  string = string.replace(/ /g, '-').toLowerCase();\n\n  if(string.substring(string.length-1, string.length) === \"-\"){\n    string = string.slice(0, string.length-1)\n  } return string.replace('?', '');\n}\n\nexport const toChecksumAddress = (address) => {\n  address = address.toLowerCase().replace('0x', '')\n  var hash = keccak_256(address);\n  var ret = '0x'\n\n  for (var i = 0; i < address.length; i++) {\n    if (parseInt(hash[i], 16) >= 8) {\n      ret += address[i].toUpperCase()\n    } else {\n      ret += address[i]\n    }\n  }\n\n  return ret\n}\n\nexport const isAddress = (address) => {\n    if (!/^(0x)?[0-9a-f]{40}$/i.test(address)) {\n        // check if it has the basic requirements of an address\n        return false;\n    } else if (/^(0x)?[0-9a-f]{40}$/.test(address) || /^(0x)?[0-9A-F]{40}$/.test(address)) {\n        // If it's all small caps or all all caps, return true\n        return true;\n    } else {\n        // Otherwise check each case\n        return isChecksumAddress(address);\n    }\n};\n\nexport const isChecksumAddress = (address) => {\n    // Check each case\n    address = address.replace('0x','');\n    //var addressHash = sha3(address.toLowerCase());\n\tvar addressHash = sha3_256(address.toLowerCase());\n    for (var i = 0; i < 40; i++ ) {\n        // the nth letter should be uppercase if the nth digit of casemap is 1\n        if ((parseInt(addressHash[i], 16) > 7 && address[i].toUpperCase() !== address[i]) || (parseInt(addressHash[i], 16) <= 7 && address[i].toLowerCase() !== address[i])) {\n            return false;\n        }\n    }\n    return true;\n};\n\n\n// Code to process vote info. Should be easy to replace.\n// This is where BrightID check will be added.\n\nexport async function getVoteInfo(proposalData){\n  var anonymousDeposits = proposalData.data.anonymousDeposits;\n  var noDeposits = anonymousDeposits.length;\n  var voters = {};\n  var totalValue = 0;\n\n  // Check all the deposits for proposal\n  for(var i = 0;i < noDeposits;i++){\n\n    var yesValue = 0, noValue = 0;\n\n    // Add BrightID check. Don't count vote if not.??\n\n    if(anonymousDeposits[i].Choice === 'yes'){\n      yesValue = parseFloat(anonymousDeposits[i].ContriValue);\n    } else {\n      noValue = parseFloat(anonymousDeposits[i].ContriValue);\n    }\n\n    // Check if address has already been counted & initialise if not\n    if(voters[anonymousDeposits[i].SenderAddr] === undefined){\n      voters[anonymousDeposits[i].SenderAddr] = { yesTotalValue: yesValue, noTotalValue: noValue };\n    }else{\n      var newYesValue = voters[anonymousDeposits[i].SenderAddr].yesTotalValue + yesValue;\n      var newNoValue = voters[anonymousDeposits[i].SenderAddr].noTotalValue + noValue;\n      voters[anonymousDeposits[i].SenderAddr] = { yesTotalValue: newYesValue, noTotalValue: newNoValue };\n    }\n\n    totalValue += parseFloat(anonymousDeposits[i].ContriValue);\n  }\n\n  return { voters: voters, totalValue: totalValue}\n}\n","import React, { Fragment, useState, useContext, useEffect } from 'react'\nimport { Dropdown, DropdownToggle } from \"reactstrap\"\nimport { Col, Row } from \"reactstrap\"\n\nimport { createURL } from \"../../constants/operatives\"\nimport { PINK_PRIMARY } from \"../../constants/palette.js\"\nimport { store } from \"../../state\"\n\nconst QRCode = require('qrcode.react')\n\nfunction Option(props) {\n  const ENS = `${createURL(props.title)}.burnsignal.eth`\n  const [ burnAmount, setBurn ] = useState(0)\n\n  let { state } = useContext(store)\n  let { title } = props\n\n  function Unauthenticated({ option }){\n    return(\n      <div className=\"modal-content\">\n        <div className=\"modal-header\">\n          <h5 className=\"modal-title\">{props.title}</h5>\n          <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" onClick={props.dismiss}>\n            <span aria-hidden=\"true\">&times;</span>\n          </button>\n        </div>\n        <div className=\"modal-body\">\n          Vote <span id=\"pink\">{option}</span> by sending any amount of ETH to <br/>\n          <a target=\"_\" href='https://etherscan.io'><span id=\"pink\">{option}</span>.{ENS}</a>\n          <div className=\"poll-qr\">\n            <QRCode value={props.address[option]} />\n          </div>\n          To ensure that you vote counts, please link your ethereum account\n          to your BrightID account at  <a target=\"_\" href=\"https://ethereum.brightid.org\">ethereum.brightid.org</a>\n        </div>\n      </div>\n     )\n   }\n\n  function AuthenticatedAndVerified({ option }){\n    return(\n      <div className=\"modal-content\">\n        <div className=\"modal-header\">\n          <h5 className=\"modal-title\">{props.title}</h5>\n          <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" onClick={props.dismiss}>\n            <span aria-hidden=\"true\">&times;</span>\n          </button>\n        </div>\n        <div className=\"modal-body\">\n          <span className=\"vote-selection\"> How much ETH will you burn to cast your vote? </span>\n          <input type=\"number\" value={burnAmount} onChange={handleInput} className=\"modal-input\" placeholder=\"0.5 ETH\"/>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"button\" className=\"btn btn-primary btn-verify\" data-dismiss=\"modal\" onClick={() => makeTransaction(option)}>\n            Vote {option}\n          </button>\n        </div>\n      </div>\n    )\n  }\n\n  function AuthenticatedAndUnverified(){\n    return(\n      <div className=\"modal-content\">\n        <div className=\"modal-header\">\n          <h5 className=\"modal-title\">Please verify your account</h5>\n          <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" onClick={props.dismiss}>\n            <span aria-hidden=\"true\">&times;</span>\n          </button>\n        </div>\n        <div className=\"modal-body\">\n          Before casting your vote, you should verify your Ethereum account using BrightID.\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"button\" className=\"btn btn-primary btn-verify\" data-dismiss=\"modal\">\n            Verify\n          </button>\n        </div>\n      </div>\n     )\n  }\n\n  const makeTransaction = async(option) => {\n    let { web3 } = state\n\n    props.dismiss()\n\n    const burn = burnAmount % 1 === 0 ?\n      web3.utils.toBN(parseFloat(burnAmount)).mul(web3.utils.toBN(1e18)) :\n      parseInt(burnAmount*Math.pow(10,18))\n\n    await web3.eth.sendTransaction({\n        to: props.address[option],\n        from: state.accounts[0],\n        value: burn\n      })\n  }\n\n  const handleInput = (event) => {\n    setBurn(event.target.value)\n  }\n\n  return (\n    <Fragment>\n      <div className=\"modal fade\" id=\"yes\" tabIndex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\n        <div className=\"modal-dialog\" role=\"document\">\n          { state.auth && state.verified && (<AuthenticatedAndVerified option=\"yes\" />) }\n          { !state.auth && !state.verified && (< Unauthenticated option=\"yes\"/>) }\n          { state.auth && !state.verified && (<AuthenticatedAndUnverified />) }\n        </div>\n      </div>\n      <div className=\"modal fade\" id=\"no\" tabIndex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\n        <div className=\"modal-dialog\" role=\"document\">\n          { state.auth && state.verified && (<AuthenticatedAndVerified option=\"no\" />) }\n          { !state.auth && !state.verified && (< Unauthenticated option=\"no\"/>) }\n          { state.auth && !state.verified && (<AuthenticatedAndUnverified />) }\n        </div>\n      </div>\n    </Fragment>\n  )\n}\n\nexport default Option\n","import { createURL } from '../operatives'\n\nconst QUERY_POLL = poll => `{ polls(where: { id: \"${poll}\" }) { yes no users { address yes { contributions timestamps total value sqrt } no { contributions timestamps total value sqrt } } } }`\nconst QUERY_ISSUES = `{ issues(where: { title_not_contains: \"fae\" }) { id body title issuer deadline optionBaddr optionAaddr } }`\nconst BURN_SUBGRAPH_ENDPOINT = \"https://api.thegraph.com/subgraphs/name/burnsignal/proof-of-concept\"\nconst QUERY_USER = user => `{ user(id: \"${user.toLowerCase()}\") { burns polls burned } }`\n\nconst requestHeaders = body => ({\n  method: 'POST',\n  headers: {\n    'Content-Type': 'application/json',\n    'Accept': 'application/json',\n  }, body: JSON.stringify({\n    query: body\n  })\n})\n\nconst makeRequest = async(query) => {\n  return await fetch(BURN_SUBGRAPH_ENDPOINT,\n    { ...requestHeaders(query)})\n    .then(response =>\n      response.json())\n    .then(data => data)\n    .catch(console.log)\n}\n\nexport async function getPolls() {\n  const result = await makeRequest(QUERY_ISSUES)\n  const routeObject = {}\n\n  result.data.issues.forEach(obj => {\n    routeObject[createURL(obj.title)] = { ...obj }\n  }); return routeObject;\n}\n\nexport async function getPollMetadata(pollName){\n  const result = await makeRequest(QUERY_POLL(pollName))\n  if(result.data.polls.length == 0){\n    return { yes: 0, no: 0, users: [] }\n  } else return result.data.polls[0]\n}\n\nexport async function getProfileMetadata(profileAddress){\n  const result = await makeRequest(QUERY_USER(profileAddress))\n  if(result.data.user === null){\n    return { burned: 0, polls: [], burns: [] }\n  } else return result.data.user\n}\n","import React, { useState, useContext, useEffect } from 'react';\nimport makeBlockie from 'ethereum-blockies-base64'\nimport { useParams, Link } from 'react-router-dom'\nimport { Row, Col } from \"reactstrap\"\n\nimport { ETH, toChecksumAddress, createURL } from '../constants/operatives'\nimport { getProfileMetadata } from '../constants/calls/GraphQL'\nimport { store } from '../state'\n\nimport '../assets/css/profile.css'\n\nfunction Profile() {\n  const [ totalBurned, setBurned ] = useState(0)\n  const [ userPolls, setPolls ] = useState([])\n  const [ totalVotes, setVotes ] = useState(0)\n  const [ avgBurned, setAvg ] = useState(0)\n\n  let { address } = useParams()\n\n  useEffect(() => {\n    const gatherProfile = async() => {\n      var profileMetadata = await getProfileMetadata(address)\n\n      let { burned, polls, burns } = profileMetadata\n\n      setAvg(ETH(parseInt(burned)/burns.length))\n      setVotes(burns.length)\n      setBurned(ETH(burned))\n      setPolls(polls)\n    }\n    gatherProfile()\n   }\n  , [])\n\n  return (\n    <div className=\"profile\">\n      <Row>\n        <Col sm=\"12\" md={{ size: 8, offset: 2 }}>\n          <div className=\"card\">\n            <div className=\"card-header\">\n              <Link to={`/profile/${address}`}>\n                <img className=\"profile-blockie\" src={makeBlockie(address)} />\n              </Link>\n              <div className=\"profile-stats\">\n                <div className=\"profile-address\">\n                  <a href={`https://etherscan.io/address/${address}`}>{toChecksumAddress(address)}</a>\n                </div>\n                <span className=\"profile-stat\">Burned: <span id=\"pink\">{totalBurned}</span> </span>\n                <span className=\"profile-stat\">Burns: <span id=\"pink\">{totalVotes}</span> </span>\n                <span className=\"profile-stat\">Average: <span id=\"pink\">{avgBurned}</span> </span>\n                <p className=\"profile-verified\">Verified: <span id=\"pink\">false</span> </p>\n              </div>\n            </div>\n          </div>\n        </Col>\n      </Row>\n      <Row>\n        <Col sm=\"12\" md={{ size: 8, offset: 2 }}>\n          <div className=\"card\">\n            <div className=\"card-header\">\n              <h3 className=\"card-category\">Polls</h3>\n            </div>\n            <div className=\"card-body\" />\n              <ul>\n              {userPolls.map(value => (\n                <Link to={`/poll/${createURL(value)}`}>\n                  <li> {value} </li>\n                </Link>\n              ))}\n              </ul>\n          </div>\n        </Col>\n      </Row>\n   </div>\n  )\n}\n\nexport default Profile\n","import React, { Fragment, useEffect, useState } from 'react'\nimport Chart from 'chart.js'\n\nimport { WEEKDAYS, CHARTS } from \"../../../constants/parameters.js\"\nimport { sortVotes } from \"../../../constants/operatives.js\"\n\nconst makeRepeated = (arr, repeats) =>\n  [].concat(...Array.from({ length: repeats }, () => arr));\n\nfunction Spline(props){\n  let { chartId } = props\n\n  useEffect(() => {\n    const composeAndRender = () => {\n      let { yes, no } = props.pollRecords\n\n      const dataArray = sortVotes(yes, no)\n\n      var maxValue = Math.max(...dataArray)\n      var minValue = Math.min(...dataArray)\n      var maxRange = Math.ceil((((maxValue * 0.2) + maxValue) /10 ) * 10)\n      var minRange = Math.ceil((((minValue * 0.2) + minValue) /10 ) * 10) * -1\n\n      const ctx = document.getElementById(chartId).getContext(\"2d\")\n\n      let range = minRange > maxRange ? minRange : maxRange\n\n      const labelArray = dataArray.length > WEEKDAYS.length ?\n      makeRepeated(WEEKDAYS, parseInt(dataArray.length/WEEKDAYS.length)) :\n      WEEKDAYS.slice(0, dataArray.length)\n\n      var gradientStroke = ctx.createLinearGradient(0,337.5,0, 25)\n\n      gradientStroke.addColorStop(1, 'rgba(255,51,138,0.225)')\n      gradientStroke.addColorStop(0.7, 'rgba(255,51,138,0.2)')\n      gradientStroke.addColorStop(0.5, 'rgba(255,51,138,0.125)')\n      gradientStroke.addColorStop(0.2, 'rgba(255,51,138,0.075)')\n      gradientStroke.addColorStop(0, 'rgba(119,52,169,0)')\n\n      var data = {\n        labels: labelArray,\n        datasets: [{\n          ...CHARTS.SPLINE_STYLE(gradientStroke),\n          data: dataArray,\n        }]\n      }\n\n      new Chart(ctx, { ...CHARTS.SPLINE_CONFIG(data, range) })\n    }\n    composeAndRender()\n  }, [ ])\n\n  return(\n    <Fragment>\n      <canvas id={chartId}> </canvas>\n    </Fragment>\n  )\n}\n\nexport default Spline;\n","import React, { Fragment, useEffect, useState } from 'react'\nimport Chart from 'chart.js';\n\nimport { CHARTS } from \"../../../constants/parameters.js\";\n\nfunction Bar(props) {\n  const { chartId } = props;\n\n  useEffect(() => {\n    const composeAndRender = () => {\n      let { yes, no } = props.pollCount;\n\n      const ctx = document.getElementById(chartId).getContext(\"2d\")\n      const maximumValue = yes > no ? yes : no\n      const range = ( maximumValue * 0.20 ) + maximumValue\n      const data = [ yes, no ]\n\n      new Chart(ctx, { ...CHARTS.BAR_CONFIG(data, range) })\n    }\n    composeAndRender()\n  }, [ ])\n\n  return(\n    <Fragment>\n      <canvas id={chartId}> </canvas>\n    </Fragment>\n  );\n}\n\nexport default Bar;\n","import React, { Fragment, useContext, useState, useEffect } from 'react';\nimport { Link, useParams, useHistory } from \"react-router-dom\"\nimport makeBlockie from 'ethereum-blockies-base64'\nimport { Row, Col } from \"reactstrap\"\n\nimport { getVoteInfo, getRecords } from '../constants/operatives'\nimport { getPollMetadata } from \"../constants/calls/GraphQL\"\nimport { chartId, toChecksumAddress } from \"../constants/operatives\"\nimport { store } from '../state'\n\nimport Spline from '../assets/components/charts/spline'\nimport Option from '../assets/components/option'\nimport Bar from '../assets/components/charts/bar'\n\nimport \"../assets/css/poll.css\"\n\nfunction Poll(props){\n  const [ pollRecords, setRecords ] = useState({ yes: [], no: [] })\n  const [ pollOptions, setOptions ] = useState({ yes: \"\", no : \"\" })\n  const [ pollCount, setCount ] = useState({ yes: 0, no: 0 })\n  const [ pollDescription , setDescription ] = useState(\"\")\n  const [ graphState, setGraphState ] = useState(false)\n  const [ uniqueAddresses, setUnique ] = useState(0)\n  const [ totalPledged, setPledged ] = useState(0)\n  const [ pollAuthor, setAuthor ] = useState(\"0x\")\n  const [ pollTopic , setTopic ] = useState(\"\")\n\n  let { state } = useContext(store)\n  let { address } = useParams()\n  let history = useHistory()\n\n  const id = props.location !== undefined ? address : props.id\n\n  function selection(option) {\n    const route = `/poll/${id}/${option}`\n    if(history[history.length-1] !== route){\n      history.push(route)\n    }\n  }\n\n  function dismiss() {\n    let route = props.location.pathname.replace('/yes', '')\n    route = route.replace('/no', '')\n    history.push(route)\n  }\n\n  useEffect(() => {\n    const getMetadata = async() => {\n      if(state.polls[id] !== undefined){\n        let { title, body, issuer, optionAaddr, optionBaddr } = state.polls[id]\n        var pollMetadata = await getPollMetadata(title)\n\n        let { yes, users, no } = pollMetadata\n        let records = await getRecords(users)\n\n        setCount({ yes: parseInt(yes), no: parseInt(no) })\n        setOptions({ yes: optionAaddr, no: optionBaddr })\n        setAuthor(toChecksumAddress(issuer))\n        setUnique(records.voters.length)\n        setRecords({ ...records })\n        setDescription(body)\n        setGraphState(true)\n        setTopic(title)\n        }\n     }\n    getMetadata()\n  }, [ state.polls ])\n\n  return(\n     <div className=\"poll\">\n      <Row>\n        <Col sm=\"12\" md={{ size: 8, offset: 2 }}>\n          <div className=\"card\">\n            <div className=\"card-header\">\n              <Link className=\"poll-issuer\" to={`/profile/${pollAuthor}`}>\n                <img className=\"poll-profile\" src={makeBlockie(pollAuthor)} />\n              </Link>\n              <div className=\"poll-title\">{pollTopic}</div>\n            </div>\n            <div className=\"card-body\">\n              <div className=\"poll-description\">{pollDescription}</div>\n              <div className=\"vote-options\">\n                <button type=\"button\" data-target=\"#yes\" data-toggle=\"modal\" className=\"btn btn-primary btn-simple\" onClick={() => selection(\"yes\")}>Yes</button>\n                <button type=\"button\" data-target=\"#no\" data-toggle=\"modal\" className=\"btn btn-primary btn-simple\" onClick={() => selection(\"no\")}>No</button>\n              </div>\n            </div>\n          </div>\n        </Col>\n      </Row>\n      <Row>\n        <Col sm=\"12\" md={{ size: 8, offset: 2 }}>\n          <div className=\"card\">\n            <div className=\"card-header\">\n              <h3 className=\"card-category\">Results</h3>\n            </div>\n            <div className=\"card-body\">\n              {graphState && (\n                <Bar chartId={chartId(id)} pollCount={pollCount}/>\n              )}\n            </div>\n          </div>\n        </Col>\n      </Row>\n      <Row>\n        <Col sm=\"12\" md={{ size: 8, offset: 2 }}>\n          <div className=\"card\">\n            <div className=\"card-header\">\n              <h3 className=\"card-category\">History</h3>\n            </div>\n            <div className=\"card-body\">\n              {graphState && (\n                <Spline chartId={chartId(id)} pollRecords={pollRecords} />\n              )}\n            </div>\n          </div>\n        </Col>\n        <Option dismiss={dismiss} title={pollTopic} address={pollOptions} />\n      </Row>\n    </div>\n  )\n}\n\nexport default Poll\n","import React, { Fragment, useContext, useState } from 'react';\nimport makeBlockie from 'ethereum-blockies-base64'\nimport { Link } from 'react-router-dom'\nimport { Row, Col } from \"reactstrap\"\n\nimport { store } from '../state'\nimport Proposal from './poll';\n\nfunction Feed() {\n  const [ description, setDescription ] = useState(\"\")\n  const [ question, setQuestion ] = useState(\"\")\n\n  let { state } = useContext(store)\n\n  function Create() {\n    return(\n      <div className=\"modal fade\" id=\"create\" tabIndex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\n        <div className=\"modal-dialog\" role=\"document\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <h5 className=\"modal-title align-left\">Create</h5>\n              <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                <span aria-hidden=\"true\">&times;</span>\n              </button>\n            </div>\n            <div className=\"modal-body about\">\n              <CreatePoll />\n            </div>\n          </div>\n        </div>\n      </div>\n     )\n  }\n\n  function CreatePoll() {\n    return(\n      <Fragment>\n        <input onChange={handleQuestion} placeholder=\"What question is on your mind?\" className=\"create-poll-question\" />\n        <textarea onChange={handleDescription} placeholder=\"Description\" className=\"create-poll-description\" />\n        <button className=\"btn btn-primary button-poll\" onClick={clearValues}> Create </button>\n      </Fragment>\n    )\n  }\n\n  const clearValues = () => {\n    document.getElementsByClassName(\"create-poll-description\")[0].value = \"\"\n    document.getElementsByClassName(\"create-poll-question\")[0].value = \"\"\n  }\n\n  const handleDescription = (event) => {\n    setDescription(event.target.value)\n  }\n\n  const handleQuestion = (event) => {\n    setQuestion(event.target.value)\n  }\n\n  const createPoll = async() => {\n    let { web3, instance, accounts } = state\n\n    const recentBlock = await web3.eth.getBlock(\"latest\")\n    const deadline = recentBlock.timestamp + 604800\n\n    await instance.methods.newVoteProposal(question,\n      description,\n      deadline\n    ).send({\n      from: accounts[0]\n    }).on('transactionHash', (hash) => {\n      clearValues()\n    })\n  }\n\n  return (\n    <Fragment>\n      {state.web3 && (\n        <div className=\"new-poll\">\n          <Row>\n            <Col sm=\"12\" md={{ size: 8, offset: 2 }}>\n              <div className=\"card\">\n                <div className=\"card-header\" />\n                <div className=\"card-body\">\n                  <Link to={`/profile/${state.accounts[0]}`}>\n                    <img className=\"new-poll-profile\" src={makeBlockie(state.accounts[0])} />\n                  </Link>\n                  <CreatePoll />\n                </div>\n              </div>\n            </Col>\n          </Row>\n        </div>\n      )}\n      {Object.keys(state.polls).reverse().map((id, index) => (\n        <Link to={`/poll/${id}`}>\n          <Proposal key={id} id={id}/>\n        </Link>\n      ))}\n     <Create />\n    </Fragment>\n  )\n}\n\nexport default Feed\n","import React, { Fragment, useContext, useEffect } from \"react\";\nimport {  Route, HashRouter, withRouter } from 'react-router-dom'\nimport { Container } from \"reactstrap\"\n\nimport \"./assets/libs/black-dashboard/assets/css/black-dashboard-react.css\"\nimport \"./assets/libs/black-dashboard/assets/css/nucleo-icons.css\"\nimport \"./assets/css/navigation.css\"\n\nimport Navigation from './assets/components/navigation'\nimport Option from './assets/components/option'\n\nimport { getPolls } from \"./constants/calls/GraphQL\"\nimport { store } from './state'\n\nimport Profile from './routes/profile'\nimport Poll from './routes/poll'\nimport Feed from './routes/feed'\n\nfunction App(props) {\n  let { dispatch, state } = useContext(store)\n\n  useEffect(() => window.scrollTo(0, 0), [ props.location.pathname ])\n\n  useEffect(() => {\n    const retrievePolls = async() => {\n      var pollStream = await getPolls()\n      dispatch({\n        payload: pollStream,\n        type: \"POLL\"\n      })\n    }\n    retrievePolls()\n  }, [])\n\n  return (\n    <main>\n      <Container>\n        <Navigation />\n        <Route path=\"/profile/:address\" component={Profile} />\n        <Route path=\"/poll/:address\" component={Poll} />\n        <Route exact path=\"/\" component={Feed} />\n      </Container>\n    </main>\n  );\n}\n\nexport default withRouter(App);\n","import React, { Fragment } from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { HashRouter, Route } from 'react-router-dom'\nimport * as serviceWorker from './serviceWorker'\n\nimport { StateProvider } from './state'\nimport App from './App';\n\nReactDOM.render(\n  <StateProvider>\n    <HashRouter basename='/'>\n      <Fragment>\n        <App />\n      </Fragment>\n    </HashRouter>\n  </StateProvider>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister()\n"],"sourceRoot":""}