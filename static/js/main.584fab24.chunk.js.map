{"version":3,"sources":["assets/images/logo.png","serviceWorker.js","state/index.js","utils/getWeb3.js","assets/components/navigation.js","constants/operatives.js","constants/palette.js","assets/components/option.js","constants/calls/GraphQL.js","constants/parameters.js","assets/components/charts/spline.js","assets/components/charts/bar.js","routes/poll.js","routes/feed.js","routes/new.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","Boolean","window","location","hostname","match","initialState","polls","web3","undefined","store","createContext","Provider","providerOptions","walletconnect","package","WalletConnectProvider","options","infuraId","authereum","Authereum","getWeb3","Promise","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","resolve","reject","web3Connect","provider","wrap","_context","prev","next","Web3Connect","Core","network","cacheProvider","connect","sent","Web3","t0","stop","_x","_x2","apply","this","arguments","Navigation","_useState","useState","react_default","createElement","className","onClick","_initialiseWeb","initialiseWeb3","href","_useState2","slicedToArray","navComponent","setNav","_useState3","_useState4","_useContext","useContext","dispatch","accounts","eth","getAccounts","LoggedIn","account","payload","type","alert","react_router_dom","to","concat","src","makeBlockie","state","Row","Col","sm","md","size","offset","logo","chartId","str","toConsumableArray","substring","reduceRight","res","_","__","arr","splice","Math","random","length","join","sortVotes","_yesVotes","_noVotes","totalVotes","sort","b","unshift","getRecords","users","history","yes","no","voters","entries","map","_ref2","_ref3","value","address","push","forEach","index","parseFloat","isNaN","abrupt","createURL","string","replace","toLowerCase","slice","QRCode","require","Option","props","ENS","title","react","id","tabIndex","role","aria-hidden","data-dismiss","aria-label","dismiss","QUERY_POLL","poll","QUERY_ISSUES","makeRequest","query","fetch","objectSpread","body","method","headers","Content-Type","Accept","JSON","stringify","then","response","json","data","catch","console","log","getPolls","_getPolls","_callee2","result","routeObject","_context2","issues","obj","getPollMetadata","_getPollMetadata","_callee3","pollName","_context3","WEEKDAYS","CHARTS","BAR_CONFIG","_data","_range","responsive","labels","datasets","borderColor","borderWidth","fill","legend","display","scales","xAxes","scaleLabel","labelString","ticks","suggestedMin","max","callback","label","toExponential","SPLINE_CONFIG","lineTension","bezierCurve","yAxes","min","gridLines","drawOnChartArea","SPLINE_STYLE","_gradient","backgroundColor","borderDash","borderDashOffset","pointBackgroundColor","pointBorderColor","pointHoverBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBorderWidth","pointRadius","makeRepeated","repeats","Array","from","Spline","useEffect","_props$pollRecords","pollRecords","dataArray","maxValue","minValue","maxRange","ceil","minRange","ctx","document","getElementById","getContext","range","labelArray","parseInt","gradientStroke","createLinearGradient","addColorStop","Chart","composeAndRender","Bar","_props$pollCount","pollCount","maximumValue","Poll","setRecords","pollOptions","setOptions","_useState5","_useState6","setCount","_useState7","_useState8","pollDescription","setDescription","_useState9","_useState10","graphState","setGraphState","_useState11","_useState12","setUnique","_useState13","_useState14","_useState15","_useState16","pollTopic","setTopic","useParams","useHistory","selection","option","route","_state$polls$id","optionAaddr","optionBaddr","pollMetadata","records","issuer","getMetadata","data-target","data-toggle","bar","spline","components_option","pathname","Feed","keys","routes_poll","key","NewVote","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","contract","componentDidMount","instance","Contract","abi","setState","error","makeNewVote","bind","assertThisInitialized","updateQuestion","updateDeadline","question","deadline","methods","newVoteProposal","Date","now","send","event","target","placeholder","onChange","Component","constant","inputs","name","outputs","payable","stateMutability","anonymous","indexed","withRouter","scrollTo","pollStream","retrievePolls","Container","components_navigation","react_router","path","component","exact","New","ReactDOM","render","children","_useReducer","useReducer","action","_useReducer2","basename","src_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.584fab24.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.0a58105d.png\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { createContext, useReducer } from 'react';\n\nconst initialState = { polls: [], web3: undefined }\nconst store = createContext(initialState)\nconst { Provider } = store\n\nconst StateProvider = ( { children } ) => {\n  const [state, dispatch] = useReducer((state, action) => {\n    switch(action.type) {\n      case 'POLL':\n        return { ...state, polls: action.payload }\n      case 'WEB3':\n        return { ...state, web3: action.payload }\n      default:\n        return state\n    };\n  }, initialState)\n\n  return <Provider value={{ state, dispatch }}>{children}</Provider>;\n};\n\nexport { store, StateProvider }\n","import Web3 from \"web3\";\nimport Web3Connect from \"web3connect\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport Authereum from \"authereum\";\n\nconst providerOptions = {\n  walletconnect: {\n    package: WalletConnectProvider,\n    options: {\n      infuraId: \"INFURA_ID\"\n    }\n  },\n  authereum: {\n    package: Authereum,\n    options: {}\n  }\n};\n\nconst getWeb3 = () => (\n  new Promise(async(resolve, reject) => {\n    try {\n      const web3Connect = new Web3Connect.Core({\n        network: \"mainnet\",\n        cacheProvider: true,\n        providerOptions\n      })\n      const provider = await web3Connect.connect()\n      const web3 = new Web3(provider)\n      resolve(web3)\n    } catch(e){\n      resolve(e)\n    }\n  })\n);\n\nexport default getWeb3;\n","import React, { Component , useContext, useState, useEffect } from 'react'\nimport { Dropdown, DropdownToggle } from \"reactstrap\"\nimport makeBlockie from 'ethereum-blockies-base64'\nimport { Link } from 'react-router-dom'\nimport { Col, Row } from \"reactstrap\"\n\nimport getWeb3 from \"../../utils/getWeb3\"\nimport logo from \"../images/logo.png\"\nimport { store } from '../../state'\n\nfunction Navigation() {\n  const [ navComponent, setNav ] = useState(<Login />)\n  const [ address, setAddress ] = useState(\"\")\n\n  let { dispatch, state } = useContext(store)\n\n  async function initialiseWeb3(){\n    try {\n      const web3 = await getWeb3()\n      const accounts = await web3.eth.getAccounts()\n      setNav(<LoggedIn account={accounts[0]}/>)\n      dispatch({\n        payload: web3,\n        type: \"WEB3\"\n      })\n    } catch(e) {\n      alert(\"Web3 login could not be detected\")\n    }\n  }\n\n  function Login() {\n    return(\n      <a className=\"nav-link\" onClick={() => initialiseWeb3()} href=\"#\">\n        Login <i className=\"nav-login-icon tim-icons icon-minimal-down\"></i>\n      </a>\n    )\n  }\n\n  function LoggedIn({ account }) {\n    return(\n      <Link className=\"nav-link\" to={`/profile/${account}`}>\n        <img className=\"nav-profile\" src={makeBlockie(account)} />\n      </Link>\n    )\n  }\n\n  return(\n    <Row>\n      <Col sm=\"12\" md={{ size: 8, offset: 2 }}>\n        <nav className=\"navbar navbar-expand-lg fixed-top col-sm-12 col-md-7\">\n        <div className=\"navbar-wrapper\">\n          <Link className=\"navbar-brand\" to=\"/\">\n            <img className=\"navbar-logo\" src={logo} />\n            <span className=\"navbar-title\"> Burn Signal </span>\n          </Link>\n        </div>\n        <div className=\"collapse navbar-collapse justify-content-end\">\n          <ul className=\"navbar-nav\">\n            <li className=\"nav-item\">\n              <Link className=\"nav-link\" to=\"/\">\n                 Notifications <i className=\"nav-icon tim-icons icon-bell-55\"></i>\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              {navComponent}\n            </li>\n          </ul>\n        </div>\n      </nav>\n     </Col>\n   </Row>\n  )\n}\n\nexport default Navigation\n","export const chartId = str => [...str.substring(0, 10)].reduceRight((res,_,__,arr) => [...res,arr.splice(~~(Math.random()*arr.length),1)[0]],[]).join('');\n\nexport const sortVotes = (_yesVotes, _noVotes) => {\n  let totalVotes = _yesVotes.concat(_noVotes);\n\n  totalVotes.sort((a,b) => { return a - b });\n  totalVotes.unshift(0);\n\n  return totalVotes;\n}\n\nexport const getRecords = async(users) => {\n  var history = { yes: [], no: [], voters: [] }\n await Object.entries(users)\n       .map(([ index, value ]) => {\n        let { address, yes, no } = value\n\n        history.voters.push(address)\n        yes.value.forEach((value, index) => {\n          value = parseFloat(value)\n          if(isNaN(value)) value = 0\n          history.yes.push(value)\n        })\n        no.value.forEach((value, index) => {\n          value = parseFloat(value) * -1\n          if(isNaN(value)) value = 0\n          history.no.push(value)\n        })\n    })\n  return history\n}\n\nexport const createURL = string => {\n  string = string.replace(/([\\u2700-\\u27BF]|[\\uE000-\\uF8FF]|\\uD83C[\\uDC00-\\uDFFF]|\\uD83D[\\uDC00-\\uDFFF]|[\\u2011-\\u26FF]|\\uD83E[\\uDD10-\\uDDFF])/g, '');\n  string = string.replace(/ /g, '-').toLowerCase();\n\n  if(string.substring(string.length-1, string.length) === \"-\"){\n    string = string.slice(0, string.length-1)\n  } return string.replace('?', '');\n}\n\n// Code to process vote info. Should be easy to replace.\n// This is where BrightID check will be added.\n\nexport async function getVoteInfo(proposalData){\n  var anonymousDeposits = proposalData.data.anonymousDeposits;\n  var noDeposits = anonymousDeposits.length;\n  var voters = {};\n  var totalValue = 0;\n\n  // Check all the deposits for proposal\n  for(var i = 0;i < noDeposits;i++){\n\n    var yesValue = 0, noValue = 0;\n\n    // Add BrightID check. Don't count vote if not.??\n\n    if(anonymousDeposits[i].Choice === 'yes'){\n      yesValue = parseFloat(anonymousDeposits[i].ContriValue);\n    } else {\n      noValue = parseFloat(anonymousDeposits[i].ContriValue);\n    }\n\n    // Check if address has already been counted & initialise if not\n    if(voters[anonymousDeposits[i].SenderAddr] === undefined){\n      voters[anonymousDeposits[i].SenderAddr] = { yesTotalValue: yesValue, noTotalValue: noValue };\n    }else{\n      var newYesValue = voters[anonymousDeposits[i].SenderAddr].yesTotalValue + yesValue;\n      var newNoValue = voters[anonymousDeposits[i].SenderAddr].noTotalValue + noValue;\n      voters[anonymousDeposits[i].SenderAddr] = { yesTotalValue: newYesValue, noTotalValue: newNoValue };\n    }\n\n    totalValue += parseFloat(anonymousDeposits[i].ContriValue);\n  }\n\n  return { voters: voters, totalValue: totalValue}\n}\n","export const PURPLE_PRIMARY = \"#7533ff\";\nexport const BLUE_PRIMARY = \"#338aff\";\nexport const RED_PRIMARY = \"#ff4233\";\nexport const PINK_PRIMARY = \"#d048b6\";\n","import React, { Fragment, useState } from 'react'\nimport { Dropdown, DropdownToggle } from \"reactstrap\"\nimport { createURL } from \"../../constants/operatives\"\nimport { PINK_PRIMARY } from \"../../constants/palette.js\"\nimport { Col, Row } from \"reactstrap\"\nvar QRCode = require('qrcode.react');\n\nfunction Option(props) {\n  const [ triggerState, setTrigger ] = useState(false)\n  const ENS = `${createURL(props.title)}.burnsignal.eth`\n\n  return (\n    <Fragment>\n      <div className=\"modal fade\" id=\"yes\" tabIndex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\n        <div className=\"modal-dialog\" role=\"document\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <h5 className=\"modal-title\">{props.title}</h5>\n              <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" onClick={props.dismiss}>\n                <span aria-hidden=\"true\">&times;</span>\n              </button>\n            </div>\n            <div className=\"modal-body\">\n              Vote <span id=\"pink\">YES</span> by sending any amount of ETH to <br/>\n              <a href='https://etherscan.io'><span id=\"pink\">yes</span>.{ENS}</a>\n              <div className=\"poll-qr\">\n                <QRCode value={props.address.yes} />\n              </div>\n            To ensure that you vote counts, please link your ethereum account\n            to your BrightID account at  <a href=\"https://ethereum.brightid.org\">ethereum.brightid.org</a>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"modal fade\" id=\"no\" tabIndex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\n        <div className=\"modal-dialog\" role=\"document\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <h5 className=\"modal-title\">{props.title}</h5>\n              <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" onClick={props.dismiss}>\n                <span aria-hidden=\"true\">&times;</span>\n              </button>\n            </div>\n            <div className=\"modal-body\">\n              Vote <span id=\"pink\">NO</span> by sending any amount of ETH to <br/>\n              <a href='https://etherscan.io'><span id=\"pink\">no</span>.{ENS}</a>\n              <div className=\"poll-qr\">\n                <QRCode value={props.address.no} />\n              </div>\n            To ensure that you vote counts, please link your ethereum account\n            to your BrightID account at  <a href=\"https://ethereum.brightid.org\">ethereum.brightid.org</a>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  )\n}\n\nexport default Option\n","import { createURL } from '../operatives'\n\nconst QUERY_POLL = poll => `{ polls(where: { id: \"${poll}\" }) { yes no users { address yes { contributions timestamps total value sqrt } no { contributions timestamps total value sqrt } } } }`\nconst QUERY_ISSUES = `{ issues(where: { title_not_contains: \"fae\" }) { id body title issuer deadline optionBaddr optionAaddr } }`\nconst BURN_SUBGRAPH_ENDPOINT = \"https://api.thegraph.com/subgraphs/name/burnsignal/proof-of-concept\"\n\nconst requestHeaders = body => ({\n  method: 'POST',\n  headers: {\n    'Content-Type': 'application/json',\n    'Accept': 'application/json',\n  }, body: JSON.stringify({\n    query: body\n  })\n})\n\nconst makeRequest = async(query) => {\n  return await fetch(BURN_SUBGRAPH_ENDPOINT,\n    { ...requestHeaders(query)})\n    .then(response =>\n      response.json())\n    .then(data => data)\n    .catch(console.log)\n}\n\nexport async function getPolls() {\n  const result = await makeRequest(QUERY_ISSUES)\n  const routeObject = {}\n\n  result.data.issues.forEach(obj => {\n    routeObject[createURL(obj.title)] = { ...obj }\n  }); return routeObject;\n}\n\nexport async function getPollMetadata(pollName){\n  const result = await makeRequest(QUERY_POLL(pollName))\n  if(result.data.polls.length == 0){\n    return { yes: 0, no: 0, users: [] }\n  } else return result.data.polls[0]\n}\n","import { PINK_PRIMARY } from \"./palette.js\"\n\nexport const WEEKDAYS =  ['Monday', 'Tuesday', 'Wendsday', 'Thursday', 'Friday', 'Saturday', 'Sunday' ]\n\nexport const CHARTS = {\n  BAR_CONFIG: (_data, _range) => ({\n    type: 'horizontalBar',\n    responsive: true,\n    data: {\n      labels: ['Yes','No' ],\n      datasets: [{\n        data: _data,\n        borderColor: PINK_PRIMARY,\n        borderWidth: 2,\n        fill: true\n      }]\n    },\n    options: {\n      legend: { display: false },\n      scales: {\n        xAxes: [{\n          scaleLabel: {\n            display: true,\n            labelString: \"Wei (ETH)\"\n          },\n          ticks: {\n            suggestedMin: 0,\n            max: _range,\n            callback: function(label, index, labels) {\n              if(label > 1e8 || label < (-1 * 1e8)){\n                 return label.toExponential()\n              } else return label;\n            }\n          }\n        }]\n      },\n    }\n  }),\n  SPLINE_CONFIG: (_data, _range) => ({\n    options: {\n      lineTension: 100,\n      bezierCurve: true,\n      legend: { display: false },\n      scales: {\n        yAxes: [{\n          id:'yAxis1',\n          scaleLabel: {\n            labelString: \"Wei (ETH)\",\n            display: true\n          },\n          ticks: {\n            min: (_range * -1),\n            max: _range,\n            callback: function(label, index, labels) {\n              if(label > 1e8 || label < (-1 * 1e8)){\n                return label.toExponential()\n              } else return label;\n            }\n          }\n        },\n        {\n          id:'yAxis2',\n          labels: ['', 'Yes', '', 'No', ''],\n          type:\"category\",\n          gridLines: {\n           drawOnChartArea: false,\n           display: false\n          },\n       }]\n      },\n    },\n    type: 'line',\n    data: _data,\n  }),\n  SPLINE_STYLE: _gradient => ({\n    label: \"Data\",\n    fill: true,\n    backgroundColor: _gradient,\n    borderColor: PINK_PRIMARY,\n    borderWidth: 2,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    pointBackgroundColor: PINK_PRIMARY,\n    pointBorderColor:'rgba(255,255,255,0)',\n    pointHoverBackgroundColor: PINK_PRIMARY,\n    pointBorderWidth: 20,\n    pointHoverRadius: 4,\n    pointHoverBorderWidth: 15,\n    pointRadius: 4,\n  })\n}\n","import React, { Fragment, useEffect, useState } from 'react'\nimport Chart from 'chart.js'\n\nimport { WEEKDAYS, CHARTS } from \"../../../constants/parameters.js\"\nimport { sortVotes } from \"../../../constants/operatives.js\"\n\nconst makeRepeated = (arr, repeats) =>\n  [].concat(...Array.from({ length: repeats }, () => arr));\n\nfunction Spline(props){\n  let { chartId } = props\n\n  useEffect(() => {\n    const composeAndRender = () => {\n      let { yes, no } = props.pollRecords\n\n      const dataArray = sortVotes(yes, no)\n\n      var maxValue = Math.max(...dataArray)\n      var minValue = Math.min(...dataArray)\n      var maxRange = Math.ceil((((maxValue * 0.2) + maxValue) /10 ) * 10)\n      var minRange = Math.ceil((((minValue * 0.2) + minValue) /10 ) * 10) * -1\n\n      const ctx = document.getElementById(chartId).getContext(\"2d\")\n\n      let range = minRange > maxRange ? minRange : maxRange\n\n      const labelArray = dataArray.length > WEEKDAYS.length ?\n      makeRepeated(WEEKDAYS, parseInt(dataArray.length/WEEKDAYS.length)) :\n      WEEKDAYS.slice(0, dataArray.length)\n\n      var gradientStroke = ctx.createLinearGradient(0,337.5,0, 25)\n\n      gradientStroke.addColorStop(1, 'rgba(255,51,138,0.225)')\n      gradientStroke.addColorStop(0.7, 'rgba(255,51,138,0.2)')\n      gradientStroke.addColorStop(0.5, 'rgba(255,51,138,0.125)')\n      gradientStroke.addColorStop(0.2, 'rgba(255,51,138,0.075)')\n      gradientStroke.addColorStop(0, 'rgba(119,52,169,0)')\n\n      var data = {\n        labels: labelArray,\n        datasets: [{\n          ...CHARTS.SPLINE_STYLE(gradientStroke),\n          data: dataArray,\n        }]\n      }\n\n      new Chart(ctx, { ...CHARTS.SPLINE_CONFIG(data, range) })\n    }\n    composeAndRender()\n  }, [ ])\n\n  return(\n    <Fragment>\n      <canvas id={chartId}> </canvas>\n    </Fragment>\n  )\n}\n\nexport default Spline;\n","import React, { Fragment, useEffect, useState } from 'react'\nimport Chart from 'chart.js';\n\nimport { CHARTS } from \"../../../constants/parameters.js\";\n\nfunction Bar(props) {\n  const { chartId } = props;\n\n  useEffect(() => {\n    const composeAndRender = () => {\n      let { yes, no } = props.pollCount;\n\n      const ctx = document.getElementById(chartId).getContext(\"2d\")\n      const maximumValue = yes > no ? yes : no\n      const range = ( maximumValue * 0.20 ) + maximumValue\n      const data = [ yes, no ]\n\n      new Chart(ctx, { ...CHARTS.BAR_CONFIG(data, range) })\n    }\n    composeAndRender()\n  }, [ ])\n\n  return(\n    <Fragment>\n      <canvas id={chartId}> </canvas>\n    </Fragment>\n  );\n}\n\nexport default Bar;\n","import React, { Fragment, useContext, useState, useEffect } from 'react';\nimport { useParams, useHistory } from \"react-router-dom\"\nimport { Row, Col } from \"reactstrap\"\n\nimport { getVoteInfo, getRecords } from '../constants/operatives'\nimport { getPollMetadata } from \"../constants/calls/GraphQL\"\nimport { chartId } from \"../constants/operatives\"\nimport { store } from '../state'\n\nimport Spline from '../assets/components/charts/spline'\nimport Option from '../assets/components/option'\nimport Bar from '../assets/components/charts/bar'\n\nimport \"../assets/css/poll.css\"\n\nfunction Poll(props){\n  const [ pollRecords, setRecords ] = useState({ yes: [], no: [] })\n  const [ pollOptions, setOptions ] = useState({ yes: \"\", no : \"\" })\n  const [ pollCount, setCount ] = useState({ yes: 0, no: 0 })\n  const [ pollDescription , setDescription ] = useState(\"\")\n  const [ graphState, setGraphState ] = useState(false)\n  const [ uniqueAddresses, setUnique ] = useState(0)\n  const [ totalPledged, setPledged ] = useState(0)\n  const [ pollTopic , setTopic ] = useState(\"\")\n\n  let { state } = useContext(store)\n  let { address } = useParams()\n  let history = useHistory()\n\n  const id = props.location !== undefined ? address : props.id\n\n  function selection(option) {\n    const route = `/poll/${id}/${option}`\n    if(history[history.length-1] !== route){\n      history.push(route)\n    }\n  }\n\n  function dismiss() {\n    let route = props.location.pathname.replace('/yes', '')\n    route = route.replace('/no', '')\n    history.push(route)\n  }\n\n  useEffect(() => {\n    const getMetadata = async() => {\n      if(state.polls[id] !== undefined){\n        let { title, body, issuer, optionAaddr, optionBaddr } = state.polls[id]\n        var pollMetadata = await getPollMetadata(title)\n\n        let { yes, users, no } = pollMetadata\n        let records = await getRecords(users)\n\n        setCount({ yes: parseInt(yes), no: parseInt(no) })\n        setOptions({ yes: optionAaddr, no: optionBaddr })\n        setUnique(records.voters.length)\n        setRecords({ ...records })\n        setDescription(body)\n        setGraphState(true)\n        setTopic(title)\n        }\n     }\n    getMetadata()\n  }, [ state ])\n\n  return(\n     <div className=\"proposalComponent\">\n      <Row>\n        <Col sm=\"12\" md={{ size: 8, offset: 2 }}>\n          <div className=\"card\">\n            <div className=\"card-header\">\n              <div className=\"poll-title\">{pollTopic}</div>\n            </div>\n            <div className=\"card-body\">\n              <div className=\"poll-description\">{pollDescription}</div>\n              <div className=\"vote-options\">\n                <button type=\"button\" data-target=\"#yes\" data-toggle=\"modal\" className=\"btn btn-primary btn-simple\" onClick={() => selection(\"yes\")}>Yes</button>\n                <button type=\"button\" data-target=\"#no\" data-toggle=\"modal\" className=\"btn btn-primary btn-simple\" onClick={() => selection(\"no\")}>No</button>\n              </div>\n            </div>\n          </div>\n        </Col>\n      </Row>\n      <Row>\n        <Col sm=\"12\" md={{ size: 8, offset: 2 }}>\n          <div className=\"card\">\n            <div className=\"card-header\">\n              <h3 className=\"card-category\">Results</h3>\n            </div>\n            <div className=\"card-body\">\n              {graphState && (\n                <Bar chartId={chartId(id)} pollCount={pollCount}/>\n              )}\n            </div>\n          </div>\n        </Col>\n      </Row>\n      <Row>\n        <Col sm=\"12\" md={{ size: 8, offset: 2 }}>\n          <div className=\"card\">\n            <div className=\"card-header\">\n              <h3 className=\"card-category\">History</h3>\n            </div>\n            <div className=\"card-body\">\n              {graphState && (\n                <Spline chartId={chartId(id)} pollRecords={pollRecords} />\n              )}\n            </div>\n          </div>\n        </Col>\n      </Row>\n      <Option dismiss={dismiss} title={pollTopic} address={pollOptions} />\n    </div>\n  )\n}\n\nexport default Poll\n","import React, { Fragment, useContext, useEffect } from 'react';\nimport { Route, Link } from 'react-router-dom'\n\nimport { store } from '../state'\nimport Proposal from './poll';\n\nfunction Feed() {\n  let { state } = useContext(store)\n\n  return (\n    <Fragment>\n      {Object.keys(state.polls).map((id, index) => (\n        <Link to={`/poll/${id}`}>\n          <Proposal key={id} id={id}/>\n        </Link>\n      ))}\n    </Fragment>\n  )\n}\n\nexport default Feed\n","import React, { Component } from 'react';\nimport getWeb3 from \"../utils/getWeb3\";\n\nclass NewVote extends Component {\n  // Allows user to create a new Proposal/Question/Vote/Whatever it's agreed to be called.\n  // Uses hardcoded contract address.\n  // Deadline not currently functioning.\n  state = { web3: null, accounts: null, contract: null };\n\n  constructor(props) {\n    super(props);\n\n    this.makeNewVote = this.makeNewVote.bind(this);\n    this.updateQuestion = this.updateQuestion.bind(this);\n    this.updateDeadline = this.updateDeadline.bind(this);\n  }\n\n  componentDidMount = async () => {\n    try {\n      console.log('Loading web3...');\n      // Get network provider and web3 instance.\n      const web3 = await getWeb3();\n\n      // Use web3 to get the user's accounts.\n      const accounts = await web3.eth.getAccounts();\n\n\n      let address = '0x6936b81d7629378aabddcf882b2a7fdfff1cd962';  // Taken from old repo, assume this is the Ropstein deployed\n\n      const instance = new web3.eth.Contract(abi, address);\n\n      // Set web3, accounts, and contract to the state, and then proceed with an\n      // example of interacting with the contract's methods.\n      this.setState({ web3, accounts, contract: instance });\n\n    } catch (error) {\n      alert(\n        'Error loading The Graph',\n      );\n      console.error(error);\n    }\n  };\n\n  async makeNewVote(){\n    console.log('New Vote');\n    console.log(this.state.question);\n    console.log(this.state.deadline);\n    console.log('Sending transaction...');\n    await this.state.contract.methods.newVoteProposal(this.state.question,'Here is some data', (Date.now() + 3600*1000)).send({ from: this.state.accounts[0] });\n    console.log('Done?')\n  }\n\n  updateQuestion(event) {\n    this.setState({question: event.target.value});\n  }\n\n  updateDeadline(event) {\n    this.setState({deadline: event.target.value});\n  }\n\n  render() {\n    return(\n\n      <div className=\"App\">\n\n        <div className=\"main-panel\">\n\n            <div className=\"content\">\n              <div className=\"row\">\n                <div className=\"col-md-6\">\n                  <div className=\"card\">\n                    <div className=\"card-header\">\n                      <h5 className=\"title\">Ask a question...</h5>\n                    </div>\n                    <div className=\"card-body\">\n                      <form>\n\n                        <div className=\"row\">\n                          <div className=\"col-md-12 pr-md-1\">\n                            <div className=\"form-group\">\n                              <label>Your Question</label>\n                              <input type=\"text\" className=\"form-control\" placeholder=\"Ask Away\" onChange={this.updateQuestion}/>\n                            </div>\n                          </div>\n\n                        </div>\n                        <div className=\"row\">\n                          <div className=\"col-md-12 pr-md-1\">\n                            <div className=\"form-group\">\n                              <label>Deadline</label>\n                              <input type=\"text\" className=\"form-control\" placeholder=\"Block No\"  onChange={this.updateDeadline}/>\n                            </div>\n                          </div>\n                        </div>\n\n                      </form>\n                    </div>\n                    <div className=\"card-footer\">\n                      <button type=\"submit\" className=\"btn btn-fill btn-primary\" onClick={this.makeNewVote}>Post</button>\n                    </div>\n                  </div>\n                </div>\n\n              </div>\n            </div>\n\n        </div>\n      </div>\n\n    )\n\n  }\n}\n\nexport default NewVote;\n\nvar abi = [\n  {\n   \"constant\": false,\n   \"inputs\": [\n    {\n     \"name\": \"_name\",\n     \"type\": \"string\"\n    },\n    {\n     \"name\": \"_data\",\n     \"type\": \"string\"\n    },\n    {\n     \"name\": \"_deadline\",\n     \"type\": \"uint64\"\n    }\n   ],\n   \"name\": \"newVoteProposal\",\n   \"outputs\": [\n    {\n     \"name\": \"\",\n     \"type\": \"uint256\"\n    }\n   ],\n   \"payable\": false,\n   \"stateMutability\": \"nonpayable\",\n   \"type\": \"function\"\n  },\n  {\n   \"inputs\": [],\n   \"payable\": false,\n   \"stateMutability\": \"nonpayable\",\n   \"type\": \"constructor\"\n  },\n  {\n   \"anonymous\": false,\n   \"inputs\": [\n    {\n     \"indexed\": false,\n     \"name\": \"proposalID\",\n     \"type\": \"uint256\"\n    },\n    {\n     \"indexed\": false,\n     \"name\": \"issuer\",\n     \"type\": \"address\"\n    },\n    {\n     \"indexed\": false,\n     \"name\": \"deadline\",\n     \"type\": \"uint256\"\n    },\n    {\n     \"indexed\": false,\n     \"name\": \"name\",\n     \"type\": \"string\"\n    },\n    {\n     \"indexed\": false,\n     \"name\": \"data\",\n     \"type\": \"string\"\n    }\n   ],\n   \"name\": \"newProposalIssued\",\n   \"type\": \"event\"\n  },\n  {\n   \"constant\": true,\n   \"inputs\": [\n    {\n     \"name\": \"\",\n     \"type\": \"uint256\"\n    }\n   ],\n   \"name\": \"proposals\",\n   \"outputs\": [\n    {\n     \"name\": \"issuer\",\n     \"type\": \"address\"\n    },\n    {\n     \"name\": \"deadline\",\n     \"type\": \"uint256\"\n    },\n    {\n     \"name\": \"name\",\n     \"type\": \"string\"\n    },\n    {\n     \"name\": \"data\",\n     \"type\": \"string\"\n    }\n   ],\n   \"payable\": false,\n   \"stateMutability\": \"view\",\n   \"type\": \"function\"\n  }\n ]\n","import React, { Fragment, useContext, useEffect } from \"react\";\nimport {  Route, HashRouter, withRouter } from 'react-router-dom'\nimport { Container } from \"reactstrap\"\n\nimport \"./assets/libs/black-dashboard/assets/css/black-dashboard-react.css\"\nimport \"./assets/libs/black-dashboard/assets/css/nucleo-icons.css\"\nimport \"./assets/css/navigation.css\"\n\nimport Navigation from './assets/components/navigation'\nimport Option from './assets/components/option'\n\nimport { getPolls } from \"./constants/calls/GraphQL\"\nimport { store } from './state'\n\nimport Poll from './routes/poll'\nimport Feed from './routes/feed'\nimport New from './routes/new'\n\nfunction App(props) {\n  let { dispatch, state } = useContext(store)\n\n  useEffect(() => window.scrollTo(0, 0), [ props.location.pathname ])\n\n  useEffect(() => {\n    const retrievePolls = async() => {\n      var pollStream = await getPolls()\n      dispatch({\n        payload: pollStream,\n        type: \"POLL\"\n      })\n    }\n    retrievePolls()\n  }, [])\n\n  return (\n    <main>\n      <Container>\n        <Navigation />\n        <Route path=\"/poll/:address\" component={Poll} />\n        <Route exact path=\"/\" component={Feed} />\n        <Route path=\"/new\" component={New} />\n      </Container>\n    </main>\n  );\n}\n\nexport default withRouter(App);\n","import React, { Fragment } from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { HashRouter, Route } from 'react-router-dom'\nimport * as serviceWorker from './serviceWorker'\n\nimport { StateProvider } from './state'\nimport App from './App';\n\nReactDOM.render(\n  <StateProvider>\n    <HashRouter basename='/'>\n      <Fragment>\n        <App />\n      </Fragment>\n    </HashRouter>\n  </StateProvider>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister()\n"],"sourceRoot":""}