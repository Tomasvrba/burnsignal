{"version":3,"sources":["assets/images/logo.png","serviceWorker.js","state/index.js","constants/parameters.js","constants/palette.js","utils/getWeb3.js","assets/components/navigation.js","constants/operatives.js","assets/components/option.js","constants/calls/GraphQL.js","routes/profile.js","assets/components/charts/spline.js","assets/components/charts/bar.js","routes/poll.js","routes/feed.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","Boolean","window","location","hostname","match","initialState","polls","web3","undefined","auth","verified","store","createContext","Provider","CONTRACT_ADDRESS","WEEKDAYS","CHARTS","BAR_CONFIG","_data","_range","type","responsive","data","labels","datasets","borderColor","borderWidth","fill","options","legend","display","scales","xAxes","scaleLabel","labelString","ticks","suggestedMin","max","callback","label","index","toExponential","SPLINE_CONFIG","lineTension","bezierCurve","yAxes","id","min","gridLines","drawOnChartArea","SPLINE_STYLE","_gradient","backgroundColor","borderDash","borderDashOffset","pointBackgroundColor","pointBorderColor","pointHoverBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBorderWidth","pointRadius","CONTRACT_ABI","constant","inputs","name","outputs","payable","stateMutability","anonymous","indexed","providerOptions","walletconnect","package","WalletConnectProvider","infuraId","authereum","Authereum","getWeb3","Promise","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","resolve","reject","web3Connect","provider","wrap","_context","prev","next","Web3Connect","Core","network","cacheProvider","connect","sent","Web3","t0","stop","_x","_x2","apply","this","arguments","Navigation","_useState","useState","react_default","createElement","DropdownItem","onClick","_initialiseWeb","initialiseWeb3","_useState2","slicedToArray","dropdownComponent","setDropdown","_useState3","_useState4","dropdownOpen","setDropdownOpen","_useState5","react","_useState6","navComponent","setNav","_useState7","_useState8","description","setDescription","_useState9","_useState10","question","setQuestion","_useState11","_useState12","_useState13","_useState14","focus","setFocus","_useContext","useContext","dispatch","state","_callee2","accounts","instance","_context2","eth","getAccounts","Contract","payload","Logout","account","LoggedIn","alert","data-target","data-toggle","react_router_dom","to","concat","_ref2","className","src","makeBlockie","createPoll","_ref3","recentBlock","deadline","getBlock","timestamp","methods","newVoteProposal","send","from","on","hash","document","getElementsByClassName","value","handleDescription","e","target","handleQuestion","triggerFocus","defineProperty","leaveFocus","Row","Col","sm","md","size","offset","logo","Dropdown","isOpen","toggle","prevState","DropdownToggle","caret","DropdownMenu","divider","href","tabIndex","role","aria-hidden","data-dismiss","aria-label","autoFocus","onMouseEnter","onMouseLeave","onChange","placeholder","chartId","str","toConsumableArray","substring","reduceRight","res","_","__","arr","splice","Math","random","length","join","ETH","wei","parseInt","parseFloat","pow","toFixed","sortVotes","_yesVotes","_noVotes","totalVotes","unshift","getRecords","users","history","yes","no","voters","entries","map","address","push","forEach","isNaN","abrupt","createURL","string","replace","toLowerCase","slice","toChecksumAddress","keccak_256","ret","i","toUpperCase","QRCode","require","Option","props","ENS","title","burnAmount","setBurn","handleBurn","Unauthenticated","option","dismiss","AuthenticatedAndVerified","class","makeTransaction","AuthenticatedAndUnverified","burn","utils","toBN","mul","sendTransaction","QUERY_POLL","poll","QUERY_ISSUES","QUERY_USER","user","makeRequest","query","fetch","objectSpread","body","method","headers","Content-Type","Accept","JSON","stringify","then","response","json","catch","console","log","getPolls","_getPolls","result","routeObject","issues","obj","getPollMetadata","_getPollMetadata","_callee3","pollName","_context3","getProfileMetadata","_x3","_getProfileMetadata","_callee4","profileAddress","_context4","burned","burns","Profile","totalBurned","setBurned","userPolls","setPolls","setVotes","avgBurned","setAvg","useParams","useEffect","profileMetadata","gatherProfile","makeRepeated","repeats","Array","Spline","_props$pollRecords","pollRecords","dataArray","maxValue","minValue","maxRange","ceil","minRange","ctx","getElementById","getContext","range","labelArray","gradientStroke","createLinearGradient","addColorStop","Chart","composeAndRender","Bar","_props$pollCount","pollCount","maximumValue","Poll","setRecords","pollOptions","setOptions","setCount","pollDescription","graphState","setGraphState","setUnique","_useState15","_useState16","pollAuthor","setAuthor","_useState17","_useState18","pollTopic","setTopic","useHistory","selection","route","_state$polls$id","issuer","optionAaddr","optionBaddr","pollMetadata","records","getMetadata","bar","spline","components_option","pathname","Feed","keys","reverse","routes_poll","key","withRouter","scrollTo","pollStream","retrievePolls","Container","components_navigation","react_router","path","component","exact","ReactDOM","render","children","_useReducer","useReducer","action","_useReducer2","basename","src_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.26c3255e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.0a58105d.png\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { createContext, useReducer } from 'react';\n\nconst initialState = { polls: [], web3: undefined, auth: false, verified: false }\nconst store = createContext(initialState)\nconst { Provider } = store\n\nconst StateProvider = ( { children } ) => {\n  const [state, dispatch] = useReducer((state, action) => {\n    switch(action.type) {\n      case 'POLL':\n        return { ...state, polls: action.payload }\n      case 'WEB3':\n        return { ...state, ...action.payload, auth: true, verified: true }\n      default:\n        return state\n    };\n  }, initialState)\n\n  return <Provider value={{ state, dispatch }}>{children}</Provider>;\n};\n\nexport { store, StateProvider }\n","import { PINK_PRIMARY } from \"./palette.js\"\n\nexport const CONTRACT_ADDRESS = \"0x61a8598eabb7bddca95d3783c228878cd788e0a9\"\n\nexport const WEEKDAYS = ['Monday', 'Tuesday', 'Wendsday', 'Thursday', 'Friday', 'Saturday', 'Sunday' ]\nexport const CHARTS = {\n  BAR_CONFIG: (_data, _range) => ({\n    type: 'horizontalBar',\n    responsive: true,\n    data: {\n      labels: ['Yes','No' ],\n      datasets: [{\n        data: _data,\n        borderColor: PINK_PRIMARY,\n        borderWidth: 2,\n        fill: true\n      }]\n    },\n    options: {\n      legend: { display: false },\n      scales: {\n        xAxes: [{\n          scaleLabel: {\n            display: true,\n            labelString: \"Wei (ETH)\"\n          },\n          ticks: {\n            suggestedMin: 0,\n            max: _range,\n            callback: function(label, index, labels) {\n              if(label > 1e8 || label < (-1 * 1e8)){\n                 return label.toExponential()\n              } else return label;\n            }\n          }\n        }]\n      },\n    }\n  }),\n  SPLINE_CONFIG: (_data, _range) => ({\n    options: {\n      lineTension: 100,\n      bezierCurve: true,\n      legend: { display: false },\n      scales: {\n        yAxes: [{\n          id:'yAxis1',\n          scaleLabel: {\n            labelString: \"Wei (ETH)\",\n            display: true\n          },\n          ticks: {\n            min: (_range * -1),\n            max: _range,\n            callback: function(label, index, labels) {\n              if(label > 1e8 || label < (-1 * 1e8)){\n                return label.toExponential()\n              } else return label;\n            }\n          }\n        },\n        {\n          id:'yAxis2',\n          labels: ['', 'Yes', '', 'No', ''],\n          type:\"category\",\n          gridLines: {\n           drawOnChartArea: false,\n           display: false\n          },\n       }]\n      },\n    },\n    type: 'line',\n    data: _data,\n  }),\n  SPLINE_STYLE: _gradient => ({\n    label: \"Data\",\n    fill: true,\n    backgroundColor: _gradient,\n    borderColor: PINK_PRIMARY,\n    borderWidth: 2,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    pointBackgroundColor: PINK_PRIMARY,\n    pointBorderColor:'rgba(255,255,255,0)',\n    pointHoverBackgroundColor: PINK_PRIMARY,\n    pointBorderWidth: 20,\n    pointHoverRadius: 4,\n    pointHoverBorderWidth: 15,\n    pointRadius: 4,\n  })\n}\n\nexport const CONTRACT_ABI = [\n\t{\n\t\t\"constant\": false,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"name\": \"_name\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"_data\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"_deadline\",\n\t\t\t\t\"type\": \"uint64\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"newVoteProposal\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"name\": \"newProposal\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t}\n\t\t],\n\t\t\"payable\": false,\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"anonymous\": false,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"name\": \"proposal\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"name\": \"issuer\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"name\": \"deadline\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"name\": \"name\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"name\": \"data\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"name\": \"optionA\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"name\": \"optionAaddr\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"name\": \"optionB\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"name\": \"optionBaddr\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"newProposalIssued\",\n\t\t\"type\": \"event\"\n\t}\n]\n","export const PURPLE_PRIMARY = \"#7533ff\";\nexport const BLUE_PRIMARY = \"#338aff\";\nexport const RED_PRIMARY = \"#ff4233\";\nexport const PINK_PRIMARY = \"#d048b6\";\n","import Web3 from \"web3\";\nimport Web3Connect from \"web3connect\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport Authereum from \"authereum\";\n\nconst providerOptions = {\n  walletconnect: {\n    package: WalletConnectProvider,\n    options: {\n      infuraId: \"INFURA_ID\"\n    }\n  },\n  authereum: {\n    package: Authereum,\n    options: {}\n  }\n};\n\nconst getWeb3 = () => (\n  new Promise(async(resolve, reject) => {\n    try {\n      const web3Connect = new Web3Connect.Core({\n        network: \"mainnet\",\n        cacheProvider: true,\n        providerOptions\n      })\n      const provider = await web3Connect.connect()\n      const web3 = new Web3(provider)\n      resolve(web3)\n    } catch(e){\n      resolve(e)\n    }\n  })\n);\n\nexport default getWeb3;\n","import React, { Fragment, useContext, useState, useEffect } from 'react'\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\nimport makeBlockie from 'ethereum-blockies-base64'\nimport { Link } from 'react-router-dom'\nimport { Col, Row } from \"reactstrap\"\n\nimport { CONTRACT_ADDRESS, CONTRACT_ABI } from \"../../constants/parameters\"\nimport getWeb3 from \"../../utils/getWeb3\"\nimport logo from \"../images/logo.png\"\nimport { store } from '../../state'\n\nfunction Navigation() {\n  const [ dropdownComponent, setDropdown ] = useState(<Login />)\n  const [ dropdownOpen, setDropdownOpen ] = useState(false)\n  const [ navComponent, setNav ] = useState(<Fragment />)\n  const [ description, setDescription ] = useState(\"\")\n  const [ question, setQuestion ] = useState(\"\")\n  const [ address, setAddress ] = useState(\"\")\n  const [ focus, setFocus ] = useState({})\n\n  let { dispatch, state } = useContext(store)\n\n  async function initialiseWeb3(){\n    try {\n      const web3 = await getWeb3()\n      const accounts = await web3.eth.getAccounts()\n      const instance = new web3.eth.Contract(\n        CONTRACT_ABI, CONTRACT_ADDRESS)\n      dispatch({\n        payload: {\n          web3, accounts, instance\n        },\n        type: \"WEB3\"\n      })\n      setDropdown(<Logout account={accounts[0]}/>)\n      setNav(<LoggedIn account={accounts[0]}/>)\n    } catch(e) {\n      alert(\"Web3 login could not be detected\")\n    }\n  }\n\n  function Login() {\n    return(\n      <DropdownItem onClick={() => initialiseWeb3()}>Login</DropdownItem>\n    )\n  }\n\n  function About() {\n    return(\n      <div className=\"modal fade\" id=\"about\" tabIndex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\n        <div className=\"modal-dialog\" role=\"document\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <h5 className=\"modal-title align-left\">About</h5>\n              <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                <span aria-hidden=\"true\">&times;</span>\n              </button>\n            </div>\n            <div className=\"modal-body about\">\n              <p>Burn Signal is an experiment in distributed preference signaling where verified unique\n              users burn ETH to signal their opinion.</p>\n              <p>Votes are weighted quadratically.</p>\n              <p>We use <a target=\"_\" href=\"https://brightid.org\">BrightID</a> as our proof of uniqueness, only votes\n              cast by ethereum addresses that are verified unique by BrightID count towards the outcome of\n              a burn signals.</p><br/>\n              <p>Burn Signal is funded by grants and community contributions. If you would like to contribute\n              funds, check out our <a target=\"_\" href=\"https://gitcoin.co/grants/138/burner-vote\">Gitcoin Grants campaign</a>,\n              if you would like to contribute code or other work, check out our <a target=\"_\" href=\"https://github.com/burnsignal\">\n              GitHub</a> and our <a target=\"_\" href=\"https://colony.io/colony/burn\">Colony</a>.</p><br/>\n              <p>Check out our <a target=\"_\" href=\"https://blog.burnsignal.io\"> blog </a> for more information.</p>\n            </div>\n          </div>\n        </div>\n      </div>\n     )\n  }\n\n  function Logout({ account }) {\n    return(\n      <Fragment>\n        <DropdownItem type=\"button\" data-target=\"#create\" data-toggle=\"modal\"> Create </DropdownItem>\n        <Link to={`/profile/${account}`}>\n          <DropdownItem> Profile </DropdownItem>\n        </Link>\n        <DropdownItem>Logout</DropdownItem>\n      </Fragment>\n    )\n  }\n\n  function LoggedIn({ account }) {\n    return(\n      <Link className=\"nav-link\" to={`/profile/${account}`}>\n        <img className=\"nav-profile\" src={makeBlockie(account)} />\n      </Link>\n    )\n  }\n\n  function Create() {\n    return(\n      <div className=\"modal fade\" id=\"create\" tabIndex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\n        <div className=\"modal-dialog\" role=\"document\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <h5 className=\"modal-title align-left\">Create</h5>\n              <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                <span aria-hidden=\"true\">&times;</span>\n              </button>\n            </div>\n            <div className=\"modal-body about\">\n              <input autoFocus={focus.question} onMouseEnter={triggerFocus} onMouseLeave={leaveFocus} name=\"question\" value={question} onChange={handleQuestion} placeholder=\"What question is on your mind?\" className=\"create-poll-question\" />\n              <textarea autoFocus={focus.description} name=\"description\" onMouseEnter={triggerFocus} onMouseLeave={leaveFocus} value={description} onChange={handleDescription} placeholder=\"Description\" className=\"create-poll-description\" />\n              <button className=\"btn btn-primary button-poll\" onClick={createPoll}> Create </button>\n            </div>\n          </div>\n        </div>\n      </div>\n     )\n  }\n\n  const clearValues = () => {\n    document.getElementsByClassName(\"create-poll-description\")[0].value = \"\"\n    document.getElementsByClassName(\"create-poll-question\")[0].value = \"\"\n  }\n\n  const createPoll = async() => {\n    let { web3, instance, accounts } = state\n\n    const recentBlock = await web3.eth.getBlock(\"latest\")\n    const deadline = recentBlock.timestamp + 604800\n\n    await instance.methods.newVoteProposal(question,\n      description,\n      deadline\n    ).send({\n      from: accounts[0]\n    }).on('transactionHash', (hash) => {\n      clearValues()\n    })\n  }\n\n  const toggle = () => setDropdownOpen(prevState => !prevState);\n\n  const handleDescription = (e) => {\n    setDescription(e.target.value)\n  }\n\n  const handleQuestion = (e) => {\n    setQuestion(e.target.value)\n  }\n\n  const triggerFocus = (e) => {\n    setFocus({ [e.target.name]: true })\n  }\n\n  const leaveFocus = (e) => {\n    setFocus({ [e.target.name]: false })\n  }\n\n  return(\n    <Row>\n      <Col sm=\"12\" md={{ size: 8, offset: 2 }}>\n        <nav className=\"navbar navbar-expand-lg fixed-top col-sm-12 col-md-7\">\n        <div className=\"navbar-wrapper\">\n          <Link className=\"navbar-brand\" to=\"/\">\n            <img className=\"navbar-logo\" src={logo} />\n            <span className=\"navbar-title\"> Burn Signal </span>\n          </Link>\n        </div>\n        <div className=\"collapse navbar-collapse justify-content-end\">\n          <ul className=\"navbar-nav\">\n            <li className=\"nav-item\">\n              {navComponent}\n              <Dropdown isOpen={dropdownOpen} toggle={toggle}>\n                 <DropdownToggle caret>\n                   <i className=\"nav-login-icon tim-icons icon-minimal-down\"></i>\n                 </DropdownToggle>\n                 <DropdownMenu>\n                   <Link to=\"/\">\n                     <DropdownItem> Home </DropdownItem>\n                   </Link>\n                   {dropdownComponent}\n                   <DropdownItem divider />\n                   <DropdownItem type=\"button\" data-target=\"#about\" data-toggle=\"modal\">About</DropdownItem>\n                   <DropdownItem target=\"_\" href=\"https://blog.burnsignal.io\">Blog</DropdownItem>\n                 </DropdownMenu>\n               </Dropdown>\n            </li>\n          </ul>\n        </div>\n      </nav>\n     </Col>\n    <About />\n    <Create />\n   </Row>\n  )\n}\n\nexport default Navigation\n","import { keccak_256, sha3_256 } from 'js-sha3'\n\nexport const chartId = str => [...str.substring(0, 10)].reduceRight((res,_,__,arr) => [...res,arr.splice(~~(Math.random()*arr.length),1)[0]],[]).join('');\n\nexport const ETH = wei => {\n  if(parseInt(wei) >= 1000000000000000) {\n    return `${parseFloat(wei/Math.pow(10,18)).toFixed(3)} ETH`\n  } else if(parseInt(wei) >= 1000000){\n    return `${(wei/1000000000).toFixed(3)} GWEI`\n  } else if(parseInt(wei) < 1000000) {\n    return `${parseFloat(wei).toFixed(2)} WEI`\n  }\n}\n\nexport const sortVotes = (_yesVotes, _noVotes) => {\n  let totalVotes = _yesVotes.concat(_noVotes);\n\n  totalVotes.unshift(0);\n\n  return totalVotes;\n}\n\nexport const getRecords = async(users) => {\n  var history = { yes: [], no: [], voters: [] }\n await Object.entries(users)\n       .map(([ index, value ]) => {\n        let { address, yes, no } = value\n\n        history.voters.push(address)\n        yes.value.forEach((value, index) => {\n          value = parseFloat(value)\n          if(isNaN(value)) value = 0\n          history.yes.push(value)\n        })\n        no.value.forEach((value, index) => {\n          value = parseFloat(value) * -1\n          if(isNaN(value)) value = 0\n          history.no.push(value)\n        })\n    })\n  return history\n}\n\nexport const createURL = string => {\n  string = string.replace(/([\\u2700-\\u27BF]|[\\uE000-\\uF8FF]|\\uD83C[\\uDC00-\\uDFFF]|\\uD83D[\\uDC00-\\uDFFF]|[\\u2011-\\u26FF]|\\uD83E[\\uDD10-\\uDDFF])/g, '');\n  string = string.replace(/ /g, '-').toLowerCase();\n\n  if(string.substring(string.length-1, string.length) === \"-\"){\n    string = string.slice(0, string.length-1)\n  } return string.replace('?', '');\n}\n\nexport const toChecksumAddress = (address) => {\n  address = address.toLowerCase().replace('0x', '')\n  var hash = keccak_256(address);\n  var ret = '0x'\n\n  for (var i = 0; i < address.length; i++) {\n    if (parseInt(hash[i], 16) >= 8) {\n      ret += address[i].toUpperCase()\n    } else {\n      ret += address[i]\n    }\n  }\n\n  return ret\n}\n\nexport const isAddress = (address) => {\n    if (!/^(0x)?[0-9a-f]{40}$/i.test(address)) {\n        // check if it has the basic requirements of an address\n        return false;\n    } else if (/^(0x)?[0-9a-f]{40}$/.test(address) || /^(0x)?[0-9A-F]{40}$/.test(address)) {\n        // If it's all small caps or all all caps, return true\n        return true;\n    } else {\n        // Otherwise check each case\n        return isChecksumAddress(address);\n    }\n};\n\nexport const isChecksumAddress = (address) => {\n    // Check each case\n    address = address.replace('0x','');\n    //var addressHash = sha3(address.toLowerCase());\n\tvar addressHash = sha3_256(address.toLowerCase());\n    for (var i = 0; i < 40; i++ ) {\n        // the nth letter should be uppercase if the nth digit of casemap is 1\n        if ((parseInt(addressHash[i], 16) > 7 && address[i].toUpperCase() !== address[i]) || (parseInt(addressHash[i], 16) <= 7 && address[i].toLowerCase() !== address[i])) {\n            return false;\n        }\n    }\n    return true;\n};\n\n\n// Code to process vote info. Should be easy to replace.\n// This is where BrightID check will be added.\n\nexport async function getVoteInfo(proposalData){\n  var anonymousDeposits = proposalData.data.anonymousDeposits;\n  var noDeposits = anonymousDeposits.length;\n  var voters = {};\n  var totalValue = 0;\n\n  // Check all the deposits for proposal\n  for(var i = 0;i < noDeposits;i++){\n\n    var yesValue = 0, noValue = 0;\n\n    // Add BrightID check. Don't count vote if not.??\n\n    if(anonymousDeposits[i].Choice === 'yes'){\n      yesValue = parseFloat(anonymousDeposits[i].ContriValue);\n    } else {\n      noValue = parseFloat(anonymousDeposits[i].ContriValue);\n    }\n\n    // Check if address has already been counted & initialise if not\n    if(voters[anonymousDeposits[i].SenderAddr] === undefined){\n      voters[anonymousDeposits[i].SenderAddr] = { yesTotalValue: yesValue, noTotalValue: noValue };\n    }else{\n      var newYesValue = voters[anonymousDeposits[i].SenderAddr].yesTotalValue + yesValue;\n      var newNoValue = voters[anonymousDeposits[i].SenderAddr].noTotalValue + noValue;\n      voters[anonymousDeposits[i].SenderAddr] = { yesTotalValue: newYesValue, noTotalValue: newNoValue };\n    }\n\n    totalValue += parseFloat(anonymousDeposits[i].ContriValue);\n  }\n\n  return { voters: voters, totalValue: totalValue}\n}\n","import React, { Fragment, useState, useContext, useEffect } from 'react'\nimport { Dropdown, DropdownToggle } from \"reactstrap\"\nimport { Col, Row } from \"reactstrap\"\n\nimport { createURL } from \"../../constants/operatives\"\nimport { PINK_PRIMARY } from \"../../constants/palette.js\"\nimport { store } from \"../../state\"\n\nconst QRCode = require('qrcode.react')\n\nfunction Option(props) {\n  const ENS = `${createURL(props.title)}.burnsignal.eth`\n  const [ burnAmount, setBurn ] = useState(\"\")\n\n  let { state } = useContext(store)\n  let { title } = props\n\n  const handleBurn = (e) => {\n    setBurn(e.target.value)\n  }\n\n  function Unauthenticated({ option }){\n    return(\n      <div className=\"modal-content\">\n        <div className=\"modal-header\">\n          <h5 className=\"modal-title\">{props.title}</h5>\n          <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" onClick={props.dismiss}>\n            <span aria-hidden=\"true\">&times;</span>\n          </button>\n        </div>\n        <div className=\"modal-body\">\n          Vote <span id=\"pink\">{option}</span> by sending any amount of ETH to <br/>\n          <a target=\"_\" href='https://etherscan.io'><span id=\"pink\">{option}</span>.{ENS}</a>\n          <div className=\"poll-qr\">\n            <QRCode value={props.address[option]} />\n          </div>\n          To ensure that you vote counts, please link your ethereum account\n          to your BrightID account at  <a target=\"_\" href=\"https://ethereum.brightid.org\">ethereum.brightid.org</a>\n        </div>\n      </div>\n     )\n   }\n\n  function AuthenticatedAndVerified({ option }){\n    return(\n      <div className=\"modal-content\">\n        <div className=\"modal-header\">\n          <h5 className=\"modal-title\">{props.title}</h5>\n          <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" onClick={props.dismiss}>\n            <span aria-hidden=\"true\">&times;</span>\n          </button>\n        </div>\n        <div className=\"modal-body\">\n          <span className=\"vote-selection\"> How much ETH will you burn to cast your vote? </span>\n          <input type=\"number\" autoFocus onChange={handleBurn} value={burnAmount} className=\"modal-input\" placeholder=\"0.5 ETH\"/>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"button\" className=\"btn btn-primary btn-verify\" data-dismiss=\"modal\" onClick={() => makeTransaction(option)}>\n            Vote {option}\n          </button>\n        </div>\n      </div>\n    )\n  }\n\n  function AuthenticatedAndUnverified(){\n    return(\n      <div className=\"modal-content\">\n        <div className=\"modal-header\">\n          <h5 className=\"modal-title\">Please verify your account</h5>\n          <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" onClick={props.dismiss}>\n            <span aria-hidden=\"true\">&times;</span>\n          </button>\n        </div>\n        <div className=\"modal-body\">\n          Before casting your vote, you should verify your Ethereum account using BrightID.\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"button\" className=\"btn btn-primary btn-verify\" data-dismiss=\"modal\">\n            Verify\n          </button>\n        </div>\n      </div>\n     )\n  }\n\n  const makeTransaction = async(option) => {\n    let { web3 } = state\n\n    props.dismiss()\n\n    const burn = burnAmount % 1 === 0 ?\n      web3.utils.toBN(parseFloat(burnAmount)).mul(web3.utils.toBN(1e18)) :\n      parseInt(burnAmount*Math.pow(10,18))\n\n    await web3.eth.sendTransaction({\n        to: props.address[option],\n        from: state.accounts[0],\n        value: burn\n      })\n  }\n\n  const handleInput = (event) => {\n    setBurn(event.target.value)\n  }\n\n  return (\n    <Fragment>\n      <div className=\"modal fade\" id=\"yes\" tabIndex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\n        <div className=\"modal-dialog\" role=\"document\">\n          { state.auth && state.verified && (<AuthenticatedAndVerified option=\"yes\" />) }\n          { !state.auth && !state.verified && (< Unauthenticated option=\"yes\"/>) }\n          { state.auth && !state.verified && (<AuthenticatedAndUnverified />) }\n        </div>\n      </div>\n      <div className=\"modal fade\" id=\"no\" tabIndex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\n        <div className=\"modal-dialog\" role=\"document\">\n          { state.auth && state.verified && (<AuthenticatedAndVerified option=\"no\" />) }\n          { !state.auth && !state.verified && (< Unauthenticated option=\"no\"/>) }\n          { state.auth && !state.verified && (<AuthenticatedAndUnverified />) }\n        </div>\n      </div>\n    </Fragment>\n  )\n}\n\nexport default Option\n","import { createURL } from '../operatives'\n\nconst QUERY_POLL = poll => `{ polls(where: { id: \"${poll}\" }) { yes no users { address yes { contributions timestamps total value sqrt } no { contributions timestamps total value sqrt } } } }`\nconst QUERY_ISSUES = `{ issues(where: { title_not_contains: \"question\" }) { id poll body title issuer deadline optionBaddr optionAaddr } }`\nconst BURN_SUBGRAPH_ENDPOINT = \"https://api.thegraph.com/subgraphs/name/burnsignal/proof-of-concept\"\nconst QUERY_USER = user => `{ user(id: \"${user.toLowerCase()}\") { burns polls burned } }`\n\nconst requestHeaders = body => ({\n  method: 'POST',\n  headers: {\n    'Content-Type': 'application/json',\n    'Accept': 'application/json',\n  }, body: JSON.stringify({\n    query: body\n  })\n})\n\nconst makeRequest = async(query) => {\n  return await fetch(BURN_SUBGRAPH_ENDPOINT,\n    { ...requestHeaders(query)})\n    .then(response =>\n      response.json())\n    .then(data => data)\n    .catch(console.log)\n}\n\nexport async function getPolls() {\n  const result = await makeRequest(QUERY_ISSUES)\n  const routeObject = {}\n\n  result.data.issues.forEach(obj => {\n    routeObject[createURL(obj.poll)] = { ...obj }\n  }); return routeObject;\n}\n\nexport async function getPollMetadata(pollName){\n  const result = await makeRequest(QUERY_POLL(pollName))\n  if(result.data.polls.length == 0){\n    return { yes: 0, no: 0, users: [] }\n  } else return result.data.polls[0]\n}\n\nexport async function getProfileMetadata(profileAddress){\n  const result = await makeRequest(QUERY_USER(profileAddress))\n  if(result.data.user === null){\n    return { burned: 0, polls: [], burns: [] }\n  } else return result.data.user\n}\n","import React, { useState, useContext, useEffect } from 'react';\nimport makeBlockie from 'ethereum-blockies-base64'\nimport { useParams, Link } from 'react-router-dom'\nimport { Row, Col } from \"reactstrap\"\n\nimport { ETH, toChecksumAddress, createURL } from '../constants/operatives'\nimport { getProfileMetadata } from '../constants/calls/GraphQL'\nimport { store } from '../state'\n\nimport '../assets/css/profile.css'\n\nfunction Profile() {\n  const [ totalBurned, setBurned ] = useState(0)\n  const [ userPolls, setPolls ] = useState([])\n  const [ totalVotes, setVotes ] = useState(0)\n  const [ avgBurned, setAvg ] = useState(0)\n\n  let { address } = useParams()\n\n  useEffect(() => {\n    const gatherProfile = async() => {\n      var profileMetadata = await getProfileMetadata(address)\n\n      let { burned, polls, burns } = profileMetadata\n\n      setAvg(ETH(parseInt(burned)/burns.length))\n      setVotes(burns.length)\n      setBurned(ETH(burned))\n      setPolls(polls)\n    }\n    gatherProfile()\n   }\n  , [])\n\n  return (\n    <div className=\"profile\">\n      <Row>\n        <Col sm=\"12\" md={{ size: 8, offset: 2 }}>\n          <div className=\"card\">\n            <div className=\"card-header\">\n              <Link to={`/profile/${address}`}>\n                <img className=\"profile-blockie\" src={makeBlockie(address)} />\n              </Link>\n              <div className=\"profile-stats\">\n                <div className=\"profile-address\">\n                  <a href={`https://etherscan.io/address/${address}`}>{toChecksumAddress(address)}</a>\n                </div>\n                <span className=\"profile-stat\">Burned: <span id=\"pink\">{totalBurned}</span> </span>\n                <span className=\"profile-stat\">Burns: <span id=\"pink\">{totalVotes}</span> </span>\n                <span className=\"profile-stat\">Average: <span id=\"pink\">{avgBurned}</span> </span>\n                <p className=\"profile-verified\">Verified: <span id=\"pink\">false</span> </p>\n              </div>\n            </div>\n          </div>\n        </Col>\n      </Row>\n      <Row>\n        <Col sm=\"12\" md={{ size: 8, offset: 2 }}>\n          <div className=\"card\">\n            <div className=\"card-header\">\n              <h3 className=\"card-category\">Polls</h3>\n            </div>\n            <div className=\"card-body\" />\n              <ul>\n              {userPolls.map(value => (\n                <Link to={`/poll/${createURL(value)}`}>\n                  <li> {value} </li>\n                </Link>\n              ))}\n              </ul>\n          </div>\n        </Col>\n      </Row>\n   </div>\n  )\n}\n\nexport default Profile\n","import React, { Fragment, useEffect, useState } from 'react'\nimport Chart from 'chart.js'\n\nimport { WEEKDAYS, CHARTS } from \"../../../constants/parameters.js\"\nimport { sortVotes } from \"../../../constants/operatives.js\"\n\nconst makeRepeated = (arr, repeats) =>\n  [].concat(...Array.from({ length: repeats }, () => arr));\n\nfunction Spline(props){\n  let { chartId } = props\n\n  useEffect(() => {\n    const composeAndRender = () => {\n      let { yes, no } = props.pollRecords\n\n      const dataArray = sortVotes(yes, no)\n\n      var maxValue = Math.max(...dataArray)\n      var minValue = Math.min(...dataArray)\n      var maxRange = Math.ceil((((maxValue * 0.2) + maxValue) /10 ) * 10)\n      var minRange = Math.ceil((((minValue * 0.2) + minValue) /10 ) * 10) * -1\n\n      const ctx = document.getElementById(chartId).getContext(\"2d\")\n\n      let range = minRange > maxRange ? minRange : maxRange\n\n      const labelArray = dataArray.length > WEEKDAYS.length ?\n      makeRepeated(WEEKDAYS, parseInt(dataArray.length/WEEKDAYS.length)) :\n      WEEKDAYS.slice(0, dataArray.length)\n\n      var gradientStroke = ctx.createLinearGradient(0,337.5,0, 25)\n\n      gradientStroke.addColorStop(1, 'rgba(255,51,138,0.225)')\n      gradientStroke.addColorStop(0.7, 'rgba(255,51,138,0.2)')\n      gradientStroke.addColorStop(0.5, 'rgba(255,51,138,0.125)')\n      gradientStroke.addColorStop(0.2, 'rgba(255,51,138,0.075)')\n      gradientStroke.addColorStop(0, 'rgba(119,52,169,0)')\n\n      var data = {\n        labels: labelArray,\n        datasets: [{\n          ...CHARTS.SPLINE_STYLE(gradientStroke),\n          data: dataArray,\n        }]\n      }\n\n      new Chart(ctx, { ...CHARTS.SPLINE_CONFIG(data, range) })\n    }\n    composeAndRender()\n  }, [ ])\n\n  return(\n    <Fragment>\n      <canvas id={chartId}> </canvas>\n    </Fragment>\n  )\n}\n\nexport default Spline;\n","import React, { Fragment, useEffect, useState } from 'react'\nimport Chart from 'chart.js';\n\nimport { CHARTS } from \"../../../constants/parameters.js\";\n\nfunction Bar(props) {\n  const { chartId } = props;\n\n  useEffect(() => {\n    const composeAndRender = () => {\n      let { yes, no } = props.pollCount;\n\n      const ctx = document.getElementById(chartId).getContext(\"2d\")\n      const maximumValue = yes > no ? yes : no\n      const range = ( maximumValue * 0.20 ) + maximumValue\n      const data = [ yes, no ]\n\n      new Chart(ctx, { ...CHARTS.BAR_CONFIG(data, range) })\n    }\n    composeAndRender()\n  }, [ ])\n\n  return(\n    <Fragment>\n      <canvas id={chartId}> </canvas>\n    </Fragment>\n  );\n}\n\nexport default Bar;\n","import React, { Fragment, useContext, useState, useEffect } from 'react';\nimport { Link, useParams, useHistory } from \"react-router-dom\"\nimport makeBlockie from 'ethereum-blockies-base64'\nimport { Row, Col } from \"reactstrap\"\n\nimport { getVoteInfo, getRecords } from '../constants/operatives'\nimport { getPollMetadata } from \"../constants/calls/GraphQL\"\nimport { chartId, toChecksumAddress } from \"../constants/operatives\"\nimport { store } from '../state'\n\nimport Spline from '../assets/components/charts/spline'\nimport Option from '../assets/components/option'\nimport Bar from '../assets/components/charts/bar'\n\nimport \"../assets/css/poll.css\"\n\nfunction Poll(props){\n  const [ pollRecords, setRecords ] = useState({ yes: [], no: [] })\n  const [ pollOptions, setOptions ] = useState({ yes: \"\", no : \"\" })\n  const [ pollCount, setCount ] = useState({ yes: 0, no: 0 })\n  const [ pollDescription , setDescription ] = useState(\"\")\n  const [ graphState, setGraphState ] = useState(false)\n  const [ uniqueAddresses, setUnique ] = useState(0)\n  const [ totalPledged, setPledged ] = useState(0)\n  const [ pollAuthor, setAuthor ] = useState(\"0x\")\n  const [ pollTopic , setTopic ] = useState(\"\")\n\n  let { state } = useContext(store)\n  let { address } = useParams()\n  let history = useHistory()\n\n  const id = props.location !== undefined ? address : props.id\n\n  function selection(option) {\n    const route = `/poll/${id}/${option}`\n    if(history[history.length-1] !== route){\n      history.push(route)\n    }\n  }\n\n  function dismiss() {\n    let route = props.location.pathname.replace('/yes', '')\n    route = route.replace('/no', '')\n    history.push(route)\n  }\n\n  useEffect(() => {\n    const getMetadata = async() => {\n      if(state.polls[id] !== undefined){\n        let { title, body, issuer, optionAaddr, optionBaddr } = state.polls[id]\n        var pollMetadata = await getPollMetadata(title)\n\n        let { yes, users, no } = pollMetadata\n        let records = await getRecords(users)\n\n        setCount({ yes: parseInt(yes), no: parseInt(no) })\n        setOptions({ yes: optionAaddr, no: optionBaddr })\n        setAuthor(toChecksumAddress(issuer))\n        setUnique(records.voters.length)\n        setRecords({ ...records })\n        setDescription(body)\n        setGraphState(true)\n        setTopic(title)\n        }\n     }\n    getMetadata()\n  }, [ state.polls ])\n\n  return(\n     <div className=\"poll\">\n      <Row>\n        <Col sm=\"12\" md={{ size: 8, offset: 2 }}>\n          <div className=\"card\">\n            <div className=\"card-header\">\n              <Link className=\"poll-issuer\" to={`/profile/${pollAuthor}`}>\n                <img className=\"poll-profile\" src={makeBlockie(pollAuthor)} />\n              </Link>\n              <div className=\"poll-title\">{pollTopic}</div>\n            </div>\n            <div className=\"card-body\">\n              <div className=\"poll-description\">{pollDescription}</div>\n              <div className=\"vote-options\">\n                <button type=\"button\" data-target=\"#yes\" data-toggle=\"modal\" className=\"btn btn-primary btn-simple\" onClick={() => selection(\"yes\")}>Yes</button>\n                <button type=\"button\" data-target=\"#no\" data-toggle=\"modal\" className=\"btn btn-primary btn-simple\" onClick={() => selection(\"no\")}>No</button>\n              </div>\n            </div>\n          </div>\n        </Col>\n      </Row>\n      <Row>\n        <Col sm=\"12\" md={{ size: 8, offset: 2 }}>\n          <div className=\"card\">\n            <div className=\"card-header\">\n              <h3 className=\"card-category\">Results</h3>\n            </div>\n            <div className=\"card-body\">\n              {graphState && (\n                <Bar chartId={chartId(id)} pollCount={pollCount}/>\n              )}\n            </div>\n          </div>\n        </Col>\n      </Row>\n      <Row>\n        <Col sm=\"12\" md={{ size: 8, offset: 2 }}>\n          <div className=\"card\">\n            <div className=\"card-header\">\n              <h3 className=\"card-category\">History</h3>\n            </div>\n            <div className=\"card-body\">\n              {graphState && (\n                <Spline chartId={chartId(id)} pollRecords={pollRecords} />\n              )}\n            </div>\n          </div>\n        </Col>\n        <Option dismiss={dismiss} title={pollTopic} address={pollOptions} />\n      </Row>\n    </div>\n  )\n}\n\nexport default Poll\n","import React, { Fragment, useContext, useState, useEffect } from 'react';\nimport makeBlockie from 'ethereum-blockies-base64'\nimport { Link } from 'react-router-dom'\nimport { Row, Col } from \"reactstrap\"\n\nimport { store } from '../state'\nimport Poll from './poll';\n\n const useInputChange = () => {\n  const [input, setInput] = useState({})\n\n  const handleInputChange = (e) => setInput({\n    ...input,\n    [e.currentTarget.name]: e.currentTarget.value\n  })\n\n  return [input, handleInputChange]\n}\n\nfunction Feed() {\n  const [ description, setDescription ] = useState(\"\")\n  const [ question, setQuestion ] = useState(\"\")\n  const [ focus, setFocus ] = useState({ })\n\n  let { state } = useContext(store)\n\n  const handleDescription = (e) => {\n    setDescription(e.target.value)\n  }\n\n  const handleQuestion = (e) => {\n    setQuestion(e.target.value)\n  }\n\n  const triggerFocus = (e) => {\n    setFocus({ [e.target.name]: true })\n  }\n\n  const leaveFocus = (e) => {\n    setFocus({ [e.target.name]: false })\n  }\n\n  function CreatePoll() {\n    return(\n      <Fragment>\n        <input autoFocus={focus.question} onMouseEnter={triggerFocus} onMouseLeave={leaveFocus} name=\"question\" value={question} onChange={handleQuestion} placeholder=\"What question is on your mind?\" className=\"create-poll-question\" />\n        <textarea autoFocus={focus.description} name=\"description\" onMouseEnter={triggerFocus} onMouseLeave={leaveFocus} value={description} onChange={handleDescription} placeholder=\"Description\" className=\"create-poll-description\" />\n        <button className=\"btn btn-primary button-poll\" onClick={createPoll}> Create </button>\n      </Fragment>\n    )\n  }\n\n  const clearValues = () => {\n    document.getElementsByClassName(\"create-poll-description\")[0].value = \"\"\n    document.getElementsByClassName(\"create-poll-question\")[0].value = \"\"\n  }\n\n  const createPoll = async() => {\n    let { web3, instance, accounts } = state\n\n    const recentBlock = await web3.eth.getBlock(\"latest\")\n    const deadline = recentBlock.timestamp + 604800\n\n    await instance.methods.newVoteProposal(question,\n      description,\n      deadline\n    ).send({\n      from: accounts[0]\n    }).on('transactionHash', (hash) => {\n      clearValues()\n    })\n  }\n\n  return (\n    <Fragment>\n      {state.web3 && (\n        <div className=\"new-poll\">\n          <Row>\n            <Col sm=\"12\" md={{ size: 8, offset: 2 }}>\n              <div className=\"card\">\n                <div className=\"card-header\" />\n                <div className=\"card-body\">\n                  <Link to={`/profile/${state.accounts[0]}`}>\n                    <img className=\"new-poll-profile\" src={makeBlockie(state.accounts[0])} />\n                  </Link>\n                  <CreatePoll />\n                </div>\n              </div>\n            </Col>\n          </Row>\n        </div>\n      )}\n      {Object.keys(state.polls).reverse().map((id, index) => (\n        <Link to={`/poll/${id}`}>\n          <Poll key={id} id={id}/>\n        </Link>\n      ))}\n    </Fragment>\n  )\n}\n\nexport default Feed\n","import React, { Fragment, useContext, useEffect } from \"react\";\nimport {  Route, HashRouter, withRouter } from 'react-router-dom'\nimport { Container } from \"reactstrap\"\n\nimport \"./assets/libs/black-dashboard/assets/css/black-dashboard-react.css\"\nimport \"./assets/libs/black-dashboard/assets/css/nucleo-icons.css\"\nimport \"./assets/css/navigation.css\"\n\nimport Navigation from './assets/components/navigation'\nimport Option from './assets/components/option'\n\nimport { getPolls } from \"./constants/calls/GraphQL\"\nimport { store } from './state'\n\nimport Profile from './routes/profile'\nimport Poll from './routes/poll'\nimport Feed from './routes/feed'\n\nfunction App(props) {\n  let { dispatch, state } = useContext(store)\n\n  useEffect(() => window.scrollTo(0, 0), [ props.location.pathname ])\n\n  useEffect(() => {\n    const retrievePolls = async() => {\n      var pollStream = await getPolls()\n      dispatch({\n        payload: pollStream,\n        type: \"POLL\"\n      })\n    }\n    retrievePolls()\n  }, [])\n\n  return (\n    <main>\n      <Container>\n        <Navigation />\n        <Route path=\"/profile/:address\" component={Profile} />\n        <Route path=\"/poll/:address\" component={Poll} />\n        <Route exact path=\"/\" component={Feed} />\n      </Container>\n    </main>\n  );\n}\n\nexport default withRouter(App);\n","import React, { Fragment } from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { HashRouter, Route } from 'react-router-dom'\nimport * as serviceWorker from './serviceWorker'\n\nimport { StateProvider } from './state'\nimport App from './App';\n\nReactDOM.render(\n  <StateProvider>\n    <HashRouter basename='/'>\n      <Fragment>\n        <App />\n      </Fragment>\n    </HashRouter>\n  </StateProvider>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister()\n"],"sourceRoot":""}