{"version":3,"sources":["assets/images/logo.png","serviceWorker.js","state/index.js","assets/components/navigation.js","constants/calls/GraphQL.js","constants/operatives.js","constants/parameters.js","constants/palette.js","assets/components/charts/spline.js","assets/components/charts/bar.js","routes/poll.js","routes/feed.js","utils/getWeb3.js","routes/new.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","Boolean","window","location","hostname","match","initialState","polls","store","createContext","Provider","Navigation","react_default","a","createElement","Row","Col","sm","md","size","offset","className","href","src","logo","QUERY_POLL","poll","concat","QUERY_ISSUES","createURL","string","replace","toLowerCase","substring","length","slice","makeRequest","_ref","Object","asyncToGenerator","regenerator_default","mark","_callee","query","wrap","_context","prev","next","fetch","objectSpread","body","method","headers","Content-Type","Accept","JSON","stringify","then","response","json","data","catch","console","log","abrupt","sent","stop","_x","apply","this","arguments","getPolls","_getPolls","_callee2","result","routeObject","_context2","issues","forEach","obj","title","getPollMetadata","_x2","_getPollMetadata","_callee3","pollName","_context3","yes","no","users","chartId","str","toConsumableArray","reduceRight","res","_","__","arr","splice","Math","random","join","sortVotes","_yesVotes","_noVotes","totalVotes","sort","b","unshift","WEEKDAYS","CHARTS","BAR_CONFIG","_data","_range","type","responsive","labels","datasets","borderColor","borderWidth","fill","options","legend","display","scales","xAxes","scaleLabel","labelString","ticks","suggestedMin","max","callback","label","index","toExponential","SPLINE_CONFIG","lineTension","bezierCurve","yAxes","id","min","gridLines","drawOnChartArea","SPLINE_STYLE","_gradient","backgroundColor","borderDash","borderDashOffset","pointBackgroundColor","pointBorderColor","pointHoverBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBorderWidth","pointRadius","makeRepeated","repeats","Array","from","Spline","props","useEffect","yesVotes","noVotes","dataArray","maxValue","minValue","maxRange","ceil","minRange","ctx","document","getElementById","getContext","range","labelArray","parseInt","gradientStroke","createLinearGradient","addColorStop","Chart","composeAndRender","react","Bar","yesCount","noCount","maximumValue","getRecords","history","entries","map","_ref2","_ref3","slicedToArray","value","parseFloat","isNaN","push","Poll","_useState","useState","_useState2","pollRecords","setRecords","_useState3","_useState4","pollCount","setCount","_useState5","_useState6","pollDescription","setDescription","_useState7","_useState8","graphState","setGraphState","_useState9","_useState10","_useState11","_useState12","_useState13","_useState14","pollTopic","setTopic","state","useContext","address","useParams","undefined","_ref4","_state$polls$id","pollMetadata","records","issuer","optionAaddr","optionBaddr","getMetadata","class","bar","spline","Feed","keys","proposalId","react_router_dom","to","key","loadWeb3","resolve","reject","web3","_web","provider","_web2","ethereum","Web3","enable","t0","providers","HttpProvider","getWeb3","Promise","readyState","addEventListener","NewVote","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","accounts","contract","componentDidMount","instance","eth","getAccounts","Contract","abi","setState","alert","error","makeNewVote","bind","assertThisInitialized","updateQuestion","updateDeadline","question","deadline","methods","newVoteProposal","Date","now","send","event","target","placeholder","onChange","onClick","Component","constant","inputs","name","outputs","payable","stateMutability","anonymous","indexed","withRouter","_useContext","dispatch","pollStream","payload","retrievePolls","Container","components_navigation","react_router","path","component","exact","New","ReactDOM","render","children","_useReducer","useReducer","action","_useReducer2","basename","src_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.be737a95.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.0a58105d.png\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { createContext, useReducer } from 'react';\n\nconst initialState = { polls: [] }\nconst store = createContext(initialState)\nconst { Provider } = store\n\nconst StateProvider = ( { children } ) => {\n  const [state, dispatch] = useReducer((state, action) => {\n    switch(action.type) {\n      case 'POLL':\n        return { ...state, polls: action.payload }\n      default:\n        return state\n    };\n  }, initialState)\n\n  return <Provider value={{ state, dispatch }}>{children}</Provider>;\n};\n\nexport { store, StateProvider }\n","import React, { Component } from 'react'\nimport { Dropdown, DropdownToggle } from \"reactstrap\"\nimport { Col, Row } from \"reactstrap\"\n\nimport logo from \"../images/logo.png\"\n\nfunction Navigation() {\n\n  return(\n    <Row>\n      <Col sm=\"12\" md={{ size: 8, offset: 2 }}>\n        <nav className=\"navbar navbar-expand-lg fixed-top col-sm-12 col-md-7\">\n        <div className=\"navbar-wrapper\">\n          <a className=\"navbar-brand\" href={'/'}>\n            <img className=\"navbar-logo\" src={logo} />\n            <span className=\"navbar-title\"> Burn Signal </span>\n          </a>\n        </div>\n        <div className=\"collapse navbar-collapse justify-content-end\">\n          <ul className=\"navbar-nav\">\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" href={'/'}>\n                 Notifications <i className=\"nav-icon tim-icons icon-bell-55\"></i>\n              </a>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" href={'/'}>\n                 Login <i className=\"nav-login-icon tim-icons icon-minimal-down\"></i>\n              </a>\n            </li>\n          </ul>\n        </div>\n    </nav>\n    </Col>\n   </Row>\n  )\n}\n\nexport default Navigation\n","const QUERY_POLL = poll => `{ polls(where: { id: \"${poll}\" }) { yes no users { id yes { contributions timestamps total value sqrt } no { contributions timestamps total value sqrt } } } }`\nconst QUERY_ISSUES = `{ issues(where: { title_not_contains: \"fae\" }) { id body title issuer deadline optionBaddr optionAaddr } }`\nconst BURN_SUBGRAPH_ENDPOINT = \"https://api.thegraph.com/subgraphs/name/burnsignal/proof-of-concept\"\n\nconst createURL = string => {\n  string = string.replace(/([\\u2700-\\u27BF]|[\\uE000-\\uF8FF]|\\uD83C[\\uDC00-\\uDFFF]|\\uD83D[\\uDC00-\\uDFFF]|[\\u2011-\\u26FF]|\\uD83E[\\uDD10-\\uDDFF])/g, '');\n  string = string.replace(/ /g, '-').toLowerCase();\n\n  if(string.substring(string.length-1, string.length) === \"-\"){\n    string = string.slice(0, string.length-1)\n  } return string.replace('?', '');\n}\n\nconst requestHeaders = body => ({\n  method: 'POST',\n  headers: {\n    'Content-Type': 'application/json',\n    'Accept': 'application/json',\n  }, body: JSON.stringify({\n    query: body\n  })\n})\n\nconst makeRequest = async(query) => {\n  return await fetch(BURN_SUBGRAPH_ENDPOINT,\n    { ...requestHeaders(query)})\n    .then(response =>\n      response.json())\n    .then(data => data)\n    .catch(console.log)\n}\n\nexport async function getPolls() {\n  const result = await makeRequest(QUERY_ISSUES)\n  const routeObject = {}\n\n  result.data.issues.forEach(obj => {\n    routeObject[createURL(obj.title)] = { ...obj }\n  }); return routeObject;\n}\n\nexport async function getPollMetadata(pollName){\n  const result = await makeRequest(QUERY_POLL(pollName))\n  if(result.data.polls.length == 0){\n    return { yes: 0, no: 0, users: [] }\n  } else return result.data.polls[0]\n}\n","export const chartId = str => [...str.substring(0, 10)].reduceRight((res,_,__,arr) => [...res,arr.splice(~~(Math.random()*arr.length),1)[0]],[]).join('');\n\nexport const sortVotes = (_yesVotes, _noVotes) => {\n  let totalVotes = _yesVotes.concat(_noVotes);\n\n  totalVotes.sort((a,b) => { return a - b });\n  totalVotes.unshift(0);\n\n  return totalVotes;\n}\n\n// Code to process vote info. Should be easy to replace.\n// This is where BrightID check will be added.\n\nexport async function getVoteInfo(proposalData){\n  var anonymousDeposits = proposalData.data.anonymousDeposits;\n  var noDeposits = anonymousDeposits.length;\n  var voters = {};\n  var totalValue = 0;\n\n  // Check all the deposits for proposal\n  for(var i = 0;i < noDeposits;i++){\n\n    var yesValue = 0, noValue = 0;\n\n    // Add BrightID check. Don't count vote if not.??\n\n    if(anonymousDeposits[i].Choice === 'yes'){\n      yesValue = parseFloat(anonymousDeposits[i].ContriValue);\n    } else {\n      noValue = parseFloat(anonymousDeposits[i].ContriValue);\n    }\n\n    // Check if address has already been counted & initialise if not\n    if(voters[anonymousDeposits[i].SenderAddr] === undefined){\n      voters[anonymousDeposits[i].SenderAddr] = { yesTotalValue: yesValue, noTotalValue: noValue };\n    }else{\n      var newYesValue = voters[anonymousDeposits[i].SenderAddr].yesTotalValue + yesValue;\n      var newNoValue = voters[anonymousDeposits[i].SenderAddr].noTotalValue + noValue;\n      voters[anonymousDeposits[i].SenderAddr] = { yesTotalValue: newYesValue, noTotalValue: newNoValue };\n    }\n\n    totalValue += parseFloat(anonymousDeposits[i].ContriValue);\n  }\n\n  return { voters: voters, totalValue: totalValue}\n}\n\nexport async function getQuadraticTotals(voters){\n  // Quadratic method.\n  // Calculate quadratic total for each voter\n  var yes = 0;\n  var no = 0;\n  var noUniqueAdresses = 0;\n  var totalValue = 0;\n  for(var key in voters){\n    // skip loop if the property is from prototype\n    if (!voters.hasOwnProperty(key)) continue;\n\n    var voter = voters[key];\n    yes += Math.sqrt(voter.yesTotalValue);\n    no += Math.sqrt(voter.noTotalValue);\n    noUniqueAdresses += 1;\n    totalValue = totalValue + voter.yesTotalValue + voter.noTotalValue;\n  }\n  return {\n    yesCount: yes,\n    noCount: no,\n    noUniqueAdresses: noUniqueAdresses,\n    totalValue: totalValue\n  };\n}\n","import { PINK_PRIMARY, BLUE_PRIMARY, RED_PRIMARY } from \"./palette.js\"\n\nexport const WEEKDAYS =  ['Monday', 'Tuesday', 'Wendsday', 'Thursday', 'Friday', 'Saturday', 'Sunday' ]\n\nexport const CHARTS = {\n  BAR_CONFIG: (_data, _range) => ({\n    type: 'horizontalBar',\n    responsive: true,\n    data: {\n      labels: ['Yes','No' ],\n      datasets: [{\n        data: _data,\n        borderColor: [ BLUE_PRIMARY, RED_PRIMARY ],\n        borderWidth: 2,\n        fill: true\n      }]\n    },\n    options: {\n      legend: { display: false },\n      scales: {\n        xAxes: [{\n          scaleLabel: {\n            display: true,\n            labelString: \"Wei (ETH)\"\n          },\n          ticks: {\n            suggestedMin: 0,\n            max: _range,\n            callback: function(label, index, labels) {\n              if(label > 1e8 || label < (-1 * 1e8)){\n                 return label.toExponential()\n              } else return label;\n            }\n          }\n        }]\n      },\n    }\n  }),\n  SPLINE_CONFIG: (_data, _range) => ({\n    options: {\n      lineTension: 100,\n      bezierCurve: true,\n      legend: { display: false },\n      scales: {\n        yAxes: [{\n          id:'yAxis1',\n          scaleLabel: {\n            labelString: \"Wei (ETH)\",\n            display: true\n          },\n          ticks: {\n            min: (_range * -1),\n            max: _range,\n            callback: function(label, index, labels) {\n              if(label > 1e8 || label < (-1 * 1e8)){\n                return label.toExponential()\n              } else return label;\n            }\n          }\n        },\n        {\n          id:'yAxis2',\n          labels: ['', 'Yes', '', 'No', ''],\n          type:\"category\",\n          gridLines: {\n           drawOnChartArea: false,\n           display: false\n          },\n       }]\n      },\n    },\n    type: 'line',\n    data: _data,\n  }),\n  SPLINE_STYLE: _gradient => ({\n    label: \"Data\",\n    fill: true,\n    backgroundColor: _gradient,\n    borderColor: PINK_PRIMARY,\n    borderWidth: 2,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    pointBackgroundColor: PINK_PRIMARY,\n    pointBorderColor:'rgba(255,255,255,0)',\n    pointHoverBackgroundColor: PINK_PRIMARY,\n    pointBorderWidth: 20,\n    pointHoverRadius: 4,\n    pointHoverBorderWidth: 15,\n    pointRadius: 4,\n  })\n}\n","export const PURPLE_PRIMARY = \"#7533ff\";\nexport const BLUE_PRIMARY = \"#338aff\";\nexport const RED_PRIMARY = \"#ff4233\";\nexport const PINK_PRIMARY = \"#d048b6\";\n","import React, { Fragment, useEffect, useState } from 'react'\nimport Chart from 'chart.js'\n\nimport { WEEKDAYS, CHARTS } from \"../../../constants/parameters.js\"\nimport { sortVotes } from \"../../../constants/operatives.js\"\n\nconst makeRepeated = (arr, repeats) =>\n  [].concat(...Array.from({ length: repeats }, () => arr));\n\nfunction Spline(props){\n  let { chartId } = props\n\n  useEffect(() => {\n    const composeAndRender = () => {\n      let { yesVotes, noVotes } = props\n\n      const dataArray = sortVotes(yesVotes, noVotes)\n\n      var maxValue = Math.max(...dataArray)\n      var minValue = Math.min(...dataArray)\n      var maxRange = Math.ceil((((maxValue * 0.2) + maxValue) /10 ) * 10)\n      var minRange = Math.ceil((((minValue * 0.2) + minValue) /10 ) * 10) * -1\n\n      const ctx = document.getElementById(chartId).getContext(\"2d\")\n\n      let range = minRange > maxRange ? minRange : maxRange\n\n      const labelArray = dataArray.length > WEEKDAYS.length ?\n      makeRepeated(WEEKDAYS, parseInt(dataArray.length/WEEKDAYS.length)) :\n      WEEKDAYS.slice(0, dataArray.length)\n\n      var gradientStroke = ctx.createLinearGradient(0,337.5,0, 25)\n\n      gradientStroke.addColorStop(1, 'rgba(255,51,138,0.225)')\n      gradientStroke.addColorStop(0.7, 'rgba(255,51,138,0.2)')\n      gradientStroke.addColorStop(0.5, 'rgba(255,51,138,0.125)')\n      gradientStroke.addColorStop(0.2, 'rgba(255,51,138,0.075)')\n      gradientStroke.addColorStop(0, 'rgba(119,52,169,0)')\n\n      var data = {\n        labels: labelArray,\n        datasets: [{\n          ...CHARTS.SPLINE_STYLE(gradientStroke),\n          data: dataArray,\n        }]\n      }\n\n      new Chart(ctx, { ...CHARTS.SPLINE_CONFIG(data, range) })\n    }\n    composeAndRender()\n  }, [ props ])\n\n  return(\n    <Fragment>\n      <canvas id={chartId}> </canvas>\n    </Fragment>\n  )\n}\n\nexport default Spline;\n","import React, { Fragment, useEffect, useState } from 'react'\nimport Chart from 'chart.js';\n\nimport { CHARTS } from \"../../../constants/parameters.js\";\n\nfunction Bar(props) {\n  const { chartId } = props;\n\n  useEffect(() => {\n    const composeAndRender = () => {\n      let { yesCount, noCount } = props;\n\n      const ctx = document.getElementById(chartId).getContext(\"2d\")\n      const maximumValue = yesCount > noCount ? yesCount : noCount\n      const range = ( maximumValue * 0.20 ) + maximumValue\n      const data = [ yesCount, noCount];\n\n      new Chart(ctx, { ...CHARTS.BAR_CONFIG(data, range) })\n    }\n    composeAndRender()\n  }, [ props ])\n\n  return(\n    <Fragment>\n      <canvas id={chartId}> </canvas>\n    </Fragment>\n  );\n}\n\nexport default Bar;\n","import React, { Fragment, useContext, useState, useEffect } from 'react';\nimport { useParams } from \"react-router-dom\"\nimport { Row, Col } from \"reactstrap\"\n\nimport { getPollMetadata } from \"../constants/calls/GraphQL\"\nimport { getVoteInfo } from '../constants/operatives'\nimport { chartId } from \"../constants/operatives\"\nimport { store } from '../state'\n\nimport Spline from '../assets/components/charts/spline'\nimport Bar from '../assets/components/charts/bar'\n\nimport \"../assets/css/proposal.css\"\n\nconst getRecords = async(users, type) => {\n  var history = { yes: [], no: [] }\n await Object.entries(users)\n       .map(([ index, value ]) => {\n        let { id, yes, no } = value\n\n        console.log(id)\n        yes.value.forEach((value, index) => {\n          value = parseFloat(value)\n          if(isNaN(value)) value = 0\n          history.yes.push(value)\n        })\n        no.value.forEach((value, index) => {\n          value = parseFloat(value) * -1\n          if(isNaN(value)) value = 0\n          history.no.push(value)\n        })\n    })\n  return history\n}\n\nfunction Poll(props){\n  const [ pollRecords, setRecords ] = useState({ yes: [], no: [] })\n  const [ pollCount, setCount ] = useState({ yes: 0, no: 0 })\n  const [ pollDescription , setDescription ] = useState(\"\")\n  const [ graphState, setGraphState ] = useState(false)\n  const [ uniqueAddresses, setUnique ] = useState(0)\n  const [ totalPledged, setPledged ] = useState(0)\n  const [ pollTopic , setTopic ] = useState(\"\")\n\n  let { state } = useContext(store)\n  let { address } = useParams()\n\n  const id = props.location !== undefined ? address : props.id\n\n  useEffect(() => {\n    const getMetadata = async() => {\n      if(state.polls[id] !== undefined){\n        let { title, body, issuer, optionAaddr, optionBaddr } = state.polls[id]\n        var pollMetadata = await getPollMetadata(title)\n\n        let { yes, users, no } = pollMetadata\n        let records = await getRecords(users)\n\n        console.log(pollMetadata)\n\n        setCount({ yes: parseInt(yes), no: parseInt(no) })\n        setRecords({ ...records })\n        setDescription(body)\n        setGraphState(true)\n        setTopic(title)\n        }\n     }\n    getMetadata()\n  }, [ props ])\n\n  return(\n     <div className=\"proposalComponent\">\n      <Row>\n        <Col sm=\"12\" md={{ size: 8, offset: 2 }}>\n          <div className=\"card\">\n            <div className=\"card-header\">\n              <div className=\"proposal-title\">{pollTopic}</div>\n            </div>\n            <div className=\"card-body\">\n              <div className=\"github-detail\">{pollDescription}</div>\n              <div className=\"vote-options\">\n                <button className=\"btn btn-primary btn-simple\">Yes</button>\n                <button className=\"btn btn-primary btn-simple\">No</button>\n              </div>\n            </div>\n          </div>\n        </Col>\n      </Row>\n      <Row>\n        <Col sm=\"12\" md={{ size: 8, offset: 2 }}>\n          <div className=\"card\">\n            <div class=\"card-header\">\n              <h3 class=\"card-category\">Results</h3>\n            </div>\n            <div className=\"card-body\">\n              {graphState && (\n                <Bar\n                  chartId={chartId(id)}\n                  yesCount={pollCount.yes}\n                  noCount={pollCount.no}/>\n              )}\n            </div>\n          </div>\n        </Col>\n      </Row>\n      <Row>\n        <Col sm=\"12\" md={{ size: 8, offset: 2 }}>\n          <div className=\"card\">\n            <div class=\"card-header\">\n              <h3 class=\"card-category\">History</h3>\n            </div>\n            <div class=\"card-body\">\n              {graphState && (\n                <Spline\n                  chartId={chartId(id)}\n                  yesVotes={pollRecords.yes}\n                  noVotes={pollRecords.no}\n                />\n              )}\n            </div>\n          </div>\n        </Col>\n      </Row>\n     </div>\n  )\n}\n\nexport default Poll\n","import React, { Fragment, useContext, useEffect } from 'react';\nimport { Route, Link } from 'react-router-dom'\n\nimport { store } from '../state'\nimport Proposal from './poll';\n\nfunction Feed() {\n  let { state } = useContext(store)\n\n  return (\n    <Fragment>\n      {Object.keys(state.polls).map((proposalId, index) => (\n        <Link to={`/poll/${proposalId}`}>\n          <Proposal key={proposalId} id={proposalId}/>\n        </Link>\n      ))}\n    </Fragment>\n  )\n}\n\nexport default Feed\n","import Web3 from \"web3\";\n\nconst getWeb3 = () =>\n  new Promise((resolve, reject) => {\n\n    // This is to get round routing issue\n    if(document.readyState === \"complete\"){\n      loadWeb3(resolve, reject);\n      console.log('Web3 Loaded Ok');\n    }\n\n    // Wait for loading completion to avoid race conditions with web3 injection timing.\n    window.addEventListener(\"load\", async () => {\n      loadWeb3(resolve, reject);\n      console.log('Web3 Loaded.');\n    });\n  });\n\nasync function loadWeb3(resolve, reject){\n  // Modern dapp browsers...\n  if (window.ethereum) {\n    const web3 = new Web3(window.ethereum);\n    try {\n      // Request account access if needed\n      await window.ethereum.enable();\n      // Acccounts now exposed\n      resolve(web3);\n    } catch (error) {\n      reject(error);\n    }\n  }\n  // Legacy dapp browsers...\n  else if (window.web3) {\n    // Use Mist/MetaMask's provider.\n    const web3 = window.web3;\n    console.log(\"Injected web3 detected.\");\n    resolve(web3);\n  }\n  // Fallback to localhost; use dev console port by default...\n  else {\n    const provider = new Web3.providers.HttpProvider(\n      \"http://127.0.0.1:8545\"\n    );\n    const web3 = new Web3(provider);\n    console.log(\"No web3 instance injected, using Local web3.\");\n    resolve(web3);\n  }\n}\n\nexport default getWeb3;\n","import React, { Component } from 'react';\nimport getWeb3 from \"../utils/getWeb3\";\n\nclass NewVote extends Component {\n  // Allows user to create a new Proposal/Question/Vote/Whatever it's agreed to be called.\n  // Uses hardcoded contract address.\n  // Deadline not currently functioning.\n  state = { web3: null, accounts: null, contract: null };\n\n  constructor(props) {\n    super(props);\n\n    this.makeNewVote = this.makeNewVote.bind(this);\n    this.updateQuestion = this.updateQuestion.bind(this);\n    this.updateDeadline = this.updateDeadline.bind(this);\n  }\n\n  componentDidMount = async () => {\n    try {\n      console.log('Loading web3...');\n      // Get network provider and web3 instance.\n      const web3 = await getWeb3();\n\n      // Use web3 to get the user's accounts.\n      const accounts = await web3.eth.getAccounts();\n\n\n      let address = '0x6936b81d7629378aabddcf882b2a7fdfff1cd962';  // Taken from old repo, assume this is the Ropstein deployed\n\n      const instance = new web3.eth.Contract(abi, address);\n\n      // Set web3, accounts, and contract to the state, and then proceed with an\n      // example of interacting with the contract's methods.\n      this.setState({ web3, accounts, contract: instance });\n\n    } catch (error) {\n      alert(\n        'Error loading The Graph',\n      );\n      console.error(error);\n    }\n  };\n\n  async makeNewVote(){\n    console.log('New Vote');\n    console.log(this.state.question);\n    console.log(this.state.deadline);\n    console.log('Sending transaction...');\n    await this.state.contract.methods.newVoteProposal(this.state.question,'Here is some data', (Date.now() + 3600*1000)).send({ from: this.state.accounts[0] });\n    console.log('Done?')\n  }\n\n  updateQuestion(event) {\n    this.setState({question: event.target.value});\n  }\n\n  updateDeadline(event) {\n    this.setState({deadline: event.target.value});\n  }\n\n  render() {\n    return(\n\n      <div className=\"App\">\n\n        <div className=\"main-panel\">\n\n            <div className=\"content\">\n              <div className=\"row\">\n                <div className=\"col-md-6\">\n                  <div className=\"card\">\n                    <div className=\"card-header\">\n                      <h5 className=\"title\">Ask a question...</h5>\n                    </div>\n                    <div className=\"card-body\">\n                      <form>\n\n                        <div className=\"row\">\n                          <div className=\"col-md-12 pr-md-1\">\n                            <div className=\"form-group\">\n                              <label>Your Question</label>\n                              <input type=\"text\" className=\"form-control\" placeholder=\"Ask Away\" onChange={this.updateQuestion}/>\n                            </div>\n                          </div>\n\n                        </div>\n                        <div className=\"row\">\n                          <div className=\"col-md-12 pr-md-1\">\n                            <div className=\"form-group\">\n                              <label>Deadline</label>\n                              <input type=\"text\" className=\"form-control\" placeholder=\"Block No\"  onChange={this.updateDeadline}/>\n                            </div>\n                          </div>\n                        </div>\n\n                      </form>\n                    </div>\n                    <div className=\"card-footer\">\n                      <button type=\"submit\" className=\"btn btn-fill btn-primary\" onClick={this.makeNewVote}>Post</button>\n                    </div>\n                  </div>\n                </div>\n\n              </div>\n            </div>\n\n        </div>\n      </div>\n\n    )\n\n  }\n}\n\nexport default NewVote;\n\nvar abi = [\n  {\n   \"constant\": false,\n   \"inputs\": [\n    {\n     \"name\": \"_name\",\n     \"type\": \"string\"\n    },\n    {\n     \"name\": \"_data\",\n     \"type\": \"string\"\n    },\n    {\n     \"name\": \"_deadline\",\n     \"type\": \"uint64\"\n    }\n   ],\n   \"name\": \"newVoteProposal\",\n   \"outputs\": [\n    {\n     \"name\": \"\",\n     \"type\": \"uint256\"\n    }\n   ],\n   \"payable\": false,\n   \"stateMutability\": \"nonpayable\",\n   \"type\": \"function\"\n  },\n  {\n   \"inputs\": [],\n   \"payable\": false,\n   \"stateMutability\": \"nonpayable\",\n   \"type\": \"constructor\"\n  },\n  {\n   \"anonymous\": false,\n   \"inputs\": [\n    {\n     \"indexed\": false,\n     \"name\": \"proposalID\",\n     \"type\": \"uint256\"\n    },\n    {\n     \"indexed\": false,\n     \"name\": \"issuer\",\n     \"type\": \"address\"\n    },\n    {\n     \"indexed\": false,\n     \"name\": \"deadline\",\n     \"type\": \"uint256\"\n    },\n    {\n     \"indexed\": false,\n     \"name\": \"name\",\n     \"type\": \"string\"\n    },\n    {\n     \"indexed\": false,\n     \"name\": \"data\",\n     \"type\": \"string\"\n    }\n   ],\n   \"name\": \"newProposalIssued\",\n   \"type\": \"event\"\n  },\n  {\n   \"constant\": true,\n   \"inputs\": [\n    {\n     \"name\": \"\",\n     \"type\": \"uint256\"\n    }\n   ],\n   \"name\": \"proposals\",\n   \"outputs\": [\n    {\n     \"name\": \"issuer\",\n     \"type\": \"address\"\n    },\n    {\n     \"name\": \"deadline\",\n     \"type\": \"uint256\"\n    },\n    {\n     \"name\": \"name\",\n     \"type\": \"string\"\n    },\n    {\n     \"name\": \"data\",\n     \"type\": \"string\"\n    }\n   ],\n   \"payable\": false,\n   \"stateMutability\": \"view\",\n   \"type\": \"function\"\n  }\n ]\n","import React, { Fragment, useContext, useEffect } from \"react\";\nimport {  Route, HashRouter, withRouter } from 'react-router-dom'\nimport { Container } from \"reactstrap\"\n\nimport \"./assets/libs/black-dashboard/assets/css/black-dashboard-react.css\"\nimport \"./assets/libs/black-dashboard/assets/css/nucleo-icons.css\"\nimport \"./assets/css/navigation.css\"\n\nimport Navigation from './assets/components/navigation'\n\nimport { getPolls } from \"./constants/calls/GraphQL\"\nimport { store } from './state'\n\nimport Poll from './routes/poll'\nimport Feed from './routes/feed'\nimport New from './routes/new'\n\nfunction App() {\n  let { dispatch, state } = useContext(store)\n\n  useEffect(() => {\n    const retrievePolls = async() => {\n      var pollStream = await getPolls()\n      dispatch({\n        payload: pollStream,\n        type: \"POLL\"\n      })\n    }\n    retrievePolls()\n  }, [])\n\n  return (\n    <main>\n      <Container>\n        <Navigation />\n        <Route path=\"/poll/:address\" component={Poll} />\n        <Route exact path=\"/\" component={Feed} />\n        <Route path=\"/new\" component={New} />\n      </Container>\n    </main>\n  );\n}\n\nexport default withRouter(App);\n","import React, { Fragment } from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { HashRouter, Route } from 'react-router-dom'\nimport * as serviceWorker from './serviceWorker'\n\nimport { StateProvider } from './state'\nimport App from './App';\n\nReactDOM.render(\n  <StateProvider>\n    <HashRouter basename='/'>\n      <Fragment>\n        <App />\n      </Fragment>\n    </HashRouter>\n  </StateProvider>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister()\n"],"sourceRoot":""}