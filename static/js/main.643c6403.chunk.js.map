{"version":3,"sources":["assets/images/logo.png","serviceWorker.js","state/index.js","assets/components/navigation.js","constants/operatives.js","constants/palette.js","assets/components/option.js","constants/calls/GraphQL.js","constants/parameters.js","assets/components/charts/spline.js","assets/components/charts/bar.js","routes/poll.js","routes/feed.js","utils/getWeb3.js","routes/new.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","Boolean","window","location","hostname","match","initialState","polls","store","createContext","Provider","Navigation","react_default","a","createElement","Row","Col","sm","md","size","offset","className","href","src","logo","chartId","str","Object","toConsumableArray","substring","reduceRight","res","_","__","arr","concat","splice","Math","random","length","join","sortVotes","_yesVotes","_noVotes","totalVotes","sort","b","unshift","getRecords","_ref","asyncToGenerator","regenerator_default","mark","_callee","users","history","wrap","_context","prev","next","yes","no","voters","entries","map","_ref2","_ref3","slicedToArray","value","address","push","forEach","index","parseFloat","isNaN","abrupt","stop","_x","apply","this","arguments","createURL","string","replace","toLowerCase","slice","QRCode","require","Option","props","_useState","useState","_useState2","ENS","title","react","class","id","tabindex","role","aria-hidden","type","data-dismiss","aria-label","onClick","dismiss","QUERY_POLL","poll","QUERY_ISSUES","makeRequest","query","fetch","objectSpread","body","method","headers","Content-Type","Accept","JSON","stringify","then","response","json","data","catch","console","log","sent","getPolls","_getPolls","_callee2","result","routeObject","_context2","issues","obj","getPollMetadata","_x2","_getPollMetadata","_callee3","pollName","_context3","WEEKDAYS","CHARTS","BAR_CONFIG","_data","_range","responsive","labels","datasets","borderColor","borderWidth","fill","options","legend","display","scales","xAxes","scaleLabel","labelString","ticks","suggestedMin","max","callback","label","toExponential","SPLINE_CONFIG","lineTension","bezierCurve","yAxes","min","gridLines","drawOnChartArea","SPLINE_STYLE","_gradient","backgroundColor","borderDash","borderDashOffset","pointBackgroundColor","pointBorderColor","pointHoverBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBorderWidth","pointRadius","makeRepeated","repeats","Array","from","Spline","useEffect","_props$pollRecords","pollRecords","dataArray","maxValue","minValue","maxRange","ceil","minRange","ctx","document","getElementById","getContext","range","labelArray","parseInt","gradientStroke","createLinearGradient","addColorStop","Chart","composeAndRender","Bar","_props$pollCount","pollCount","maximumValue","Poll","setRecords","_useState3","_useState4","pollOptions","setOptions","_useState5","_useState6","setCount","_useState7","_useState8","pollDescription","setDescription","_useState9","_useState10","graphState","setGraphState","_useState11","_useState12","setUnique","_useState13","_useState14","_useState15","_useState16","pollTopic","setTopic","state","useContext","useParams","useHistory","undefined","selection","option","pathname","_state$polls$id","optionAaddr","optionBaddr","pollMetadata","records","issuer","getMetadata","data-target","data-toggle","bar","spline","components_option","route","Feed","keys","proposalId","react_router_dom","to","routes_poll","key","loadWeb3","resolve","reject","web3","_web","provider","_web2","ethereum","Web3","enable","t0","providers","HttpProvider","getWeb3","Promise","readyState","addEventListener","NewVote","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","accounts","contract","componentDidMount","instance","eth","getAccounts","Contract","abi","setState","alert","error","makeNewVote","bind","assertThisInitialized","updateQuestion","updateDeadline","question","deadline","methods","newVoteProposal","Date","now","send","event","target","placeholder","onChange","Component","constant","inputs","name","outputs","payable","stateMutability","anonymous","indexed","withRouter","_useContext","dispatch","scrollTo","pollStream","payload","retrievePolls","Container","components_navigation","react_router","path","component","exact","New","ReactDOM","render","children","_useReducer","useReducer","action","_useReducer2","basename","src_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.643c6403.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.0a58105d.png\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { createContext, useReducer } from 'react';\n\nconst initialState = { polls: [] }\nconst store = createContext(initialState)\nconst { Provider } = store\n\nconst StateProvider = ( { children } ) => {\n  const [state, dispatch] = useReducer((state, action) => {\n    switch(action.type) {\n      case 'POLL':\n        return { ...state, polls: action.payload }\n      default:\n        return state\n    };\n  }, initialState)\n\n  return <Provider value={{ state, dispatch }}>{children}</Provider>;\n};\n\nexport { store, StateProvider }\n","import React, { Component } from 'react'\nimport { Dropdown, DropdownToggle } from \"reactstrap\"\nimport { Col, Row } from \"reactstrap\"\n\nimport logo from \"../images/logo.png\"\n\nfunction Navigation() {\n\n  return(\n    <Row>\n      <Col sm=\"12\" md={{ size: 8, offset: 2 }}>\n        <nav className=\"navbar navbar-expand-lg fixed-top col-sm-12 col-md-7\">\n        <div className=\"navbar-wrapper\">\n          <a className=\"navbar-brand\" href={'/'}>\n            <img className=\"navbar-logo\" src={logo} />\n            <span className=\"navbar-title\"> Burn Signal </span>\n          </a>\n        </div>\n        <div className=\"collapse navbar-collapse justify-content-end\">\n          <ul className=\"navbar-nav\">\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" href={'/'}>\n                 Notifications <i className=\"nav-icon tim-icons icon-bell-55\"></i>\n              </a>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" href={'/'}>\n                 Login <i className=\"nav-login-icon tim-icons icon-minimal-down\"></i>\n              </a>\n            </li>\n          </ul>\n        </div>\n    </nav>\n    </Col>\n   </Row>\n  )\n}\n\nexport default Navigation\n","export const chartId = str => [...str.substring(0, 10)].reduceRight((res,_,__,arr) => [...res,arr.splice(~~(Math.random()*arr.length),1)[0]],[]).join('');\n\nexport const sortVotes = (_yesVotes, _noVotes) => {\n  let totalVotes = _yesVotes.concat(_noVotes);\n\n  totalVotes.sort((a,b) => { return a - b });\n  totalVotes.unshift(0);\n\n  return totalVotes;\n}\n\nexport const getRecords = async(users) => {\n  var history = { yes: [], no: [], voters: [] }\n await Object.entries(users)\n       .map(([ index, value ]) => {\n        let { address, yes, no } = value\n\n        history.voters.push(address)\n        yes.value.forEach((value, index) => {\n          value = parseFloat(value)\n          if(isNaN(value)) value = 0\n          history.yes.push(value)\n        })\n        no.value.forEach((value, index) => {\n          value = parseFloat(value) * -1\n          if(isNaN(value)) value = 0\n          history.no.push(value)\n        })\n    })\n  return history\n}\n\nexport const createURL = string => {\n  string = string.replace(/([\\u2700-\\u27BF]|[\\uE000-\\uF8FF]|\\uD83C[\\uDC00-\\uDFFF]|\\uD83D[\\uDC00-\\uDFFF]|[\\u2011-\\u26FF]|\\uD83E[\\uDD10-\\uDDFF])/g, '');\n  string = string.replace(/ /g, '-').toLowerCase();\n\n  if(string.substring(string.length-1, string.length) === \"-\"){\n    string = string.slice(0, string.length-1)\n  } return string.replace('?', '');\n}\n\n// Code to process vote info. Should be easy to replace.\n// This is where BrightID check will be added.\n\nexport async function getVoteInfo(proposalData){\n  var anonymousDeposits = proposalData.data.anonymousDeposits;\n  var noDeposits = anonymousDeposits.length;\n  var voters = {};\n  var totalValue = 0;\n\n  // Check all the deposits for proposal\n  for(var i = 0;i < noDeposits;i++){\n\n    var yesValue = 0, noValue = 0;\n\n    // Add BrightID check. Don't count vote if not.??\n\n    if(anonymousDeposits[i].Choice === 'yes'){\n      yesValue = parseFloat(anonymousDeposits[i].ContriValue);\n    } else {\n      noValue = parseFloat(anonymousDeposits[i].ContriValue);\n    }\n\n    // Check if address has already been counted & initialise if not\n    if(voters[anonymousDeposits[i].SenderAddr] === undefined){\n      voters[anonymousDeposits[i].SenderAddr] = { yesTotalValue: yesValue, noTotalValue: noValue };\n    }else{\n      var newYesValue = voters[anonymousDeposits[i].SenderAddr].yesTotalValue + yesValue;\n      var newNoValue = voters[anonymousDeposits[i].SenderAddr].noTotalValue + noValue;\n      voters[anonymousDeposits[i].SenderAddr] = { yesTotalValue: newYesValue, noTotalValue: newNoValue };\n    }\n\n    totalValue += parseFloat(anonymousDeposits[i].ContriValue);\n  }\n\n  return { voters: voters, totalValue: totalValue}\n}\n\nexport async function getQuadraticTotals(voters){\n  // Quadratic method.\n  // Calculate quadratic total for each voter\n  var yes = 0;\n  var no = 0;\n  var noUniqueAdresses = 0;\n  var totalValue = 0;\n  for(var key in voters){\n    // skip loop if the property is from prototype\n    if (!voters.hasOwnProperty(key)) continue;\n\n    var voter = voters[key];\n    yes += Math.sqrt(voter.yesTotalValue);\n    no += Math.sqrt(voter.noTotalValue);\n    noUniqueAdresses += 1;\n    totalValue = totalValue + voter.yesTotalValue + voter.noTotalValue;\n  }\n  return {\n    yesCount: yes,\n    noCount: no,\n    noUniqueAdresses: noUniqueAdresses,\n    totalValue: totalValue\n  };\n}\n","export const PURPLE_PRIMARY = \"#7533ff\";\nexport const BLUE_PRIMARY = \"#338aff\";\nexport const RED_PRIMARY = \"#ff4233\";\nexport const PINK_PRIMARY = \"#d048b6\";\n","import React, { Fragment, useState } from 'react'\nimport { Dropdown, DropdownToggle } from \"reactstrap\"\nimport { createURL } from \"../../constants/operatives\"\nimport { PINK_PRIMARY } from \"../../constants/palette.js\"\nimport { Col, Row } from \"reactstrap\"\nvar QRCode = require('qrcode.react');\n\nfunction Option(props) {\n  const [ triggerState, setTrigger ] = useState(false)\n  const ENS = `${createURL(props.title)}.burnsignal.eth`\n\n  return (\n    <Fragment>\n      <div class=\"modal fade\" id=\"yes\" tabindex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\n        <div class=\"modal-dialog\" role=\"document\">\n          <div class=\"modal-content\">\n            <div class=\"modal-header\">\n              <h5 class=\"modal-title\">{props.title}</h5>\n              <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" onClick={props.dismiss}>\n                <span aria-hidden=\"true\">&times;</span>\n              </button>\n            </div>\n            <div class=\"modal-body\">\n              Vote <span id=\"pink\">YES</span> by sending any amount of ETH to <br/>\n              <a href='https://etherscan.io'><span id=\"pink\">yes</span>.{ENS}</a>\n              <div class=\"poll-qr\">\n                <QRCode value={props.address.yes} />\n              </div>\n            To ensure that you vote counts, please link your ethereum account\n            to your BrightID account at  <a href=\"https://ethereum.brightid.org\">ethereum.brightid.org</a>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"modal fade\" id=\"no\" tabindex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\n        <div class=\"modal-dialog\" role=\"document\">\n          <div class=\"modal-content\">\n            <div class=\"modal-header\">\n              <h5 class=\"modal-title\">{props.title}</h5>\n              <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" onClick={props.dismiss}>\n                <span aria-hidden=\"true\">&times;</span>\n              </button>\n            </div>\n            <div class=\"modal-body\">\n              Vote <span id=\"pink\">NO</span> by sending any amount of ETH to <br/>\n              <a href='https://etherscan.io'><span id=\"pink\">no</span>.{ENS}</a>\n              <div class=\"poll-qr\">\n                <QRCode value={props.address.no} />\n              </div>\n            To ensure that you vote counts, please link your ethereum account\n            to your BrightID account at  <a href=\"https://ethereum.brightid.org\">ethereum.brightid.org</a>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  )\n}\n\nexport default Option\n","import { createURL } from '../operatives'\n\nconst QUERY_POLL = poll => `{ polls(where: { id: \"${poll}\" }) { yes no users { address yes { contributions timestamps total value sqrt } no { contributions timestamps total value sqrt } } } }`\nconst QUERY_ISSUES = `{ issues(where: { title_not_contains: \"fae\" }) { id body title issuer deadline optionBaddr optionAaddr } }`\nconst BURN_SUBGRAPH_ENDPOINT = \"https://api.thegraph.com/subgraphs/name/burnsignal/proof-of-concept\"\n\nconst requestHeaders = body => ({\n  method: 'POST',\n  headers: {\n    'Content-Type': 'application/json',\n    'Accept': 'application/json',\n  }, body: JSON.stringify({\n    query: body\n  })\n})\n\nconst makeRequest = async(query) => {\n  return await fetch(BURN_SUBGRAPH_ENDPOINT,\n    { ...requestHeaders(query)})\n    .then(response =>\n      response.json())\n    .then(data => data)\n    .catch(console.log)\n}\n\nexport async function getPolls() {\n  const result = await makeRequest(QUERY_ISSUES)\n  const routeObject = {}\n\n  result.data.issues.forEach(obj => {\n    routeObject[createURL(obj.title)] = { ...obj }\n  }); return routeObject;\n}\n\nexport async function getPollMetadata(pollName){\n  const result = await makeRequest(QUERY_POLL(pollName))\n  if(result.data.polls.length == 0){\n    return { yes: 0, no: 0, users: [] }\n  } else return result.data.polls[0]\n}\n","import { PINK_PRIMARY } from \"./palette.js\"\n\nexport const WEEKDAYS =  ['Monday', 'Tuesday', 'Wendsday', 'Thursday', 'Friday', 'Saturday', 'Sunday' ]\n\nexport const CHARTS = {\n  BAR_CONFIG: (_data, _range) => ({\n    type: 'horizontalBar',\n    responsive: true,\n    data: {\n      labels: ['Yes','No' ],\n      datasets: [{\n        data: _data,\n        borderColor: PINK_PRIMARY,\n        borderWidth: 2,\n        fill: true\n      }]\n    },\n    options: {\n      legend: { display: false },\n      scales: {\n        xAxes: [{\n          scaleLabel: {\n            display: true,\n            labelString: \"Wei (ETH)\"\n          },\n          ticks: {\n            suggestedMin: 0,\n            max: _range,\n            callback: function(label, index, labels) {\n              if(label > 1e8 || label < (-1 * 1e8)){\n                 return label.toExponential()\n              } else return label;\n            }\n          }\n        }]\n      },\n    }\n  }),\n  SPLINE_CONFIG: (_data, _range) => ({\n    options: {\n      lineTension: 100,\n      bezierCurve: true,\n      legend: { display: false },\n      scales: {\n        yAxes: [{\n          id:'yAxis1',\n          scaleLabel: {\n            labelString: \"Wei (ETH)\",\n            display: true\n          },\n          ticks: {\n            min: (_range * -1),\n            max: _range,\n            callback: function(label, index, labels) {\n              if(label > 1e8 || label < (-1 * 1e8)){\n                return label.toExponential()\n              } else return label;\n            }\n          }\n        },\n        {\n          id:'yAxis2',\n          labels: ['', 'Yes', '', 'No', ''],\n          type:\"category\",\n          gridLines: {\n           drawOnChartArea: false,\n           display: false\n          },\n       }]\n      },\n    },\n    type: 'line',\n    data: _data,\n  }),\n  SPLINE_STYLE: _gradient => ({\n    label: \"Data\",\n    fill: true,\n    backgroundColor: _gradient,\n    borderColor: PINK_PRIMARY,\n    borderWidth: 2,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    pointBackgroundColor: PINK_PRIMARY,\n    pointBorderColor:'rgba(255,255,255,0)',\n    pointHoverBackgroundColor: PINK_PRIMARY,\n    pointBorderWidth: 20,\n    pointHoverRadius: 4,\n    pointHoverBorderWidth: 15,\n    pointRadius: 4,\n  })\n}\n","import React, { Fragment, useEffect, useState } from 'react'\nimport Chart from 'chart.js'\n\nimport { WEEKDAYS, CHARTS } from \"../../../constants/parameters.js\"\nimport { sortVotes } from \"../../../constants/operatives.js\"\n\nconst makeRepeated = (arr, repeats) =>\n  [].concat(...Array.from({ length: repeats }, () => arr));\n\nfunction Spline(props){\n  let { chartId } = props\n\n  useEffect(() => {\n    const composeAndRender = () => {\n      let { yes, no } = props.pollRecords\n\n      const dataArray = sortVotes(yes, no)\n\n      var maxValue = Math.max(...dataArray)\n      var minValue = Math.min(...dataArray)\n      var maxRange = Math.ceil((((maxValue * 0.2) + maxValue) /10 ) * 10)\n      var minRange = Math.ceil((((minValue * 0.2) + minValue) /10 ) * 10) * -1\n\n      const ctx = document.getElementById(chartId).getContext(\"2d\")\n\n      let range = minRange > maxRange ? minRange : maxRange\n\n      const labelArray = dataArray.length > WEEKDAYS.length ?\n      makeRepeated(WEEKDAYS, parseInt(dataArray.length/WEEKDAYS.length)) :\n      WEEKDAYS.slice(0, dataArray.length)\n\n      var gradientStroke = ctx.createLinearGradient(0,337.5,0, 25)\n\n      gradientStroke.addColorStop(1, 'rgba(255,51,138,0.225)')\n      gradientStroke.addColorStop(0.7, 'rgba(255,51,138,0.2)')\n      gradientStroke.addColorStop(0.5, 'rgba(255,51,138,0.125)')\n      gradientStroke.addColorStop(0.2, 'rgba(255,51,138,0.075)')\n      gradientStroke.addColorStop(0, 'rgba(119,52,169,0)')\n\n      var data = {\n        labels: labelArray,\n        datasets: [{\n          ...CHARTS.SPLINE_STYLE(gradientStroke),\n          data: dataArray,\n        }]\n      }\n\n      new Chart(ctx, { ...CHARTS.SPLINE_CONFIG(data, range) })\n    }\n    composeAndRender()\n  }, [ ])\n\n  return(\n    <Fragment>\n      <canvas id={chartId}> </canvas>\n    </Fragment>\n  )\n}\n\nexport default Spline;\n","import React, { Fragment, useEffect, useState } from 'react'\nimport Chart from 'chart.js';\n\nimport { CHARTS } from \"../../../constants/parameters.js\";\n\nfunction Bar(props) {\n  const { chartId } = props;\n\n  useEffect(() => {\n    const composeAndRender = () => {\n      let { yes, no } = props.pollCount;\n\n      const ctx = document.getElementById(chartId).getContext(\"2d\")\n      const maximumValue = yes > no ? yes : no\n      const range = ( maximumValue * 0.20 ) + maximumValue\n      const data = [ yes, no ]\n\n      new Chart(ctx, { ...CHARTS.BAR_CONFIG(data, range) })\n    }\n    composeAndRender()\n  }, [ ])\n\n  return(\n    <Fragment>\n      <canvas id={chartId}> </canvas>\n    </Fragment>\n  );\n}\n\nexport default Bar;\n","import React, { Fragment, useContext, useState, useEffect } from 'react';\nimport { useParams, useHistory } from \"react-router-dom\"\nimport { Row, Col } from \"reactstrap\"\n\nimport { getVoteInfo, getRecords } from '../constants/operatives'\nimport { getPollMetadata } from \"../constants/calls/GraphQL\"\nimport { chartId } from \"../constants/operatives\"\nimport { store } from '../state'\n\nimport Spline from '../assets/components/charts/spline'\nimport Option from '../assets/components/option'\nimport Bar from '../assets/components/charts/bar'\n\nimport \"../assets/css/poll.css\"\n\nfunction Poll(props){\n  const [ pollRecords, setRecords ] = useState({ yes: [], no: [] })\n  const [ pollOptions, setOptions ] = useState({ yes: \"\", no : \"\" })\n  const [ pollCount, setCount ] = useState({ yes: 0, no: 0 })\n  const [ pollDescription , setDescription ] = useState(\"\")\n  const [ graphState, setGraphState ] = useState(false)\n  const [ uniqueAddresses, setUnique ] = useState(0)\n  const [ totalPledged, setPledged ] = useState(0)\n  const [ pollTopic , setTopic ] = useState(\"\")\n\n  let { state } = useContext(store)\n  let { address } = useParams()\n  let history = useHistory()\n\n  const id = props.location !== undefined ? address : props.id\n\n  function selection(option) {\n    history.push(`${props.location.pathname}/${option}`)\n  }\n\n  function dismiss() {\n    let route = props.location.pathname.replace('/yes', '')\n    route = route.replace('/no', '')\n    history.push(route)\n  }\n\n  useEffect(() => {\n    const getMetadata = async() => {\n      if(state.polls[id] !== undefined){\n        let { title, body, issuer, optionAaddr, optionBaddr } = state.polls[id]\n        var pollMetadata = await getPollMetadata(title)\n\n        let { yes, users, no } = pollMetadata\n        let records = await getRecords(users)\n\n        setCount({ yes: parseInt(yes), no: parseInt(no) })\n        setOptions({ yes: optionAaddr, no: optionBaddr })\n        setUnique(records.voters.length)\n        setRecords({ ...records })\n        setDescription(body)\n        setGraphState(true)\n        setTopic(title)\n        }\n     }\n    getMetadata()\n  }, [ state ])\n\n  return(\n     <div className=\"proposalComponent\">\n      <Row>\n        <Col sm=\"12\" md={{ size: 8, offset: 2 }}>\n          <div className=\"card\">\n            <div className=\"card-header\">\n              <div className=\"poll-title\">{pollTopic}</div>\n            </div>\n            <div className=\"card-body\">\n              <div className=\"poll-description\">{pollDescription}</div>\n              <div className=\"vote-options\">\n                <button type=\"button\" data-target=\"#yes\" data-toggle=\"modal\" className=\"btn btn-primary btn-simple\" onClick={() => selection(\"yes\")}>Yes</button>\n                <button type=\"button\" data-target=\"#no\" data-toggle=\"modal\" className=\"btn btn-primary btn-simple\" onClick={() => selection(\"no\")}>No</button>\n              </div>\n            </div>\n          </div>\n        </Col>\n      </Row>\n      <Row>\n        <Col sm=\"12\" md={{ size: 8, offset: 2 }}>\n          <div className=\"card\">\n            <div class=\"card-header\">\n              <h3 class=\"card-category\">Results</h3>\n            </div>\n            <div className=\"card-body\">\n              {graphState && (\n                <Bar chartId={chartId(id)} pollCount={pollCount}/>\n              )}\n            </div>\n          </div>\n        </Col>\n      </Row>\n      <Row>\n        <Col sm=\"12\" md={{ size: 8, offset: 2 }}>\n          <div className=\"card\">\n            <div class=\"card-header\">\n              <h3 class=\"card-category\">History</h3>\n            </div>\n            <div class=\"card-body\">\n              {graphState && (\n                <Spline chartId={chartId(id)} pollRecords={pollRecords} />\n              )}\n            </div>\n          </div>\n        </Col>\n      </Row>\n      <Option dismiss={dismiss} title={pollTopic} address={pollOptions} />\n    </div>\n  )\n}\n\nexport default Poll\n","import React, { Fragment, useContext, useEffect } from 'react';\nimport { Route, Link } from 'react-router-dom'\n\nimport { store } from '../state'\nimport Proposal from './poll';\n\nfunction Feed() {\n  let { state } = useContext(store)\n\n  return (\n    <Fragment>\n      {Object.keys(state.polls).map((proposalId, index) => (\n        <Link to={`/poll/${proposalId}`}>\n          <Proposal key={proposalId} id={proposalId}/>\n        </Link>\n      ))}\n    </Fragment>\n  )\n}\n\nexport default Feed\n","import Web3 from \"web3\";\n\nconst getWeb3 = () =>\n  new Promise((resolve, reject) => {\n\n    // This is to get round routing issue\n    if(document.readyState === \"complete\"){\n      loadWeb3(resolve, reject);\n      console.log('Web3 Loaded Ok');\n    }\n\n    // Wait for loading completion to avoid race conditions with web3 injection timing.\n    window.addEventListener(\"load\", async () => {\n      loadWeb3(resolve, reject);\n      console.log('Web3 Loaded.');\n    });\n  });\n\nasync function loadWeb3(resolve, reject){\n  // Modern dapp browsers...\n  if (window.ethereum) {\n    const web3 = new Web3(window.ethereum);\n    try {\n      // Request account access if needed\n      await window.ethereum.enable();\n      // Acccounts now exposed\n      resolve(web3);\n    } catch (error) {\n      reject(error);\n    }\n  }\n  // Legacy dapp browsers...\n  else if (window.web3) {\n    // Use Mist/MetaMask's provider.\n    const web3 = window.web3;\n    console.log(\"Injected web3 detected.\");\n    resolve(web3);\n  }\n  // Fallback to localhost; use dev console port by default...\n  else {\n    const provider = new Web3.providers.HttpProvider(\n      \"http://127.0.0.1:8545\"\n    );\n    const web3 = new Web3(provider);\n    console.log(\"No web3 instance injected, using Local web3.\");\n    resolve(web3);\n  }\n}\n\nexport default getWeb3;\n","import React, { Component } from 'react';\nimport getWeb3 from \"../utils/getWeb3\";\n\nclass NewVote extends Component {\n  // Allows user to create a new Proposal/Question/Vote/Whatever it's agreed to be called.\n  // Uses hardcoded contract address.\n  // Deadline not currently functioning.\n  state = { web3: null, accounts: null, contract: null };\n\n  constructor(props) {\n    super(props);\n\n    this.makeNewVote = this.makeNewVote.bind(this);\n    this.updateQuestion = this.updateQuestion.bind(this);\n    this.updateDeadline = this.updateDeadline.bind(this);\n  }\n\n  componentDidMount = async () => {\n    try {\n      console.log('Loading web3...');\n      // Get network provider and web3 instance.\n      const web3 = await getWeb3();\n\n      // Use web3 to get the user's accounts.\n      const accounts = await web3.eth.getAccounts();\n\n\n      let address = '0x6936b81d7629378aabddcf882b2a7fdfff1cd962';  // Taken from old repo, assume this is the Ropstein deployed\n\n      const instance = new web3.eth.Contract(abi, address);\n\n      // Set web3, accounts, and contract to the state, and then proceed with an\n      // example of interacting with the contract's methods.\n      this.setState({ web3, accounts, contract: instance });\n\n    } catch (error) {\n      alert(\n        'Error loading The Graph',\n      );\n      console.error(error);\n    }\n  };\n\n  async makeNewVote(){\n    console.log('New Vote');\n    console.log(this.state.question);\n    console.log(this.state.deadline);\n    console.log('Sending transaction...');\n    await this.state.contract.methods.newVoteProposal(this.state.question,'Here is some data', (Date.now() + 3600*1000)).send({ from: this.state.accounts[0] });\n    console.log('Done?')\n  }\n\n  updateQuestion(event) {\n    this.setState({question: event.target.value});\n  }\n\n  updateDeadline(event) {\n    this.setState({deadline: event.target.value});\n  }\n\n  render() {\n    return(\n\n      <div className=\"App\">\n\n        <div className=\"main-panel\">\n\n            <div className=\"content\">\n              <div className=\"row\">\n                <div className=\"col-md-6\">\n                  <div className=\"card\">\n                    <div className=\"card-header\">\n                      <h5 className=\"title\">Ask a question...</h5>\n                    </div>\n                    <div className=\"card-body\">\n                      <form>\n\n                        <div className=\"row\">\n                          <div className=\"col-md-12 pr-md-1\">\n                            <div className=\"form-group\">\n                              <label>Your Question</label>\n                              <input type=\"text\" className=\"form-control\" placeholder=\"Ask Away\" onChange={this.updateQuestion}/>\n                            </div>\n                          </div>\n\n                        </div>\n                        <div className=\"row\">\n                          <div className=\"col-md-12 pr-md-1\">\n                            <div className=\"form-group\">\n                              <label>Deadline</label>\n                              <input type=\"text\" className=\"form-control\" placeholder=\"Block No\"  onChange={this.updateDeadline}/>\n                            </div>\n                          </div>\n                        </div>\n\n                      </form>\n                    </div>\n                    <div className=\"card-footer\">\n                      <button type=\"submit\" className=\"btn btn-fill btn-primary\" onClick={this.makeNewVote}>Post</button>\n                    </div>\n                  </div>\n                </div>\n\n              </div>\n            </div>\n\n        </div>\n      </div>\n\n    )\n\n  }\n}\n\nexport default NewVote;\n\nvar abi = [\n  {\n   \"constant\": false,\n   \"inputs\": [\n    {\n     \"name\": \"_name\",\n     \"type\": \"string\"\n    },\n    {\n     \"name\": \"_data\",\n     \"type\": \"string\"\n    },\n    {\n     \"name\": \"_deadline\",\n     \"type\": \"uint64\"\n    }\n   ],\n   \"name\": \"newVoteProposal\",\n   \"outputs\": [\n    {\n     \"name\": \"\",\n     \"type\": \"uint256\"\n    }\n   ],\n   \"payable\": false,\n   \"stateMutability\": \"nonpayable\",\n   \"type\": \"function\"\n  },\n  {\n   \"inputs\": [],\n   \"payable\": false,\n   \"stateMutability\": \"nonpayable\",\n   \"type\": \"constructor\"\n  },\n  {\n   \"anonymous\": false,\n   \"inputs\": [\n    {\n     \"indexed\": false,\n     \"name\": \"proposalID\",\n     \"type\": \"uint256\"\n    },\n    {\n     \"indexed\": false,\n     \"name\": \"issuer\",\n     \"type\": \"address\"\n    },\n    {\n     \"indexed\": false,\n     \"name\": \"deadline\",\n     \"type\": \"uint256\"\n    },\n    {\n     \"indexed\": false,\n     \"name\": \"name\",\n     \"type\": \"string\"\n    },\n    {\n     \"indexed\": false,\n     \"name\": \"data\",\n     \"type\": \"string\"\n    }\n   ],\n   \"name\": \"newProposalIssued\",\n   \"type\": \"event\"\n  },\n  {\n   \"constant\": true,\n   \"inputs\": [\n    {\n     \"name\": \"\",\n     \"type\": \"uint256\"\n    }\n   ],\n   \"name\": \"proposals\",\n   \"outputs\": [\n    {\n     \"name\": \"issuer\",\n     \"type\": \"address\"\n    },\n    {\n     \"name\": \"deadline\",\n     \"type\": \"uint256\"\n    },\n    {\n     \"name\": \"name\",\n     \"type\": \"string\"\n    },\n    {\n     \"name\": \"data\",\n     \"type\": \"string\"\n    }\n   ],\n   \"payable\": false,\n   \"stateMutability\": \"view\",\n   \"type\": \"function\"\n  }\n ]\n","import React, { Fragment, useContext, useEffect } from \"react\";\nimport {  Route, HashRouter, withRouter } from 'react-router-dom'\nimport { Container } from \"reactstrap\"\n\nimport \"./assets/libs/black-dashboard/assets/css/black-dashboard-react.css\"\nimport \"./assets/libs/black-dashboard/assets/css/nucleo-icons.css\"\nimport \"./assets/css/navigation.css\"\n\nimport Navigation from './assets/components/navigation'\nimport Option from './assets/components/option'\n\nimport { getPolls } from \"./constants/calls/GraphQL\"\nimport { store } from './state'\n\nimport Poll from './routes/poll'\nimport Feed from './routes/feed'\nimport New from './routes/new'\n\nfunction App(props) {\n  let { dispatch, state } = useContext(store)\n\n  useEffect(() => window.scrollTo(0, 0), [ props.location ])\n\n  useEffect(() => {\n    const retrievePolls = async() => {\n      var pollStream = await getPolls()\n      dispatch({\n        payload: pollStream,\n        type: \"POLL\"\n      })\n    }\n    retrievePolls()\n  }, [])\n\n  return (\n    <main>\n      <Container>\n        <Navigation />\n        <Route path=\"/poll/:address\" component={Poll} />\n        <Route exact path=\"/\" component={Feed} />\n        <Route path=\"/new\" component={New} />\n      </Container>\n    </main>\n  );\n}\n\nexport default withRouter(App);\n","import React, { Fragment } from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { HashRouter, Route } from 'react-router-dom'\nimport * as serviceWorker from './serviceWorker'\n\nimport { StateProvider } from './state'\nimport App from './App';\n\nReactDOM.render(\n  <StateProvider>\n    <HashRouter basename='/'>\n      <Fragment>\n        <App />\n      </Fragment>\n    </HashRouter>\n  </StateProvider>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister()\n"],"sourceRoot":""}